
#include "stdafx.h"
#include "ErrorStrings.h"

LPCTSTR _DErr_Default(DWORD aError)
{
  return _T("???");
}


LPCTSTR DErrFACILITY(HRESULT aError)
{
#ifdef DISPLAY_FACILITY
  switch(HRESULT_FACILITY(aError)) {
    case 82: return _T("FACILITY_XPS");
    case 51: return _T("FACILITY_WINRM");
    case 36: return _T("FACILITY_WINDOWSUPDATE");
    case 80: return _T("FACILITY_WINDOWS_DEFENDER");
    case 24: return _T("FACILITY_WINDOWS_CE");
    case 8: return _T("FACILITY_WINDOWS");
    case 56: return _T("FACILITY_USERMODE_VOLMGR");
    case 55: return _T("FACILITY_USERMODE_VIRTUALIZATION");
    case 58: return _T("FACILITY_USERMODE_VHD");
    case 19: return _T("FACILITY_URT");
    case 22: return _T("FACILITY_UMI");
    case 42: return _T("FACILITY_UI");
    case 41: return _T("FACILITY_TPM_SOFTWARE");
    case 40: return _T("FACILITY_TPM_SERVICES");
    case 23: return _T("FACILITY_SXS");
    case 3: return _T("FACILITY_STORAGE");
    case 34: return _T("FACILITY_STATE_MANAGEMENT");
    case 16: return _T("FACILITY_SCARD");
    case 39: return _T("FACILITY_SHELL");
    case 15: return _T("FACILITY_SETUPAPI");
    case 9: return _T("FACILITY_SECURITY | FACILITY_SSPI");
    case 60: return _T("FACILITY_SDIAG");
    case 1: return _T("FACILITY_RPC");
    case 83: return _T("FACILITY_RAS");
    case 48: return _T("FACILITY_PLA");
    case 81: return _T("FACILITY_OPC");
    case 7: return _T("FACILITY_WIN32");
    case 10: return _T("FACILITY_CONTROL");
    case 61: return _T("FACILITY_WEBSERVICES");
    case 0: return _T("FACILITY_NULL");
    case 52: return _T("FACILITY_NDIS");
    case 35: return _T("FACILITY_METADIRECTORY");
    case 14: return _T("FACILITY_MSMQ");
    case 13: return _T("FACILITY_MEDIASERVER");
    case 84: return _T("FACILITY_MBN");
    case 12: return _T("FACILITY_INTERNET");
    case 4: return _T("FACILITY_ITF");
    case 53: return _T("FACILITY_USERMODE_HYPERVISOR");
    case 25: return _T("FACILITY_HTTP");
    case 38: return _T("FACILITY_GRAPHICS");
    case 50: return _T("FACILITY_FWP");
    case 49: return _T("FACILITY_FVE");
    case 31: return _T("FACILITY_USERMODE_FILTER_MANAGER");
    case 21: return _T("FACILITY_DPLAY");
    case 2: return _T("FACILITY_DISPATCH");
    case 37: return _T("FACILITY_DIRECTORYSERVICE");
    case 33: return _T("FACILITY_CONFIGURATION");
    case 17: return _T("FACILITY_COMPLUS");
    case 26: return _T("FACILITY_USERMODE_COMMONLOG");
    case 54: return _T("FACILITY_CMI");
    case 11: return _T("FACILITY_CERT");
    case 57: return _T("FACILITY_BCD");
    case 32: return _T("FACILITY_BACKGROUNDCOPY");
    case 20: return _T("FACILITY_ACS");
    case 18: return _T("FACILITY_AAF");
  };
#endif
  return _T("");
}

LPCTSTR DErrWin32(LRESULT aError)
{
#ifdef DISPLAY_WIN32_ERR
  switch(aError) {
    case 0: return _T("ERROR_SUCCESS");
    case 1: return _T("ERROR_INVALID_FUNCTION");
    case 2: return _T("ERROR_FILE_NOT_FOUND");
    case 3: return _T("ERROR_PATH_NOT_FOUND");
    case 4: return _T("ERROR_TOO_MANY_OPEN_FILES");
    case 5: return _T("ERROR_ACCESS_DENIED");
    case 6: return _T("ERROR_INVALID_HANDLE");
    case 7: return _T("ERROR_ARENA_TRASHED");
    case 8: return _T("ERROR_NOT_ENOUGH_MEMORY");
    case 9: return _T("ERROR_INVALID_BLOCK");
    case 10: return _T("ERROR_BAD_ENVIRONMENT");
    case 11: return _T("ERROR_BAD_FORMAT");
    case 12: return _T("ERROR_INVALID_ACCESS");
    case 13: return _T("ERROR_INVALID_DATA");
    case 14: return _T("ERROR_OUTOFMEMORY");
    case 15: return _T("ERROR_INVALID_DRIVE");
    case 16: return _T("ERROR_CURRENT_DIRECTORY");
    case 17: return _T("ERROR_NOT_SAME_DEVICE");
    case 18: return _T("ERROR_NO_MORE_FILES");
    case 19: return _T("ERROR_WRITE_PROTECT");
    case 20: return _T("ERROR_BAD_UNIT");
    case 21: return _T("ERROR_NOT_READY");
    case 22: return _T("ERROR_BAD_COMMAND");
    case 23: return _T("ERROR_CRC");
    case 24: return _T("ERROR_BAD_LENGTH");
    case 25: return _T("ERROR_SEEK");
    case 26: return _T("ERROR_NOT_DOS_DISK");
    case 27: return _T("ERROR_SECTOR_NOT_FOUND");
    case 28: return _T("ERROR_OUT_OF_PAPER");
    case 29: return _T("ERROR_WRITE_FAULT");
    case 30: return _T("ERROR_READ_FAULT");
    case 31: return _T("ERROR_GEN_FAILURE");
    case 32: return _T("ERROR_SHARING_VIOLATION");
    case 33: return _T("ERROR_LOCK_VIOLATION");
    case 34: return _T("ERROR_WRONG_DISK");
    case 36: return _T("ERROR_SHARING_BUFFER_EXCEEDED");
    case 38: return _T("ERROR_HANDLE_EOF");
    case 39: return _T("ERROR_HANDLE_DISK_FULL");
    case 50: return _T("ERROR_NOT_SUPPORTED");
    case 51: return _T("ERROR_REM_NOT_LIST");
    case 52: return _T("ERROR_DUP_NAME");
    case 53: return _T("ERROR_BAD_NETPATH");
    case 54: return _T("ERROR_NETWORK_BUSY");
    case 55: return _T("ERROR_DEV_NOT_EXIST");
    case 56: return _T("ERROR_TOO_MANY_CMDS");
    case 57: return _T("ERROR_ADAP_HDW_ERR");
    case 58: return _T("ERROR_BAD_NET_RESP");
    case 59: return _T("ERROR_UNEXP_NET_ERR");
    case 60: return _T("ERROR_BAD_REM_ADAP");
    case 61: return _T("ERROR_PRINTQ_FULL");
    case 62: return _T("ERROR_NO_SPOOL_SPACE");
    case 63: return _T("ERROR_PRINT_CANCELLED");
    case 64: return _T("ERROR_NETNAME_DELETED");
    case 65: return _T("ERROR_NETWORK_ACCESS_DENIED");
    case 66: return _T("ERROR_BAD_DEV_TYPE");
    case 67: return _T("ERROR_BAD_NET_NAME");
    case 68: return _T("ERROR_TOO_MANY_NAMES");
    case 69: return _T("ERROR_TOO_MANY_SESS");
    case 70: return _T("ERROR_SHARING_PAUSED");
    case 71: return _T("ERROR_REQ_NOT_ACCEP");
    case 72: return _T("ERROR_REDIR_PAUSED");
    case 80: return _T("ERROR_FILE_EXISTS");
    case 82: return _T("ERROR_CANNOT_MAKE");
    case 83: return _T("ERROR_FAIL_I24");
    case 84: return _T("ERROR_OUT_OF_STRUCTURES");
    case 85: return _T("ERROR_ALREADY_ASSIGNED");
    case 86: return _T("ERROR_INVALID_PASSWORD");
    case 87: return _T("ERROR_INVALID_PARAMETER");
    case 88: return _T("ERROR_NET_WRITE_FAULT");
    case 89: return _T("ERROR_NO_PROC_SLOTS");
    case 100: return _T("ERROR_TOO_MANY_SEMAPHORES");
    case 101: return _T("ERROR_EXCL_SEM_ALREADY_OWNED");
    case 102: return _T("ERROR_SEM_IS_SET");
    case 103: return _T("ERROR_TOO_MANY_SEM_REQUESTS");
    case 104: return _T("ERROR_INVALID_AT_INTERRUPT_TIME");
    case 105: return _T("ERROR_SEM_OWNER_DIED");
    case 106: return _T("ERROR_SEM_USER_LIMIT");
    case 107: return _T("ERROR_DISK_CHANGE");
    case 108: return _T("ERROR_DRIVE_LOCKED");
    case 109: return _T("ERROR_BROKEN_PIPE");
    case 110: return _T("ERROR_OPEN_FAILED");
    case 111: return _T("ERROR_BUFFER_OVERFLOW");
    case 112: return _T("ERROR_DISK_FULL");
    case 113: return _T("ERROR_NO_MORE_SEARCH_HANDLES");
    case 114: return _T("ERROR_INVALID_TARGET_HANDLE");
    case 117: return _T("ERROR_INVALID_CATEGORY");
    case 118: return _T("ERROR_INVALID_VERIFY_SWITCH");
    case 119: return _T("ERROR_BAD_DRIVER_LEVEL");
    case 120: return _T("ERROR_CALL_NOT_IMPLEMENTED");
    case 121: return _T("ERROR_SEM_TIMEOUT");
    case 122: return _T("ERROR_INSUFFICIENT_BUFFER");
    case 123: return _T("ERROR_INVALID_NAME");
    case 124: return _T("ERROR_INVALID_LEVEL");
    case 125: return _T("ERROR_NO_VOLUME_LABEL");
    case 126: return _T("ERROR_MOD_NOT_FOUND");
    case 127: return _T("ERROR_PROC_NOT_FOUND");
    case 128: return _T("ERROR_WAIT_NO_CHILDREN");
    case 129: return _T("ERROR_CHILD_NOT_COMPLETE");
    case 130: return _T("ERROR_DIRECT_ACCESS_HANDLE");
    case 131: return _T("ERROR_NEGATIVE_SEEK");
    case 132: return _T("ERROR_SEEK_ON_DEVICE");
    case 133: return _T("ERROR_IS_JOIN_TARGET");
    case 134: return _T("ERROR_IS_JOINED");
    case 135: return _T("ERROR_IS_SUBSTED");
    case 136: return _T("ERROR_NOT_JOINED");
    case 137: return _T("ERROR_NOT_SUBSTED");
    case 138: return _T("ERROR_JOIN_TO_JOIN");
    case 139: return _T("ERROR_SUBST_TO_SUBST");
    case 140: return _T("ERROR_JOIN_TO_SUBST");
    case 141: return _T("ERROR_SUBST_TO_JOIN");
    case 142: return _T("ERROR_BUSY_DRIVE");
    case 143: return _T("ERROR_SAME_DRIVE");
    case 144: return _T("ERROR_DIR_NOT_ROOT");
    case 145: return _T("ERROR_DIR_NOT_EMPTY");
    case 146: return _T("ERROR_IS_SUBST_PATH");
    case 147: return _T("ERROR_IS_JOIN_PATH");
    case 148: return _T("ERROR_PATH_BUSY");
    case 149: return _T("ERROR_IS_SUBST_TARGET");
    case 150: return _T("ERROR_SYSTEM_TRACE");
    case 151: return _T("ERROR_INVALID_EVENT_COUNT");
    case 152: return _T("ERROR_TOO_MANY_MUXWAITERS");
    case 153: return _T("ERROR_INVALID_LIST_FORMAT");
    case 154: return _T("ERROR_LABEL_TOO_LONG");
    case 155: return _T("ERROR_TOO_MANY_TCBS");
    case 156: return _T("ERROR_SIGNAL_REFUSED");
    case 157: return _T("ERROR_DISCARDED");
    case 158: return _T("ERROR_NOT_LOCKED");
    case 159: return _T("ERROR_BAD_THREADID_ADDR");
    case 160: return _T("ERROR_BAD_ARGUMENTS");
    case 161: return _T("ERROR_BAD_PATHNAME");
    case 162: return _T("ERROR_SIGNAL_PENDING");
    case 164: return _T("ERROR_MAX_THRDS_REACHED");
    case 167: return _T("ERROR_LOCK_FAILED");
    case 170: return _T("ERROR_BUSY");
    case 173: return _T("ERROR_CANCEL_VIOLATION");
    case 174: return _T("ERROR_ATOMIC_LOCKS_NOT_SUPPORTED");
    case 180: return _T("ERROR_INVALID_SEGMENT_NUMBER");
    case 182: return _T("ERROR_INVALID_ORDINAL");
    case 183: return _T("ERROR_ALREADY_EXISTS");
    case 186: return _T("ERROR_INVALID_FLAG_NUMBER");
    case 187: return _T("ERROR_SEM_NOT_FOUND");
    case 188: return _T("ERROR_INVALID_STARTING_CODESEG");
    case 189: return _T("ERROR_INVALID_STACKSEG");
    case 190: return _T("ERROR_INVALID_MODULETYPE");
    case 191: return _T("ERROR_INVALID_EXE_SIGNATURE");
    case 192: return _T("ERROR_EXE_MARKED_INVALID");
    case 193: return _T("ERROR_BAD_EXE_FORMAT");
    case 194: return _T("ERROR_ITERATED_DATA_EXCEEDS_64k");
    case 195: return _T("ERROR_INVALID_MINALLOCSIZE");
    case 196: return _T("ERROR_DYNLINK_FROM_INVALID_RING");
    case 197: return _T("ERROR_IOPL_NOT_ENABLED");
    case 198: return _T("ERROR_INVALID_SEGDPL");
    case 199: return _T("ERROR_AUTODATASEG_EXCEEDS_64k");
    case 200: return _T("ERROR_RING2SEG_MUST_BE_MOVABLE");
    case 201: return _T("ERROR_RELOC_CHAIN_XEEDS_SEGLIM");
    case 202: return _T("ERROR_INFLOOP_IN_RELOC_CHAIN");
    case 203: return _T("ERROR_ENVVAR_NOT_FOUND");
    case 205: return _T("ERROR_NO_SIGNAL_SENT");
    case 206: return _T("ERROR_FILENAME_EXCED_RANGE");
    case 207: return _T("ERROR_RING2_STACK_IN_USE");
    case 208: return _T("ERROR_META_EXPANSION_TOO_LONG");
    case 209: return _T("ERROR_INVALID_SIGNAL_NUMBER");
    case 210: return _T("ERROR_THREAD_1_INACTIVE");
    case 212: return _T("ERROR_LOCKED");
    case 214: return _T("ERROR_TOO_MANY_MODULES");
    case 215: return _T("ERROR_NESTING_NOT_ALLOWED");
    case 216: return _T("ERROR_EXE_MACHINE_TYPE_MISMATCH");
    case 217: return _T("ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY");
    case 218: return _T("ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY");
    case 220: return _T("ERROR_FILE_CHECKED_OUT");
    case 221: return _T("ERROR_CHECKOUT_REQUIRED");
    case 222: return _T("ERROR_BAD_FILE_TYPE");
    case 223: return _T("ERROR_FILE_TOO_LARGE");
    case 224: return _T("ERROR_FORMS_AUTH_REQUIRED");
    case 225: return _T("ERROR_VIRUS_INFECTED");
    case 226: return _T("ERROR_VIRUS_DELETED");
    case 229: return _T("ERROR_PIPE_LOCAL");
    case 230: return _T("ERROR_BAD_PIPE");
    case 231: return _T("ERROR_PIPE_BUSY");
    case 232: return _T("ERROR_NO_DATA");
    case 233: return _T("ERROR_PIPE_NOT_CONNECTED");
    case 234: return _T("ERROR_MORE_DATA");
    case 240: return _T("ERROR_VC_DISCONNECTED");
    case 254: return _T("ERROR_INVALID_EA_NAME");
    case 255: return _T("ERROR_EA_LIST_INCONSISTENT");
    case 258: return _T("WAIT_TIMEOUT");
    case 259: return _T("ERROR_NO_MORE_ITEMS");
    case 266: return _T("ERROR_CANNOT_COPY");
    case 267: return _T("ERROR_DIRECTORY");
    case 275: return _T("ERROR_EAS_DIDNT_FIT");
    case 276: return _T("ERROR_EA_FILE_CORRUPT");
    case 277: return _T("ERROR_EA_TABLE_FULL");
    case 278: return _T("ERROR_INVALID_EA_HANDLE");
    case 282: return _T("ERROR_EAS_NOT_SUPPORTED");
    case 288: return _T("ERROR_NOT_OWNER");
    case 298: return _T("ERROR_TOO_MANY_POSTS");
    case 299: return _T("ERROR_PARTIAL_COPY");
    case 300: return _T("ERROR_OPLOCK_NOT_GRANTED");
    case 301: return _T("ERROR_INVALID_OPLOCK_PROTOCOL");
    case 302: return _T("ERROR_DISK_TOO_FRAGMENTED");
    case 303: return _T("ERROR_DELETE_PENDING");
    case 304: return _T("ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING");
    case 305: return _T("ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME");
    case 306: return _T("ERROR_SECURITY_STREAM_IS_INCONSISTENT");
    case 307: return _T("ERROR_INVALID_LOCK_RANGE");
    case 308: return _T("ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT");
    case 309: return _T("ERROR_NOTIFICATION_GUID_ALREADY_DEFINED");
    case 317: return _T("ERROR_MR_MID_NOT_FOUND");
    case 318: return _T("ERROR_SCOPE_NOT_FOUND");
    case 350: return _T("ERROR_FAIL_NOACTION_REBOOT");
    case 351: return _T("ERROR_FAIL_SHUTDOWN");
    case 352: return _T("ERROR_FAIL_RESTART");
    case 353: return _T("ERROR_MAX_SESSIONS_REACHED");
    case 400: return _T("ERROR_THREAD_MODE_ALREADY_BACKGROUND");
    case 401: return _T("ERROR_THREAD_MODE_NOT_BACKGROUND");
    case 402: return _T("ERROR_PROCESS_MODE_ALREADY_BACKGROUND");
    case 403: return _T("ERROR_PROCESS_MODE_NOT_BACKGROUND");
    case 487: return _T("ERROR_INVALID_ADDRESS");
    case 500: return _T("ERROR_USER_PROFILE_LOAD");
    case 534: return _T("ERROR_ARITHMETIC_OVERFLOW");
    case 535: return _T("ERROR_PIPE_CONNECTED");
    case 536: return _T("ERROR_PIPE_LISTENING");
    case 537: return _T("ERROR_VERIFIER_STOP");
    case 538: return _T("ERROR_ABIOS_ERROR");
    case 539: return _T("ERROR_WX86_WARNING");
    case 540: return _T("ERROR_WX86_ERROR");
    case 541: return _T("ERROR_TIMER_NOT_CANCELED");
    case 542: return _T("ERROR_UNWIND");
    case 543: return _T("ERROR_BAD_STACK");
    case 544: return _T("ERROR_INVALID_UNWIND_TARGET");
    case 545: return _T("ERROR_INVALID_PORT_ATTRIBUTES");
    case 546: return _T("ERROR_PORT_MESSAGE_TOO_LONG");
    case 547: return _T("ERROR_INVALID_QUOTA_LOWER");
    case 548: return _T("ERROR_DEVICE_ALREADY_ATTACHED");
    case 549: return _T("ERROR_INSTRUCTION_MISALIGNMENT");
    case 550: return _T("ERROR_PROFILING_NOT_STARTED");
    case 551: return _T("ERROR_PROFILING_NOT_STOPPED");
    case 552: return _T("ERROR_COULD_NOT_INTERPRET");
    case 553: return _T("ERROR_PROFILING_AT_LIMIT");
    case 554: return _T("ERROR_CANT_WAIT");
    case 555: return _T("ERROR_CANT_TERMINATE_SELF");
    case 556: return _T("ERROR_UNEXPECTED_MM_CREATE_ERR");
    case 557: return _T("ERROR_UNEXPECTED_MM_MAP_ERROR");
    case 558: return _T("ERROR_UNEXPECTED_MM_EXTEND_ERR");
    case 559: return _T("ERROR_BAD_FUNCTION_TABLE");
    case 560: return _T("ERROR_NO_GUID_TRANSLATION");
    case 561: return _T("ERROR_INVALID_LDT_SIZE");
    case 563: return _T("ERROR_INVALID_LDT_OFFSET");
    case 564: return _T("ERROR_INVALID_LDT_DESCRIPTOR");
    case 565: return _T("ERROR_TOO_MANY_THREADS");
    case 566: return _T("ERROR_THREAD_NOT_IN_PROCESS");
    case 567: return _T("ERROR_PAGEFILE_QUOTA_EXCEEDED");
    case 568: return _T("ERROR_LOGON_SERVER_CONFLICT");
    case 569: return _T("ERROR_SYNCHRONIZATION_REQUIRED");
    case 570: return _T("ERROR_NET_OPEN_FAILED");
    case 571: return _T("ERROR_IO_PRIVILEGE_FAILED");
    case 572: return _T("ERROR_CONTROL_C_EXIT");
    case 573: return _T("ERROR_MISSING_SYSTEMFILE");
    case 574: return _T("ERROR_UNHANDLED_EXCEPTION");
    case 575: return _T("ERROR_APP_INIT_FAILURE");
    case 576: return _T("ERROR_PAGEFILE_CREATE_FAILED");
    case 577: return _T("ERROR_INVALID_IMAGE_HASH");
    case 578: return _T("ERROR_NO_PAGEFILE");
    case 579: return _T("ERROR_ILLEGAL_FLOAT_CONTEXT");
    case 580: return _T("ERROR_NO_EVENT_PAIR");
    case 581: return _T("ERROR_DOMAIN_CTRLR_CONFIG_ERROR");
    case 582: return _T("ERROR_ILLEGAL_CHARACTER");
    case 583: return _T("ERROR_UNDEFINED_CHARACTER");
    case 584: return _T("ERROR_FLOPPY_VOLUME");
    case 585: return _T("ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT");
    case 586: return _T("ERROR_BACKUP_CONTROLLER");
    case 587: return _T("ERROR_MUTANT_LIMIT_EXCEEDED");
    case 588: return _T("ERROR_FS_DRIVER_REQUIRED");
    case 589: return _T("ERROR_CANNOT_LOAD_REGISTRY_FILE");
    case 590: return _T("ERROR_DEBUG_ATTACH_FAILED");
    case 591: return _T("ERROR_SYSTEM_PROCESS_TERMINATED");
    case 592: return _T("ERROR_DATA_NOT_ACCEPTED");
    case 593: return _T("ERROR_VDM_HARD_ERROR");
    case 594: return _T("ERROR_DRIVER_CANCEL_TIMEOUT");
    case 595: return _T("ERROR_REPLY_MESSAGE_MISMATCH");
    case 596: return _T("ERROR_LOST_WRITEBEHIND_DATA");
    case 597: return _T("ERROR_CLIENT_SERVER_PARAMETERS_INVALID");
    case 598: return _T("ERROR_NOT_TINY_STREAM");
    case 599: return _T("ERROR_STACK_OVERFLOW_READ");
    case 600: return _T("ERROR_CONVERT_TO_LARGE");
    case 601: return _T("ERROR_FOUND_OUT_OF_SCOPE");
    case 602: return _T("ERROR_ALLOCATE_BUCKET");
    case 603: return _T("ERROR_MARSHALL_OVERFLOW");
    case 604: return _T("ERROR_INVALID_VARIANT");
    case 605: return _T("ERROR_BAD_COMPRESSION_BUFFER");
    case 606: return _T("ERROR_AUDIT_FAILED");
    case 607: return _T("ERROR_TIMER_RESOLUTION_NOT_SET");
    case 608: return _T("ERROR_INSUFFICIENT_LOGON_INFO");
    case 609: return _T("ERROR_BAD_DLL_ENTRYPOINT");
    case 610: return _T("ERROR_BAD_SERVICE_ENTRYPOINT");
    case 611: return _T("ERROR_IP_ADDRESS_CONFLICT1");
    case 612: return _T("ERROR_IP_ADDRESS_CONFLICT2");
    case 613: return _T("ERROR_REGISTRY_QUOTA_LIMIT");
    case 614: return _T("ERROR_NO_CALLBACK_ACTIVE");
    case 615: return _T("ERROR_PWD_TOO_SHORT");
    case 616: return _T("ERROR_PWD_TOO_RECENT");
    case 617: return _T("ERROR_PWD_HISTORY_CONFLICT");
    case 618: return _T("ERROR_UNSUPPORTED_COMPRESSION");
    case 619: return _T("ERROR_INVALID_HW_PROFILE");
    case 620: return _T("ERROR_INVALID_PLUGPLAY_DEVICE_PATH");
    case 621: return _T("ERROR_QUOTA_LIST_INCONSISTENT");
    case 622: return _T("ERROR_EVALUATION_EXPIRATION");
    case 623: return _T("ERROR_ILLEGAL_DLL_RELOCATION");
    case 624: return _T("ERROR_DLL_INIT_FAILED_LOGOFF");
    case 625: return _T("ERROR_VALIDATE_CONTINUE");
    case 626: return _T("ERROR_NO_MORE_MATCHES");
    case 627: return _T("ERROR_RANGE_LIST_CONFLICT");
    case 628: return _T("ERROR_SERVER_SID_MISMATCH");
    case 629: return _T("ERROR_CANT_ENABLE_DENY_ONLY");
    case 630: return _T("ERROR_FLOAT_MULTIPLE_FAULTS");
    case 631: return _T("ERROR_FLOAT_MULTIPLE_TRAPS");
    case 632: return _T("ERROR_NOINTERFACE");
    case 633: return _T("ERROR_DRIVER_FAILED_SLEEP");
    case 634: return _T("ERROR_CORRUPT_SYSTEM_FILE");
    case 635: return _T("ERROR_COMMITMENT_MINIMUM");
    case 636: return _T("ERROR_PNP_RESTART_ENUMERATION");
    case 637: return _T("ERROR_SYSTEM_IMAGE_BAD_SIGNATURE");
    case 638: return _T("ERROR_PNP_REBOOT_REQUIRED");
    case 639: return _T("ERROR_INSUFFICIENT_POWER");
    case 640: return _T("ERROR_MULTIPLE_FAULT_VIOLATION");
    case 641: return _T("ERROR_SYSTEM_SHUTDOWN");
    case 642: return _T("ERROR_PORT_NOT_SET");
    case 643: return _T("ERROR_DS_VERSION_CHECK_FAILURE");
    case 644: return _T("ERROR_RANGE_NOT_FOUND");
    case 646: return _T("ERROR_NOT_SAFE_MODE_DRIVER");
    case 647: return _T("ERROR_FAILED_DRIVER_ENTRY");
    case 648: return _T("ERROR_DEVICE_ENUMERATION_ERROR");
    case 649: return _T("ERROR_MOUNT_POINT_NOT_RESOLVED");
    case 650: return _T("ERROR_INVALID_DEVICE_OBJECT_PARAMETER");
    case 651: return _T("ERROR_MCA_OCCURED");
    case 652: return _T("ERROR_DRIVER_DATABASE_ERROR");
    case 653: return _T("ERROR_SYSTEM_HIVE_TOO_LARGE");
    case 654: return _T("ERROR_DRIVER_FAILED_PRIOR_UNLOAD");
    case 655: return _T("ERROR_VOLSNAP_PREPARE_HIBERNATE");
    case 656: return _T("ERROR_HIBERNATION_FAILURE");
    case 665: return _T("ERROR_FILE_SYSTEM_LIMITATION");
    case 668: return _T("ERROR_ASSERTION_FAILURE");
    case 669: return _T("ERROR_ACPI_ERROR");
    case 670: return _T("ERROR_WOW_ASSERTION");
    case 671: return _T("ERROR_PNP_BAD_MPS_TABLE");
    case 672: return _T("ERROR_PNP_TRANSLATION_FAILED");
    case 673: return _T("ERROR_PNP_IRQ_TRANSLATION_FAILED");
    case 674: return _T("ERROR_PNP_INVALID_ID");
    case 675: return _T("ERROR_WAKE_SYSTEM_DEBUGGER");
    case 676: return _T("ERROR_HANDLES_CLOSED");
    case 677: return _T("ERROR_EXTRANEOUS_INFORMATION");
    case 678: return _T("ERROR_RXACT_COMMIT_NECESSARY");
    case 679: return _T("ERROR_MEDIA_CHECK");
    case 680: return _T("ERROR_GUID_SUBSTITUTION_MADE");
    case 681: return _T("ERROR_STOPPED_ON_SYMLINK");
    case 682: return _T("ERROR_LONGJUMP");
    case 683: return _T("ERROR_PLUGPLAY_QUERY_VETOED");
    case 684: return _T("ERROR_UNWIND_CONSOLIDATE");
    case 685: return _T("ERROR_REGISTRY_HIVE_RECOVERED");
    case 686: return _T("ERROR_DLL_MIGHT_BE_INSECURE");
    case 687: return _T("ERROR_DLL_MIGHT_BE_INCOMPATIBLE");
    case 688: return _T("ERROR_DBG_EXCEPTION_NOT_HANDLED");
    case 689: return _T("ERROR_DBG_REPLY_LATER");
    case 690: return _T("ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE");
    case 691: return _T("ERROR_DBG_TERMINATE_THREAD");
    case 692: return _T("ERROR_DBG_TERMINATE_PROCESS");
    case 693: return _T("ERROR_DBG_CONTROL_C");
    case 694: return _T("ERROR_DBG_PRINTEXCEPTION_C");
    case 695: return _T("ERROR_DBG_RIPEXCEPTION");
    case 696: return _T("ERROR_DBG_CONTROL_BREAK");
    case 697: return _T("ERROR_DBG_COMMAND_EXCEPTION");
    case 698: return _T("ERROR_OBJECT_NAME_EXISTS");
    case 699: return _T("ERROR_THREAD_WAS_SUSPENDED");
    case 700: return _T("ERROR_IMAGE_NOT_AT_BASE");
    case 701: return _T("ERROR_RXACT_STATE_CREATED");
    case 702: return _T("ERROR_SEGMENT_NOTIFICATION");
    case 703: return _T("ERROR_BAD_CURRENT_DIRECTORY");
    case 704: return _T("ERROR_FT_READ_RECOVERY_FROM_BACKUP");
    case 705: return _T("ERROR_FT_WRITE_RECOVERY");
    case 706: return _T("ERROR_IMAGE_MACHINE_TYPE_MISMATCH");
    case 707: return _T("ERROR_RECEIVE_PARTIAL");
    case 708: return _T("ERROR_RECEIVE_EXPEDITED");
    case 709: return _T("ERROR_RECEIVE_PARTIAL_EXPEDITED");
    case 710: return _T("ERROR_EVENT_DONE");
    case 711: return _T("ERROR_EVENT_PENDING");
    case 712: return _T("ERROR_CHECKING_FILE_SYSTEM");
    case 713: return _T("ERROR_FATAL_APP_EXIT");
    case 714: return _T("ERROR_PREDEFINED_HANDLE");
    case 715: return _T("ERROR_WAS_UNLOCKED");
    case 716: return _T("ERROR_SERVICE_NOTIFICATION");
    case 717: return _T("ERROR_WAS_LOCKED");
    case 718: return _T("ERROR_LOG_HARD_ERROR");
    case 719: return _T("ERROR_ALREADY_WIN32");
    case 720: return _T("ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE");
    case 721: return _T("ERROR_NO_YIELD_PERFORMED");
    case 722: return _T("ERROR_TIMER_RESUME_IGNORED");
    case 723: return _T("ERROR_ARBITRATION_UNHANDLED");
    case 724: return _T("ERROR_CARDBUS_NOT_SUPPORTED");
    case 725: return _T("ERROR_MP_PROCESSOR_MISMATCH");
    case 726: return _T("ERROR_HIBERNATED");
    case 727: return _T("ERROR_RESUME_HIBERNATION");
    case 728: return _T("ERROR_FIRMWARE_UPDATED");
    case 729: return _T("ERROR_DRIVERS_LEAKING_LOCKED_PAGES");
    case 730: return _T("ERROR_WAKE_SYSTEM");
    case 731: return _T("ERROR_WAIT_1");
    case 732: return _T("ERROR_WAIT_2");
    case 733: return _T("ERROR_WAIT_3");
    case 734: return _T("ERROR_WAIT_63");
    case 735: return _T("ERROR_ABANDONED_WAIT_0");
    case 736: return _T("ERROR_ABANDONED_WAIT_63");
    case 737: return _T("ERROR_USER_APC");
    case 738: return _T("ERROR_KERNEL_APC");
    case 739: return _T("ERROR_ALERTED");
    case 740: return _T("ERROR_ELEVATION_REQUIRED");
    case 741: return _T("ERROR_REPARSE");
    case 742: return _T("ERROR_OPLOCK_BREAK_IN_PROGRESS");
    case 743: return _T("ERROR_VOLUME_MOUNTED");
    case 744: return _T("ERROR_RXACT_COMMITTED");
    case 745: return _T("ERROR_NOTIFY_CLEANUP");
    case 746: return _T("ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED");
    case 747: return _T("ERROR_PAGE_FAULT_TRANSITION");
    case 748: return _T("ERROR_PAGE_FAULT_DEMAND_ZERO");
    case 749: return _T("ERROR_PAGE_FAULT_COPY_ON_WRITE");
    case 750: return _T("ERROR_PAGE_FAULT_GUARD_PAGE");
    case 751: return _T("ERROR_PAGE_FAULT_PAGING_FILE");
    case 752: return _T("ERROR_CACHE_PAGE_LOCKED");
    case 753: return _T("ERROR_CRASH_DUMP");
    case 754: return _T("ERROR_BUFFER_ALL_ZEROS");
    case 755: return _T("ERROR_REPARSE_OBJECT");
    case 756: return _T("ERROR_RESOURCE_REQUIREMENTS_CHANGED");
    case 757: return _T("ERROR_TRANSLATION_COMPLETE");
    case 758: return _T("ERROR_NOTHING_TO_TERMINATE");
    case 759: return _T("ERROR_PROCESS_NOT_IN_JOB");
    case 760: return _T("ERROR_PROCESS_IN_JOB");
    case 761: return _T("ERROR_VOLSNAP_HIBERNATE_READY");
    case 762: return _T("ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY");
    case 763: return _T("ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED");
    case 764: return _T("ERROR_INTERRUPT_STILL_CONNECTED");
    case 765: return _T("ERROR_WAIT_FOR_OPLOCK");
    case 766: return _T("ERROR_DBG_EXCEPTION_HANDLED");
    case 767: return _T("ERROR_DBG_CONTINUE");
    case 768: return _T("ERROR_CALLBACK_POP_STACK");
    case 769: return _T("ERROR_COMPRESSION_DISABLED");
    case 770: return _T("ERROR_CANTFETCHBACKWARDS");
    case 771: return _T("ERROR_CANTSCROLLBACKWARDS");
    case 772: return _T("ERROR_ROWSNOTRELEASED");
    case 773: return _T("ERROR_BAD_ACCESSOR_FLAGS");
    case 774: return _T("ERROR_ERRORS_ENCOUNTERED");
    case 775: return _T("ERROR_NOT_CAPABLE");
    case 776: return _T("ERROR_REQUEST_OUT_OF_SEQUENCE");
    case 777: return _T("ERROR_VERSION_PARSE_ERROR");
    case 778: return _T("ERROR_BADSTARTPOSITION");
    case 779: return _T("ERROR_MEMORY_HARDWARE");
    case 780: return _T("ERROR_DISK_REPAIR_DISABLED");
    case 781: return _T("ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE");
    case 782: return _T("ERROR_SYSTEM_POWERSTATE_TRANSITION");
    case 783: return _T("ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION");
    case 784: return _T("ERROR_MCA_EXCEPTION");
    case 785: return _T("ERROR_ACCESS_AUDIT_BY_POLICY");
    case 786: return _T("ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY");
    case 787: return _T("ERROR_ABANDON_HIBERFILE");
    case 788: return _T("ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED");
    case 789: return _T("ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR");
    case 790: return _T("ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR");
    case 791: return _T("ERROR_BAD_MCFG_TABLE");
    case 800: return _T("ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE");
    case 801: return _T("ERROR_CANNOT_GRANT_REQUESTED_OPLOCK");
    case 802: return _T("ERROR_CANNOT_BREAK_OPLOCK");
    case 803: return _T("ERROR_OPLOCK_HANDLE_CLOSED");
    case 804: return _T("ERROR_NO_ACE_CONDITION");
    case 805: return _T("ERROR_INVALID_ACE_CONDITION");
    case 994: return _T("ERROR_EA_ACCESS_DENIED");
    case 995: return _T("ERROR_OPERATION_ABORTED");
    case 996: return _T("ERROR_IO_INCOMPLETE");
    case 997: return _T("ERROR_IO_PENDING");
    case 998: return _T("ERROR_NOACCESS");
    case 999: return _T("ERROR_SWAPERROR");
    case 1001: return _T("ERROR_STACK_OVERFLOW");
    case 1002: return _T("ERROR_INVALID_MESSAGE");
    case 1003: return _T("ERROR_CAN_NOT_COMPLETE");
    case 1004: return _T("ERROR_INVALID_FLAGS");
    case 1005: return _T("ERROR_UNRECOGNIZED_VOLUME");
    case 1006: return _T("ERROR_FILE_INVALID");
    case 1007: return _T("ERROR_FULLSCREEN_MODE");
    case 1008: return _T("ERROR_NO_TOKEN");
    case 1009: return _T("ERROR_BADDB");
    case 1010: return _T("ERROR_BADKEY");
    case 1011: return _T("ERROR_CANTOPEN");
    case 1012: return _T("ERROR_CANTREAD");
    case 1013: return _T("ERROR_CANTWRITE");
    case 1014: return _T("ERROR_REGISTRY_RECOVERED");
    case 1015: return _T("ERROR_REGISTRY_CORRUPT");
    case 1016: return _T("ERROR_REGISTRY_IO_FAILED");
    case 1017: return _T("ERROR_NOT_REGISTRY_FILE");
    case 1018: return _T("ERROR_KEY_DELETED");
    case 1019: return _T("ERROR_NO_LOG_SPACE");
    case 1020: return _T("ERROR_KEY_HAS_CHILDREN");
    case 1021: return _T("ERROR_CHILD_MUST_BE_VOLATILE");
    case 1022: return _T("ERROR_NOTIFY_ENUM_DIR");
    case 1051: return _T("ERROR_DEPENDENT_SERVICES_RUNNING");
    case 1052: return _T("ERROR_INVALID_SERVICE_CONTROL");
    case 1053: return _T("ERROR_SERVICE_REQUEST_TIMEOUT");
    case 1054: return _T("ERROR_SERVICE_NO_THREAD");
    case 1055: return _T("ERROR_SERVICE_DATABASE_LOCKED");
    case 1056: return _T("ERROR_SERVICE_ALREADY_RUNNING");
    case 1057: return _T("ERROR_INVALID_SERVICE_ACCOUNT");
    case 1058: return _T("ERROR_SERVICE_DISABLED");
    case 1059: return _T("ERROR_CIRCULAR_DEPENDENCY");
    case 1060: return _T("ERROR_SERVICE_DOES_NOT_EXIST");
    case 1061: return _T("ERROR_SERVICE_CANNOT_ACCEPT_CTRL");
    case 1062: return _T("ERROR_SERVICE_NOT_ACTIVE");
    case 1063: return _T("ERROR_FAILED_SERVICE_CONTROLLER_CONNECT");
    case 1064: return _T("ERROR_EXCEPTION_IN_SERVICE");
    case 1065: return _T("ERROR_DATABASE_DOES_NOT_EXIST");
    case 1066: return _T("ERROR_SERVICE_SPECIFIC_ERROR");
    case 1067: return _T("ERROR_PROCESS_ABORTED");
    case 1068: return _T("ERROR_SERVICE_DEPENDENCY_FAIL");
    case 1069: return _T("ERROR_SERVICE_LOGON_FAILED");
    case 1070: return _T("ERROR_SERVICE_START_HANG");
    case 1071: return _T("ERROR_INVALID_SERVICE_LOCK");
    case 1072: return _T("ERROR_SERVICE_MARKED_FOR_DELETE");
    case 1073: return _T("ERROR_SERVICE_EXISTS");
    case 1074: return _T("ERROR_ALREADY_RUNNING_LKG");
    case 1075: return _T("ERROR_SERVICE_DEPENDENCY_DELETED");
    case 1076: return _T("ERROR_BOOT_ALREADY_ACCEPTED");
    case 1077: return _T("ERROR_SERVICE_NEVER_STARTED");
    case 1078: return _T("ERROR_DUPLICATE_SERVICE_NAME");
    case 1079: return _T("ERROR_DIFFERENT_SERVICE_ACCOUNT");
    case 1080: return _T("ERROR_CANNOT_DETECT_DRIVER_FAILURE");
    case 1081: return _T("ERROR_CANNOT_DETECT_PROCESS_ABORT");
    case 1082: return _T("ERROR_NO_RECOVERY_PROGRAM");
    case 1083: return _T("ERROR_SERVICE_NOT_IN_EXE");
    case 1084: return _T("ERROR_NOT_SAFEBOOT_SERVICE");
    case 1100: return _T("ERROR_END_OF_MEDIA");
    case 1101: return _T("ERROR_FILEMARK_DETECTED");
    case 1102: return _T("ERROR_BEGINNING_OF_MEDIA");
    case 1103: return _T("ERROR_SETMARK_DETECTED");
    case 1104: return _T("ERROR_NO_DATA_DETECTED");
    case 1105: return _T("ERROR_PARTITION_FAILURE");
    case 1106: return _T("ERROR_INVALID_BLOCK_LENGTH");
    case 1107: return _T("ERROR_DEVICE_NOT_PARTITIONED");
    case 1108: return _T("ERROR_UNABLE_TO_LOCK_MEDIA");
    case 1109: return _T("ERROR_UNABLE_TO_UNLOAD_MEDIA");
    case 1110: return _T("ERROR_MEDIA_CHANGED");
    case 1111: return _T("ERROR_BUS_RESET");
    case 1112: return _T("ERROR_NO_MEDIA_IN_DRIVE");
    case 1113: return _T("ERROR_NO_UNICODE_TRANSLATION");
    case 1114: return _T("ERROR_DLL_INIT_FAILED");
    case 1115: return _T("ERROR_SHUTDOWN_IN_PROGRESS");
    case 1116: return _T("ERROR_NO_SHUTDOWN_IN_PROGRESS");
    case 1117: return _T("ERROR_IO_DEVICE");
    case 1118: return _T("ERROR_SERIAL_NO_DEVICE");
    case 1119: return _T("ERROR_IRQ_BUSY");
    case 1120: return _T("ERROR_MORE_WRITES");
    case 1121: return _T("ERROR_COUNTER_TIMEOUT");
    case 1122: return _T("ERROR_FLOPPY_ID_MARK_NOT_FOUND");
    case 1123: return _T("ERROR_FLOPPY_WRONG_CYLINDER");
    case 1124: return _T("ERROR_FLOPPY_UNKNOWN_ERROR");
    case 1125: return _T("ERROR_FLOPPY_BAD_REGISTERS");
    case 1126: return _T("ERROR_DISK_RECALIBRATE_FAILED");
    case 1127: return _T("ERROR_DISK_OPERATION_FAILED");
    case 1128: return _T("ERROR_DISK_RESET_FAILED");
    case 1129: return _T("ERROR_EOM_OVERFLOW");
    case 1130: return _T("ERROR_NOT_ENOUGH_SERVER_MEMORY");
    case 1131: return _T("ERROR_POSSIBLE_DEADLOCK");
    case 1132: return _T("ERROR_MAPPED_ALIGNMENT");
    case 1140: return _T("ERROR_SET_POWER_STATE_VETOED");
    case 1141: return _T("ERROR_SET_POWER_STATE_FAILED");
    case 1142: return _T("ERROR_TOO_MANY_LINKS");
    case 1150: return _T("ERROR_OLD_WIN_VERSION");
    case 1151: return _T("ERROR_APP_WRONG_OS");
    case 1152: return _T("ERROR_SINGLE_INSTANCE_APP");
    case 1153: return _T("ERROR_RMODE_APP");
    case 1154: return _T("ERROR_INVALID_DLL");
    case 1155: return _T("ERROR_NO_ASSOCIATION");
    case 1156: return _T("ERROR_DDE_FAIL");
    case 1157: return _T("ERROR_DLL_NOT_FOUND");
    case 1158: return _T("ERROR_NO_MORE_USER_HANDLES");
    case 1159: return _T("ERROR_MESSAGE_SYNC_ONLY");
    case 1160: return _T("ERROR_SOURCE_ELEMENT_EMPTY");
    case 1161: return _T("ERROR_DESTINATION_ELEMENT_FULL");
    case 1162: return _T("ERROR_ILLEGAL_ELEMENT_ADDRESS");
    case 1163: return _T("ERROR_MAGAZINE_NOT_PRESENT");
    case 1164: return _T("ERROR_DEVICE_REINITIALIZATION_NEEDED");
    case 1165: return _T("ERROR_DEVICE_REQUIRES_CLEANING");
    case 1166: return _T("ERROR_DEVICE_DOOR_OPEN");
    case 1167: return _T("ERROR_DEVICE_NOT_CONNECTED");
    case 1168: return _T("ERROR_NOT_FOUND");
    case 1169: return _T("ERROR_NO_MATCH");
    case 1170: return _T("ERROR_SET_NOT_FOUND");
    case 1171: return _T("ERROR_POINT_NOT_FOUND");
    case 1172: return _T("ERROR_NO_TRACKING_SERVICE");
    case 1173: return _T("ERROR_NO_VOLUME_ID");
    case 1175: return _T("ERROR_UNABLE_TO_REMOVE_REPLACED");
    case 1176: return _T("ERROR_UNABLE_TO_MOVE_REPLACEMENT");
    case 1177: return _T("ERROR_UNABLE_TO_MOVE_REPLACEMENT_2");
    case 1178: return _T("ERROR_JOURNAL_DELETE_IN_PROGRESS");
    case 1179: return _T("ERROR_JOURNAL_NOT_ACTIVE");
    case 1180: return _T("ERROR_POTENTIAL_FILE_FOUND");
    case 1181: return _T("ERROR_JOURNAL_ENTRY_DELETED");
    case 1190: return _T("ERROR_SHUTDOWN_IS_SCHEDULED");
    case 1191: return _T("ERROR_SHUTDOWN_USERS_LOGGED_ON");
    case 1200: return _T("ERROR_BAD_DEVICE");
    case 1201: return _T("ERROR_CONNECTION_UNAVAIL");
    case 1202: return _T("ERROR_DEVICE_ALREADY_REMEMBERED");
    case 1203: return _T("ERROR_NO_NET_OR_BAD_PATH");
    case 1204: return _T("ERROR_BAD_PROVIDER");
    case 1205: return _T("ERROR_CANNOT_OPEN_PROFILE");
    case 1206: return _T("ERROR_BAD_PROFILE");
    case 1207: return _T("ERROR_NOT_CONTAINER");
    case 1208: return _T("ERROR_EXTENDED_ERROR");
    case 1209: return _T("ERROR_INVALID_GROUPNAME");
    case 1210: return _T("ERROR_INVALID_COMPUTERNAME");
    case 1211: return _T("ERROR_INVALID_EVENTNAME");
    case 1212: return _T("ERROR_INVALID_DOMAINNAME");
    case 1213: return _T("ERROR_INVALID_SERVICENAME");
    case 1214: return _T("ERROR_INVALID_NETNAME");
    case 1215: return _T("ERROR_INVALID_SHARENAME");
    case 1216: return _T("ERROR_INVALID_PASSWORDNAME");
    case 1217: return _T("ERROR_INVALID_MESSAGENAME");
    case 1218: return _T("ERROR_INVALID_MESSAGEDEST");
    case 1219: return _T("ERROR_SESSION_CREDENTIAL_CONFLICT");
    case 1220: return _T("ERROR_REMOTE_SESSION_LIMIT_EXCEEDED");
    case 1221: return _T("ERROR_DUP_DOMAINNAME");
    case 1222: return _T("ERROR_NO_NETWORK");
    case 1223: return _T("ERROR_CANCELLED");
    case 1224: return _T("ERROR_USER_MAPPED_FILE");
    case 1225: return _T("ERROR_CONNECTION_REFUSED");
    case 1226: return _T("ERROR_GRACEFUL_DISCONNECT");
    case 1227: return _T("ERROR_ADDRESS_ALREADY_ASSOCIATED");
    case 1228: return _T("ERROR_ADDRESS_NOT_ASSOCIATED");
    case 1229: return _T("ERROR_CONNECTION_INVALID");
    case 1230: return _T("ERROR_CONNECTION_ACTIVE");
    case 1231: return _T("ERROR_NETWORK_UNREACHABLE");
    case 1232: return _T("ERROR_HOST_UNREACHABLE");
    case 1233: return _T("ERROR_PROTOCOL_UNREACHABLE");
    case 1234: return _T("ERROR_PORT_UNREACHABLE");
    case 1235: return _T("ERROR_REQUEST_ABORTED");
    case 1236: return _T("ERROR_CONNECTION_ABORTED");
    case 1237: return _T("ERROR_RETRY");
    case 1238: return _T("ERROR_CONNECTION_COUNT_LIMIT");
    case 1239: return _T("ERROR_LOGIN_TIME_RESTRICTION");
    case 1240: return _T("ERROR_LOGIN_WKSTA_RESTRICTION");
    case 1241: return _T("ERROR_INCORRECT_ADDRESS");
    case 1242: return _T("ERROR_ALREADY_REGISTERED");
    case 1243: return _T("ERROR_SERVICE_NOT_FOUND");
    case 1244: return _T("ERROR_NOT_AUTHENTICATED");
    case 1245: return _T("ERROR_NOT_LOGGED_ON");
    case 1246: return _T("ERROR_CONTINUE");
    case 1247: return _T("ERROR_ALREADY_INITIALIZED");
    case 1248: return _T("ERROR_NO_MORE_DEVICES");
    case 1249: return _T("ERROR_NO_SUCH_SITE");
    case 1250: return _T("ERROR_DOMAIN_CONTROLLER_EXISTS");
    case 1251: return _T("ERROR_ONLY_IF_CONNECTED");
    case 1252: return _T("ERROR_OVERRIDE_NOCHANGES");
    case 1253: return _T("ERROR_BAD_USER_PROFILE");
    case 1254: return _T("ERROR_NOT_SUPPORTED_ON_SBS");
    case 1255: return _T("ERROR_SERVER_SHUTDOWN_IN_PROGRESS");
    case 1256: return _T("ERROR_HOST_DOWN");
    case 1257: return _T("ERROR_NON_ACCOUNT_SID");
    case 1258: return _T("ERROR_NON_DOMAIN_SID");
    case 1259: return _T("ERROR_APPHELP_BLOCK");
    case 1260: return _T("ERROR_ACCESS_DISABLED_BY_POLICY");
    case 1261: return _T("ERROR_REG_NAT_CONSUMPTION");
    case 1262: return _T("ERROR_CSCSHARE_OFFLINE");
    case 1263: return _T("ERROR_PKINIT_FAILURE");
    case 1264: return _T("ERROR_SMARTCARD_SUBSYSTEM_FAILURE");
    case 1265: return _T("ERROR_DOWNGRADE_DETECTED");
    case 1271: return _T("ERROR_MACHINE_LOCKED");
    case 1273: return _T("ERROR_CALLBACK_SUPPLIED_INVALID_DATA");
    case 1274: return _T("ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED");
    case 1275: return _T("ERROR_DRIVER_BLOCKED");
    case 1276: return _T("ERROR_INVALID_IMPORT_OF_NON_DLL");
    case 1277: return _T("ERROR_ACCESS_DISABLED_WEBBLADE");
    case 1278: return _T("ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER");
    case 1279: return _T("ERROR_RECOVERY_FAILURE");
    case 1280: return _T("ERROR_ALREADY_FIBER");
    case 1281: return _T("ERROR_ALREADY_THREAD");
    case 1282: return _T("ERROR_STACK_BUFFER_OVERRUN");
    case 1283: return _T("ERROR_PARAMETER_QUOTA_EXCEEDED");
    case 1284: return _T("ERROR_DEBUGGER_INACTIVE");
    case 1285: return _T("ERROR_DELAY_LOAD_FAILED");
    case 1286: return _T("ERROR_VDM_DISALLOWED");
    case 1287: return _T("ERROR_UNIDENTIFIED_ERROR");
    case 1288: return _T("ERROR_INVALID_CRUNTIME_PARAMETER");
    case 1289: return _T("ERROR_BEYOND_VDL");
    case 1290: return _T("ERROR_INCOMPATIBLE_SERVICE_SID_TYPE");
    case 1291: return _T("ERROR_DRIVER_PROCESS_TERMINATED");
    case 1292: return _T("ERROR_IMPLEMENTATION_LIMIT");
    case 1293: return _T("ERROR_PROCESS_IS_PROTECTED");
    case 1294: return _T("ERROR_SERVICE_NOTIFY_CLIENT_LAGGING");
    case 1295: return _T("ERROR_DISK_QUOTA_EXCEEDED");
    case 1296: return _T("ERROR_CONTENT_BLOCKED");
    case 1297: return _T("ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE");
    case 1298: return _T("ERROR_APP_HANG");
    case 1299: return _T("ERROR_INVALID_LABEL");
    case 1300: return _T("ERROR_NOT_ALL_ASSIGNED");
    case 1301: return _T("ERROR_SOME_NOT_MAPPED");
    case 1302: return _T("ERROR_NO_QUOTAS_FOR_ACCOUNT");
    case 1303: return _T("ERROR_LOCAL_USER_SESSION_KEY");
    case 1304: return _T("ERROR_NULL_LM_PASSWORD");
    case 1305: return _T("ERROR_UNKNOWN_REVISION");
    case 1306: return _T("ERROR_REVISION_MISMATCH");
    case 1307: return _T("ERROR_INVALID_OWNER");
    case 1308: return _T("ERROR_INVALID_PRIMARY_GROUP");
    case 1309: return _T("ERROR_NO_IMPERSONATION_TOKEN");
    case 1310: return _T("ERROR_CANT_DISABLE_MANDATORY");
    case 1311: return _T("ERROR_NO_LOGON_SERVERS");
    case 1312: return _T("ERROR_NO_SUCH_LOGON_SESSION");
    case 1313: return _T("ERROR_NO_SUCH_PRIVILEGE");
    case 1314: return _T("ERROR_PRIVILEGE_NOT_HELD");
    case 1315: return _T("ERROR_INVALID_ACCOUNT_NAME");
    case 1316: return _T("ERROR_USER_EXISTS");
    case 1317: return _T("ERROR_NO_SUCH_USER");
    case 1318: return _T("ERROR_GROUP_EXISTS");
    case 1319: return _T("ERROR_NO_SUCH_GROUP");
    case 1320: return _T("ERROR_MEMBER_IN_GROUP");
    case 1321: return _T("ERROR_MEMBER_NOT_IN_GROUP");
    case 1322: return _T("ERROR_LAST_ADMIN");
    case 1323: return _T("ERROR_WRONG_PASSWORD");
    case 1324: return _T("ERROR_ILL_FORMED_PASSWORD");
    case 1325: return _T("ERROR_PASSWORD_RESTRICTION");
    case 1326: return _T("ERROR_LOGON_FAILURE");
    case 1327: return _T("ERROR_ACCOUNT_RESTRICTION");
    case 1328: return _T("ERROR_INVALID_LOGON_HOURS");
    case 1329: return _T("ERROR_INVALID_WORKSTATION");
    case 1330: return _T("ERROR_PASSWORD_EXPIRED");
    case 1331: return _T("ERROR_ACCOUNT_DISABLED");
    case 1332: return _T("ERROR_NONE_MAPPED");
    case 1333: return _T("ERROR_TOO_MANY_LUIDS_REQUESTED");
    case 1334: return _T("ERROR_LUIDS_EXHAUSTED");
    case 1335: return _T("ERROR_INVALID_SUB_AUTHORITY");
    case 1336: return _T("ERROR_INVALID_ACL");
    case 1337: return _T("ERROR_INVALID_SID");
    case 1338: return _T("ERROR_INVALID_SECURITY_DESCR");
    case 1340: return _T("ERROR_BAD_INHERITANCE_ACL");
    case 1341: return _T("ERROR_SERVER_DISABLED");
    case 1342: return _T("ERROR_SERVER_NOT_DISABLED");
    case 1343: return _T("ERROR_INVALID_ID_AUTHORITY");
    case 1344: return _T("ERROR_ALLOTTED_SPACE_EXCEEDED");
    case 1345: return _T("ERROR_INVALID_GROUP_ATTRIBUTES");
    case 1346: return _T("ERROR_BAD_IMPERSONATION_LEVEL");
    case 1347: return _T("ERROR_CANT_OPEN_ANONYMOUS");
    case 1348: return _T("ERROR_BAD_VALIDATION_CLASS");
    case 1349: return _T("ERROR_BAD_TOKEN_TYPE");
    case 1350: return _T("ERROR_NO_SECURITY_ON_OBJECT");
    case 1351: return _T("ERROR_CANT_ACCESS_DOMAIN_INFO");
    case 1352: return _T("ERROR_INVALID_SERVER_STATE");
    case 1353: return _T("ERROR_INVALID_DOMAIN_STATE");
    case 1354: return _T("ERROR_INVALID_DOMAIN_ROLE");
    case 1355: return _T("ERROR_NO_SUCH_DOMAIN");
    case 1356: return _T("ERROR_DOMAIN_EXISTS");
    case 1357: return _T("ERROR_DOMAIN_LIMIT_EXCEEDED");
    case 1358: return _T("ERROR_INTERNAL_DB_CORRUPTION");
    case 1359: return _T("ERROR_INTERNAL_ERROR");
    case 1360: return _T("ERROR_GENERIC_NOT_MAPPED");
    case 1361: return _T("ERROR_BAD_DESCRIPTOR_FORMAT");
    case 1362: return _T("ERROR_NOT_LOGON_PROCESS");
    case 1363: return _T("ERROR_LOGON_SESSION_EXISTS");
    case 1364: return _T("ERROR_NO_SUCH_PACKAGE");
    case 1365: return _T("ERROR_BAD_LOGON_SESSION_STATE");
    case 1366: return _T("ERROR_LOGON_SESSION_COLLISION");
    case 1367: return _T("ERROR_INVALID_LOGON_TYPE");
    case 1368: return _T("ERROR_CANNOT_IMPERSONATE");
    case 1369: return _T("ERROR_RXACT_INVALID_STATE");
    case 1370: return _T("ERROR_RXACT_COMMIT_FAILURE");
    case 1371: return _T("ERROR_SPECIAL_ACCOUNT");
    case 1372: return _T("ERROR_SPECIAL_GROUP");
    case 1373: return _T("ERROR_SPECIAL_USER");
    case 1374: return _T("ERROR_MEMBERS_PRIMARY_GROUP");
    case 1375: return _T("ERROR_TOKEN_ALREADY_IN_USE");
    case 1376: return _T("ERROR_NO_SUCH_ALIAS");
    case 1377: return _T("ERROR_MEMBER_NOT_IN_ALIAS");
    case 1378: return _T("ERROR_MEMBER_IN_ALIAS");
    case 1379: return _T("ERROR_ALIAS_EXISTS");
    case 1380: return _T("ERROR_LOGON_NOT_GRANTED");
    case 1381: return _T("ERROR_TOO_MANY_SECRETS");
    case 1382: return _T("ERROR_SECRET_TOO_LONG");
    case 1383: return _T("ERROR_INTERNAL_DB_ERROR");
    case 1384: return _T("ERROR_TOO_MANY_CONTEXT_IDS");
    case 1385: return _T("ERROR_LOGON_TYPE_NOT_GRANTED");
    case 1386: return _T("ERROR_NT_CROSS_ENCRYPTION_REQUIRED");
    case 1387: return _T("ERROR_NO_SUCH_MEMBER");
    case 1388: return _T("ERROR_INVALID_MEMBER");
    case 1389: return _T("ERROR_TOO_MANY_SIDS");
    case 1390: return _T("ERROR_LM_CROSS_ENCRYPTION_REQUIRED");
    case 1391: return _T("ERROR_NO_INHERITANCE");
    case 1392: return _T("ERROR_FILE_CORRUPT");
    case 1393: return _T("ERROR_DISK_CORRUPT");
    case 1394: return _T("ERROR_NO_USER_SESSION_KEY");
    case 1395: return _T("ERROR_LICENSE_QUOTA_EXCEEDED");
    case 1396: return _T("ERROR_WRONG_TARGET_NAME");
    case 1397: return _T("ERROR_MUTUAL_AUTH_FAILED");
    case 1398: return _T("ERROR_TIME_SKEW");
    case 1399: return _T("ERROR_CURRENT_DOMAIN_NOT_ALLOWED");
    case 1400: return _T("ERROR_INVALID_WINDOW_HANDLE");
    case 1401: return _T("ERROR_INVALID_MENU_HANDLE");
    case 1402: return _T("ERROR_INVALID_CURSOR_HANDLE");
    case 1403: return _T("ERROR_INVALID_ACCEL_HANDLE");
    case 1404: return _T("ERROR_INVALID_HOOK_HANDLE");
    case 1405: return _T("ERROR_INVALID_DWP_HANDLE");
    case 1406: return _T("ERROR_TLW_WITH_WSCHILD");
    case 1407: return _T("ERROR_CANNOT_FIND_WND_CLASS");
    case 1408: return _T("ERROR_WINDOW_OF_OTHER_THREAD");
    case 1409: return _T("ERROR_HOTKEY_ALREADY_REGISTERED");
    case 1410: return _T("ERROR_CLASS_ALREADY_EXISTS");
    case 1411: return _T("ERROR_CLASS_DOES_NOT_EXIST");
    case 1412: return _T("ERROR_CLASS_HAS_WINDOWS");
    case 1413: return _T("ERROR_INVALID_INDEX");
    case 1414: return _T("ERROR_INVALID_ICON_HANDLE");
    case 1415: return _T("ERROR_PRIVATE_DIALOG_INDEX");
    case 1416: return _T("ERROR_LISTBOX_ID_NOT_FOUND");
    case 1417: return _T("ERROR_NO_WILDCARD_CHARACTERS");
    case 1418: return _T("ERROR_CLIPBOARD_NOT_OPEN");
    case 1419: return _T("ERROR_HOTKEY_NOT_REGISTERED");
    case 1420: return _T("ERROR_WINDOW_NOT_DIALOG");
    case 1421: return _T("ERROR_CONTROL_ID_NOT_FOUND");
    case 1422: return _T("ERROR_INVALID_COMBOBOX_MESSAGE");
    case 1423: return _T("ERROR_WINDOW_NOT_COMBOBOX");
    case 1424: return _T("ERROR_INVALID_EDIT_HEIGHT");
    case 1425: return _T("ERROR_DC_NOT_FOUND");
    case 1426: return _T("ERROR_INVALID_HOOK_FILTER");
    case 1427: return _T("ERROR_INVALID_FILTER_PROC");
    case 1428: return _T("ERROR_HOOK_NEEDS_HMOD");
    case 1429: return _T("ERROR_GLOBAL_ONLY_HOOK");
    case 1430: return _T("ERROR_JOURNAL_HOOK_SET");
    case 1431: return _T("ERROR_HOOK_NOT_INSTALLED");
    case 1432: return _T("ERROR_INVALID_LB_MESSAGE");
    case 1433: return _T("ERROR_SETCOUNT_ON_BAD_LB");
    case 1434: return _T("ERROR_LB_WITHOUT_TABSTOPS");
    case 1435: return _T("ERROR_DESTROY_OBJECT_OF_OTHER_THREAD");
    case 1436: return _T("ERROR_CHILD_WINDOW_MENU");
    case 1437: return _T("ERROR_NO_SYSTEM_MENU");
    case 1438: return _T("ERROR_INVALID_MSGBOX_STYLE");
    case 1439: return _T("ERROR_INVALID_SPI_VALUE");
    case 1440: return _T("ERROR_SCREEN_ALREADY_LOCKED");
    case 1441: return _T("ERROR_HWNDS_HAVE_DIFF_PARENT");
    case 1442: return _T("ERROR_NOT_CHILD_WINDOW");
    case 1443: return _T("ERROR_INVALID_GW_COMMAND");
    case 1444: return _T("ERROR_INVALID_THREAD_ID");
    case 1445: return _T("ERROR_NON_MDICHILD_WINDOW");
    case 1446: return _T("ERROR_POPUP_ALREADY_ACTIVE");
    case 1447: return _T("ERROR_NO_SCROLLBARS");
    case 1448: return _T("ERROR_INVALID_SCROLLBAR_RANGE");
    case 1449: return _T("ERROR_INVALID_SHOWWIN_COMMAND");
    case 1450: return _T("ERROR_NO_SYSTEM_RESOURCES");
    case 1451: return _T("ERROR_NONPAGED_SYSTEM_RESOURCES");
    case 1452: return _T("ERROR_PAGED_SYSTEM_RESOURCES");
    case 1453: return _T("ERROR_WORKING_SET_QUOTA");
    case 1454: return _T("ERROR_PAGEFILE_QUOTA");
    case 1455: return _T("ERROR_COMMITMENT_LIMIT");
    case 1456: return _T("ERROR_MENU_ITEM_NOT_FOUND");
    case 1457: return _T("ERROR_INVALID_KEYBOARD_HANDLE");
    case 1458: return _T("ERROR_HOOK_TYPE_NOT_ALLOWED");
    case 1459: return _T("ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION");
    case 1460: return _T("ERROR_TIMEOUT");
    case 1461: return _T("ERROR_INVALID_MONITOR_HANDLE");
    case 1462: return _T("ERROR_INCORRECT_SIZE");
    case 1463: return _T("ERROR_SYMLINK_CLASS_DISABLED");
    case 1464: return _T("ERROR_SYMLINK_NOT_SUPPORTED");
    case 1465: return _T("ERROR_XML_PARSE_ERROR");
    case 1466: return _T("ERROR_XMLDSIG_ERROR");
    case 1467: return _T("ERROR_RESTART_APPLICATION");
    case 1468: return _T("ERROR_WRONG_COMPARTMENT");
    case 1469: return _T("ERROR_AUTHIP_FAILURE");
    case 1470: return _T("ERROR_NO_NVRAM_RESOURCES");
    case 1500: return _T("ERROR_EVENTLOG_FILE_CORRUPT");
    case 1501: return _T("ERROR_EVENTLOG_CANT_START");
    case 1502: return _T("ERROR_LOG_FILE_FULL");
    case 1503: return _T("ERROR_EVENTLOG_FILE_CHANGED");
    case 1550: return _T("ERROR_INVALID_TASK_NAME");
    case 1551: return _T("ERROR_INVALID_TASK_INDEX");
    case 1552: return _T("ERROR_THREAD_ALREADY_IN_TASK");
    case 1601: return _T("ERROR_INSTALL_SERVICE_FAILURE");
    case 1602: return _T("ERROR_INSTALL_USEREXIT");
    case 1603: return _T("ERROR_INSTALL_FAILURE");
    case 1604: return _T("ERROR_INSTALL_SUSPEND");
    case 1605: return _T("ERROR_UNKNOWN_PRODUCT");
    case 1606: return _T("ERROR_UNKNOWN_FEATURE");
    case 1607: return _T("ERROR_UNKNOWN_COMPONENT");
    case 1608: return _T("ERROR_UNKNOWN_PROPERTY");
    case 1609: return _T("ERROR_INVALID_HANDLE_STATE");
    case 1610: return _T("ERROR_BAD_CONFIGURATION");
    case 1611: return _T("ERROR_INDEX_ABSENT");
    case 1612: return _T("ERROR_INSTALL_SOURCE_ABSENT");
    case 1613: return _T("ERROR_INSTALL_PACKAGE_VERSION");
    case 1614: return _T("ERROR_PRODUCT_UNINSTALLED");
    case 1615: return _T("ERROR_BAD_QUERY_SYNTAX");
    case 1616: return _T("ERROR_INVALID_FIELD");
    case 1617: return _T("ERROR_DEVICE_REMOVED");
    case 1618: return _T("ERROR_INSTALL_ALREADY_RUNNING");
    case 1619: return _T("ERROR_INSTALL_PACKAGE_OPEN_FAILED");
    case 1620: return _T("ERROR_INSTALL_PACKAGE_INVALID");
    case 1621: return _T("ERROR_INSTALL_UI_FAILURE");
    case 1622: return _T("ERROR_INSTALL_LOG_FAILURE");
    case 1623: return _T("ERROR_INSTALL_LANGUAGE_UNSUPPORTED");
    case 1624: return _T("ERROR_INSTALL_TRANSFORM_FAILURE");
    case 1625: return _T("ERROR_INSTALL_PACKAGE_REJECTED");
    case 1626: return _T("ERROR_FUNCTION_NOT_CALLED");
    case 1627: return _T("ERROR_FUNCTION_FAILED");
    case 1628: return _T("ERROR_INVALID_TABLE");
    case 1629: return _T("ERROR_DATATYPE_MISMATCH");
    case 1630: return _T("ERROR_UNSUPPORTED_TYPE");
    case 1631: return _T("ERROR_CREATE_FAILED");
    case 1632: return _T("ERROR_INSTALL_TEMP_UNWRITABLE");
    case 1633: return _T("ERROR_INSTALL_PLATFORM_UNSUPPORTED");
    case 1634: return _T("ERROR_INSTALL_NOTUSED");
    case 1635: return _T("ERROR_PATCH_PACKAGE_OPEN_FAILED");
    case 1636: return _T("ERROR_PATCH_PACKAGE_INVALID");
    case 1637: return _T("ERROR_PATCH_PACKAGE_UNSUPPORTED");
    case 1638: return _T("ERROR_PRODUCT_VERSION");
    case 1639: return _T("ERROR_INVALID_COMMAND_LINE");
    case 1640: return _T("ERROR_INSTALL_REMOTE_DISALLOWED");
    case 1641: return _T("ERROR_SUCCESS_REBOOT_INITIATED");
    case 1642: return _T("ERROR_PATCH_TARGET_NOT_FOUND");
    case 1643: return _T("ERROR_PATCH_PACKAGE_REJECTED");
    case 1644: return _T("ERROR_INSTALL_TRANSFORM_REJECTED");
    case 1645: return _T("ERROR_INSTALL_REMOTE_PROHIBITED");
    case 1646: return _T("ERROR_PATCH_REMOVAL_UNSUPPORTED");
    case 1647: return _T("ERROR_UNKNOWN_PATCH");
    case 1648: return _T("ERROR_PATCH_NO_SEQUENCE");
    case 1649: return _T("ERROR_PATCH_REMOVAL_DISALLOWED");
    case 1650: return _T("ERROR_INVALID_PATCH_XML");
    case 1651: return _T("ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT");
    case 1652: return _T("ERROR_INSTALL_SERVICE_SAFEBOOT");
    case 1653: return _T("ERROR_FAIL_FAST_EXCEPTION");
    case 1700: return _T("RPC_S_INVALID_STRING_BINDING");
    case 1701: return _T("RPC_S_WRONG_KIND_OF_BINDING");
    case 1702: return _T("RPC_S_INVALID_BINDING");
    case 1703: return _T("RPC_S_PROTSEQ_NOT_SUPPORTED");
    case 1704: return _T("RPC_S_INVALID_RPC_PROTSEQ");
    case 1705: return _T("RPC_S_INVALID_STRING_UUID");
    case 1706: return _T("RPC_S_INVALID_ENDPOINT_FORMAT");
    case 1707: return _T("RPC_S_INVALID_NET_ADDR");
    case 1708: return _T("RPC_S_NO_ENDPOINT_FOUND");
    case 1709: return _T("RPC_S_INVALID_TIMEOUT");
    case 1710: return _T("RPC_S_OBJECT_NOT_FOUND");
    case 1711: return _T("RPC_S_ALREADY_REGISTERED");
    case 1712: return _T("RPC_S_TYPE_ALREADY_REGISTERED");
    case 1713: return _T("RPC_S_ALREADY_LISTENING");
    case 1714: return _T("RPC_S_NO_PROTSEQS_REGISTERED");
    case 1715: return _T("RPC_S_NOT_LISTENING");
    case 1716: return _T("RPC_S_UNKNOWN_MGR_TYPE");
    case 1717: return _T("RPC_S_UNKNOWN_IF");
    case 1718: return _T("RPC_S_NO_BINDINGS");
    case 1719: return _T("RPC_S_NO_PROTSEQS");
    case 1720: return _T("RPC_S_CANT_CREATE_ENDPOINT");
    case 1721: return _T("RPC_S_OUT_OF_RESOURCES");
    case 1722: return _T("RPC_S_SERVER_UNAVAILABLE");
    case 1723: return _T("RPC_S_SERVER_TOO_BUSY");
    case 1724: return _T("RPC_S_INVALID_NETWORK_OPTIONS");
    case 1725: return _T("RPC_S_NO_CALL_ACTIVE");
    case 1726: return _T("RPC_S_CALL_FAILED");
    case 1727: return _T("RPC_S_CALL_FAILED_DNE");
    case 1728: return _T("RPC_S_PROTOCOL_ERROR");
    case 1729: return _T("RPC_S_PROXY_ACCESS_DENIED");
    case 1730: return _T("RPC_S_UNSUPPORTED_TRANS_SYN");
    case 1732: return _T("RPC_S_UNSUPPORTED_TYPE");
    case 1733: return _T("RPC_S_INVALID_TAG");
    case 1734: return _T("RPC_S_INVALID_BOUND");
    case 1735: return _T("RPC_S_NO_ENTRY_NAME");
    case 1736: return _T("RPC_S_INVALID_NAME_SYNTAX");
    case 1737: return _T("RPC_S_UNSUPPORTED_NAME_SYNTAX");
    case 1739: return _T("RPC_S_UUID_NO_ADDRESS");
    case 1740: return _T("RPC_S_DUPLICATE_ENDPOINT");
    case 1741: return _T("RPC_S_UNKNOWN_AUTHN_TYPE");
    case 1742: return _T("RPC_S_MAX_CALLS_TOO_SMALL");
    case 1743: return _T("RPC_S_STRING_TOO_LONG");
    case 1744: return _T("RPC_S_PROTSEQ_NOT_FOUND");
    case 1745: return _T("RPC_S_PROCNUM_OUT_OF_RANGE");
    case 1746: return _T("RPC_S_BINDING_HAS_NO_AUTH");
    case 1747: return _T("RPC_S_UNKNOWN_AUTHN_SERVICE");
    case 1748: return _T("RPC_S_UNKNOWN_AUTHN_LEVEL");
    case 1749: return _T("RPC_S_INVALID_AUTH_IDENTITY");
    case 1750: return _T("RPC_S_UNKNOWN_AUTHZ_SERVICE");
    case 1751: return _T("EPT_S_INVALID_ENTRY");
    case 1752: return _T("EPT_S_CANT_PERFORM_OP");
    case 1753: return _T("EPT_S_NOT_REGISTERED");
    case 1754: return _T("RPC_S_NOTHING_TO_EXPORT");
    case 1755: return _T("RPC_S_INCOMPLETE_NAME");
    case 1756: return _T("RPC_S_INVALID_VERS_OPTION");
    case 1757: return _T("RPC_S_NO_MORE_MEMBERS");
    case 1758: return _T("RPC_S_NOT_ALL_OBJS_UNEXPORTED");
    case 1759: return _T("RPC_S_INTERFACE_NOT_FOUND");
    case 1760: return _T("RPC_S_ENTRY_ALREADY_EXISTS");
    case 1761: return _T("RPC_S_ENTRY_NOT_FOUND");
    case 1762: return _T("RPC_S_NAME_SERVICE_UNAVAILABLE");
    case 1763: return _T("RPC_S_INVALID_NAF_ID");
    case 1764: return _T("RPC_S_CANNOT_SUPPORT");
    case 1765: return _T("RPC_S_NO_CONTEXT_AVAILABLE");
    case 1766: return _T("RPC_S_INTERNAL_ERROR");
    case 1767: return _T("RPC_S_ZERO_DIVIDE");
    case 1768: return _T("RPC_S_ADDRESS_ERROR");
    case 1769: return _T("RPC_S_FP_DIV_ZERO");
    case 1770: return _T("RPC_S_FP_UNDERFLOW");
    case 1771: return _T("RPC_S_FP_OVERFLOW");
    case 1772: return _T("RPC_X_NO_MORE_ENTRIES");
    case 1773: return _T("RPC_X_SS_CHAR_TRANS_OPEN_FAIL");
    case 1774: return _T("RPC_X_SS_CHAR_TRANS_SHORT_FILE");
    case 1775: return _T("RPC_X_SS_IN_NULL_CONTEXT");
    case 1777: return _T("RPC_X_SS_CONTEXT_DAMAGED");
    case 1778: return _T("RPC_X_SS_HANDLES_MISMATCH");
    case 1779: return _T("RPC_X_SS_CANNOT_GET_CALL_HANDLE");
    case 1780: return _T("RPC_X_NULL_REF_POINTER");
    case 1781: return _T("RPC_X_ENUM_VALUE_OUT_OF_RANGE");
    case 1782: return _T("RPC_X_BYTE_COUNT_TOO_SMALL");
    case 1783: return _T("RPC_X_BAD_STUB_DATA");
    case 1784: return _T("ERROR_INVALID_USER_BUFFER");
    case 1785: return _T("ERROR_UNRECOGNIZED_MEDIA");
    case 1786: return _T("ERROR_NO_TRUST_LSA_SECRET");
    case 1787: return _T("ERROR_NO_TRUST_SAM_ACCOUNT");
    case 1788: return _T("ERROR_TRUSTED_DOMAIN_FAILURE");
    case 1789: return _T("ERROR_TRUSTED_RELATIONSHIP_FAILURE");
    case 1790: return _T("ERROR_TRUST_FAILURE");
    case 1791: return _T("RPC_S_CALL_IN_PROGRESS");
    case 1792: return _T("ERROR_NETLOGON_NOT_STARTED");
    case 1793: return _T("ERROR_ACCOUNT_EXPIRED");
    case 1794: return _T("ERROR_REDIRECTOR_HAS_OPEN_HANDLES");
    case 1795: return _T("ERROR_PRINTER_DRIVER_ALREADY_INSTALLED");
    case 1796: return _T("ERROR_UNKNOWN_PORT");
    case 1797: return _T("ERROR_UNKNOWN_PRINTER_DRIVER");
    case 1798: return _T("ERROR_UNKNOWN_PRINTPROCESSOR");
    case 1799: return _T("ERROR_INVALID_SEPARATOR_FILE");
    case 1800: return _T("ERROR_INVALID_PRIORITY");
    case 1801: return _T("ERROR_INVALID_PRINTER_NAME");
    case 1802: return _T("ERROR_PRINTER_ALREADY_EXISTS");
    case 1803: return _T("ERROR_INVALID_PRINTER_COMMAND");
    case 1804: return _T("ERROR_INVALID_DATATYPE");
    case 1805: return _T("ERROR_INVALID_ENVIRONMENT");
    case 1806: return _T("RPC_S_NO_MORE_BINDINGS");
    case 1807: return _T("ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT");
    case 1808: return _T("ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT");
    case 1809: return _T("ERROR_NOLOGON_SERVER_TRUST_ACCOUNT");
    case 1810: return _T("ERROR_DOMAIN_TRUST_INCONSISTENT");
    case 1811: return _T("ERROR_SERVER_HAS_OPEN_HANDLES");
    case 1812: return _T("ERROR_RESOURCE_DATA_NOT_FOUND");
    case 1813: return _T("ERROR_RESOURCE_TYPE_NOT_FOUND");
    case 1814: return _T("ERROR_RESOURCE_NAME_NOT_FOUND");
    case 1815: return _T("ERROR_RESOURCE_LANG_NOT_FOUND");
    case 1816: return _T("ERROR_NOT_ENOUGH_QUOTA");
    case 1817: return _T("RPC_S_NO_INTERFACES");
    case 1818: return _T("RPC_S_CALL_CANCELLED");
    case 1819: return _T("RPC_S_BINDING_INCOMPLETE");
    case 1820: return _T("RPC_S_COMM_FAILURE");
    case 1821: return _T("RPC_S_UNSUPPORTED_AUTHN_LEVEL");
    case 1822: return _T("RPC_S_NO_PRINC_NAME");
    case 1823: return _T("RPC_S_NOT_RPC_ERROR");
    case 1824: return _T("RPC_S_UUID_LOCAL_ONLY");
    case 1825: return _T("RPC_S_SEC_PKG_ERROR");
    case 1826: return _T("RPC_S_NOT_CANCELLED");
    case 1827: return _T("RPC_X_INVALID_ES_ACTION");
    case 1828: return _T("RPC_X_WRONG_ES_VERSION");
    case 1829: return _T("RPC_X_WRONG_STUB_VERSION");
    case 1830: return _T("RPC_X_INVALID_PIPE_OBJECT");
    case 1831: return _T("RPC_X_WRONG_PIPE_ORDER");
    case 1832: return _T("RPC_X_WRONG_PIPE_VERSION");
    case 1833: return _T("RPC_S_COOKIE_AUTH_FAILED");
    case 1898: return _T("RPC_S_GROUP_MEMBER_NOT_FOUND");
    case 1899: return _T("EPT_S_CANT_CREATE");
    case 1900: return _T("RPC_S_INVALID_OBJECT");
    case 1901: return _T("ERROR_INVALID_TIME");
    case 1902: return _T("ERROR_INVALID_FORM_NAME");
    case 1903: return _T("ERROR_INVALID_FORM_SIZE");
    case 1904: return _T("ERROR_ALREADY_WAITING");
    case 1905: return _T("ERROR_PRINTER_DELETED");
    case 1906: return _T("ERROR_INVALID_PRINTER_STATE");
    case 1907: return _T("ERROR_PASSWORD_MUST_CHANGE");
    case 1908: return _T("ERROR_DOMAIN_CONTROLLER_NOT_FOUND");
    case 1909: return _T("ERROR_ACCOUNT_LOCKED_OUT");
    case 1910: return _T("OR_INVALID_OXID");
    case 1911: return _T("OR_INVALID_OID");
    case 1912: return _T("OR_INVALID_SET");
    case 1913: return _T("RPC_S_SEND_INCOMPLETE");
    case 1914: return _T("RPC_S_INVALID_ASYNC_HANDLE");
    case 1915: return _T("RPC_S_INVALID_ASYNC_CALL");
    case 1916: return _T("RPC_X_PIPE_CLOSED");
    case 1917: return _T("RPC_X_PIPE_DISCIPLINE_ERROR");
    case 1918: return _T("RPC_X_PIPE_EMPTY");
    case 1919: return _T("ERROR_NO_SITENAME");
    case 1920: return _T("ERROR_CANT_ACCESS_FILE");
    case 1921: return _T("ERROR_CANT_RESOLVE_FILENAME");
    case 1922: return _T("RPC_S_ENTRY_TYPE_MISMATCH");
    case 1923: return _T("RPC_S_NOT_ALL_OBJS_EXPORTED");
    case 1924: return _T("RPC_S_INTERFACE_NOT_EXPORTED");
    case 1925: return _T("RPC_S_PROFILE_NOT_ADDED");
    case 1926: return _T("RPC_S_PRF_ELT_NOT_ADDED");
    case 1927: return _T("RPC_S_PRF_ELT_NOT_REMOVED");
    case 1928: return _T("RPC_S_GRP_ELT_NOT_ADDED");
    case 1929: return _T("RPC_S_GRP_ELT_NOT_REMOVED");
    case 1930: return _T("ERROR_KM_DRIVER_BLOCKED");
    case 1931: return _T("ERROR_CONTEXT_EXPIRED");
    case 1932: return _T("ERROR_PER_USER_TRUST_QUOTA_EXCEEDED");
    case 1933: return _T("ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED");
    case 1934: return _T("ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED");
    case 1935: return _T("ERROR_AUTHENTICATION_FIREWALL_FAILED");
    case 1936: return _T("ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED");
    case 1937: return _T("ERROR_NTLM_BLOCKED");
    case 2000: return _T("ERROR_INVALID_PIXEL_FORMAT");
    case 2001: return _T("ERROR_BAD_DRIVER");
    case 2002: return _T("ERROR_INVALID_WINDOW_STYLE");
    case 2003: return _T("ERROR_METAFILE_NOT_SUPPORTED");
    case 2004: return _T("ERROR_TRANSFORM_NOT_SUPPORTED");
    case 2005: return _T("ERROR_CLIPPING_NOT_SUPPORTED");
    case 2010: return _T("ERROR_INVALID_CMM");
    case 2011: return _T("ERROR_INVALID_PROFILE");
    case 2012: return _T("ERROR_TAG_NOT_FOUND");
    case 2013: return _T("ERROR_TAG_NOT_PRESENT");
    case 2014: return _T("ERROR_DUPLICATE_TAG");
    case 2015: return _T("ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE");
    case 2016: return _T("ERROR_PROFILE_NOT_FOUND");
    case 2017: return _T("ERROR_INVALID_COLORSPACE");
    case 2018: return _T("ERROR_ICM_NOT_ENABLED");
    case 2019: return _T("ERROR_DELETING_ICM_XFORM");
    case 2020: return _T("ERROR_INVALID_TRANSFORM");
    case 2021: return _T("ERROR_COLORSPACE_MISMATCH");
    case 2022: return _T("ERROR_INVALID_COLORINDEX");
    case 2023: return _T("ERROR_PROFILE_DOES_NOT_MATCH_DEVICE");
    case 2108: return _T("ERROR_CONNECTED_OTHER_PASSWORD");
    case 2109: return _T("ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT");
    case 2202: return _T("ERROR_BAD_USERNAME");
    case 2250: return _T("ERROR_NOT_CONNECTED");
    case 2401: return _T("ERROR_OPEN_FILES");
    case 2402: return _T("ERROR_ACTIVE_CONNECTIONS");
    case 2404: return _T("ERROR_DEVICE_IN_USE");
    case 3000: return _T("ERROR_UNKNOWN_PRINT_MONITOR");
    case 3001: return _T("ERROR_PRINTER_DRIVER_IN_USE");
    case 3002: return _T("ERROR_SPOOL_FILE_NOT_FOUND");
    case 3003: return _T("ERROR_SPL_NO_STARTDOC");
    case 3004: return _T("ERROR_SPL_NO_ADDJOB");
    case 3005: return _T("ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED");
    case 3006: return _T("ERROR_PRINT_MONITOR_ALREADY_INSTALLED");
    case 3007: return _T("ERROR_INVALID_PRINT_MONITOR");
    case 3008: return _T("ERROR_PRINT_MONITOR_IN_USE");
    case 3009: return _T("ERROR_PRINTER_HAS_JOBS_QUEUED");
    case 3010: return _T("ERROR_SUCCESS_REBOOT_REQUIRED");
    case 3011: return _T("ERROR_SUCCESS_RESTART_REQUIRED");
    case 3012: return _T("ERROR_PRINTER_NOT_FOUND");
    case 3013: return _T("ERROR_PRINTER_DRIVER_WARNED");
    case 3014: return _T("ERROR_PRINTER_DRIVER_BLOCKED");
    case 3015: return _T("ERROR_PRINTER_DRIVER_PACKAGE_IN_USE");
    case 3016: return _T("ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND");
    case 3017: return _T("ERROR_FAIL_REBOOT_REQUIRED");
    case 3018: return _T("ERROR_FAIL_REBOOT_INITIATED");
    case 3019: return _T("ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED");
    case 3020: return _T("ERROR_PRINT_JOB_RESTART_REQUIRED");
    case 3950: return _T("ERROR_IO_REISSUE_AS_CACHED");
    case 4000: return _T("ERROR_WINS_INTERNAL");
    case 4001: return _T("ERROR_CAN_NOT_DEL_LOCAL_WINS");
    case 4002: return _T("ERROR_STATIC_INIT");
    case 4003: return _T("ERROR_INC_BACKUP");
    case 4004: return _T("ERROR_FULL_BACKUP");
    case 4005: return _T("ERROR_REC_NON_EXISTENT");
    case 4006: return _T("ERROR_RPL_NOT_ALLOWED");
    case 4050: return _T("PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED");
    case 4051: return _T("PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO");
    case 4052: return _T("PEERDIST_ERROR_MISSING_DATA");
    case 4053: return _T("PEERDIST_ERROR_NO_MORE");
    case 4054: return _T("PEERDIST_ERROR_NOT_INITIALIZED");
    case 4055: return _T("PEERDIST_ERROR_ALREADY_INITIALIZED");
    case 4056: return _T("PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS");
    case 4057: return _T("PEERDIST_ERROR_INVALIDATED");
    case 4058: return _T("PEERDIST_ERROR_ALREADY_EXISTS");
    case 4059: return _T("PEERDIST_ERROR_OPERATION_NOTFOUND");
    case 4060: return _T("PEERDIST_ERROR_ALREADY_COMPLETED");
    case 4061: return _T("PEERDIST_ERROR_OUT_OF_BOUNDS");
    case 4062: return _T("PEERDIST_ERROR_VERSION_UNSUPPORTED");
    case 4063: return _T("PEERDIST_ERROR_INVALID_CONFIGURATION");
    case 4064: return _T("PEERDIST_ERROR_NOT_LICENSED");
    case 4065: return _T("PEERDIST_ERROR_SERVICE_UNAVAILABLE");
    case 4100: return _T("ERROR_DHCP_ADDRESS_CONFLICT");
    case 4200: return _T("ERROR_WMI_GUID_NOT_FOUND");
    case 4201: return _T("ERROR_WMI_INSTANCE_NOT_FOUND");
    case 4202: return _T("ERROR_WMI_ITEMID_NOT_FOUND");
    case 4203: return _T("ERROR_WMI_TRY_AGAIN");
    case 4204: return _T("ERROR_WMI_DP_NOT_FOUND");
    case 4205: return _T("ERROR_WMI_UNRESOLVED_INSTANCE_REF");
    case 4206: return _T("ERROR_WMI_ALREADY_ENABLED");
    case 4207: return _T("ERROR_WMI_GUID_DISCONNECTED");
    case 4208: return _T("ERROR_WMI_SERVER_UNAVAILABLE");
    case 4209: return _T("ERROR_WMI_DP_FAILED");
    case 4210: return _T("ERROR_WMI_INVALID_MOF");
    case 4211: return _T("ERROR_WMI_INVALID_REGINFO");
    case 4212: return _T("ERROR_WMI_ALREADY_DISABLED");
    case 4213: return _T("ERROR_WMI_READ_ONLY");
    case 4214: return _T("ERROR_WMI_SET_FAILURE");
    case 4300: return _T("ERROR_INVALID_MEDIA");
    case 4301: return _T("ERROR_INVALID_LIBRARY");
    case 4302: return _T("ERROR_INVALID_MEDIA_POOL");
    case 4303: return _T("ERROR_DRIVE_MEDIA_MISMATCH");
    case 4304: return _T("ERROR_MEDIA_OFFLINE");
    case 4305: return _T("ERROR_LIBRARY_OFFLINE");
    case 4306: return _T("ERROR_EMPTY");
    case 4307: return _T("ERROR_NOT_EMPTY");
    case 4308: return _T("ERROR_MEDIA_UNAVAILABLE");
    case 4309: return _T("ERROR_RESOURCE_DISABLED");
    case 4310: return _T("ERROR_INVALID_CLEANER");
    case 4311: return _T("ERROR_UNABLE_TO_CLEAN");
    case 4312: return _T("ERROR_OBJECT_NOT_FOUND");
    case 4313: return _T("ERROR_DATABASE_FAILURE");
    case 4314: return _T("ERROR_DATABASE_FULL");
    case 4315: return _T("ERROR_MEDIA_INCOMPATIBLE");
    case 4316: return _T("ERROR_RESOURCE_NOT_PRESENT");
    case 4317: return _T("ERROR_INVALID_OPERATION");
    case 4318: return _T("ERROR_MEDIA_NOT_AVAILABLE");
    case 4319: return _T("ERROR_DEVICE_NOT_AVAILABLE");
    case 4320: return _T("ERROR_REQUEST_REFUSED");
    case 4321: return _T("ERROR_INVALID_DRIVE_OBJECT");
    case 4322: return _T("ERROR_LIBRARY_FULL");
    case 4323: return _T("ERROR_MEDIUM_NOT_ACCESSIBLE");
    case 4324: return _T("ERROR_UNABLE_TO_LOAD_MEDIUM");
    case 4325: return _T("ERROR_UNABLE_TO_INVENTORY_DRIVE");
    case 4326: return _T("ERROR_UNABLE_TO_INVENTORY_SLOT");
    case 4327: return _T("ERROR_UNABLE_TO_INVENTORY_TRANSPORT");
    case 4328: return _T("ERROR_TRANSPORT_FULL");
    case 4329: return _T("ERROR_CONTROLLING_IEPORT");
    case 4330: return _T("ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA");
    case 4331: return _T("ERROR_CLEANER_SLOT_SET");
    case 4332: return _T("ERROR_CLEANER_SLOT_NOT_SET");
    case 4333: return _T("ERROR_CLEANER_CARTRIDGE_SPENT");
    case 4334: return _T("ERROR_UNEXPECTED_OMID");
    case 4335: return _T("ERROR_CANT_DELETE_LAST_ITEM");
    case 4336: return _T("ERROR_MESSAGE_EXCEEDS_MAX_SIZE");
    case 4337: return _T("ERROR_VOLUME_CONTAINS_SYS_FILES");
    case 4338: return _T("ERROR_INDIGENOUS_TYPE");
    case 4339: return _T("ERROR_NO_SUPPORTING_DRIVES");
    case 4340: return _T("ERROR_CLEANER_CARTRIDGE_INSTALLED");
    case 4341: return _T("ERROR_IEPORT_FULL");
    case 4350: return _T("ERROR_FILE_OFFLINE");
    case 4351: return _T("ERROR_REMOTE_STORAGE_NOT_ACTIVE");
    case 4352: return _T("ERROR_REMOTE_STORAGE_MEDIA_ERROR");
    case 4390: return _T("ERROR_NOT_A_REPARSE_POINT");
    case 4391: return _T("ERROR_REPARSE_ATTRIBUTE_CONFLICT");
    case 4392: return _T("ERROR_INVALID_REPARSE_DATA");
    case 4393: return _T("ERROR_REPARSE_TAG_INVALID");
    case 4394: return _T("ERROR_REPARSE_TAG_MISMATCH");
    case 4500: return _T("ERROR_VOLUME_NOT_SIS_ENABLED");
    case 5001: return _T("ERROR_DEPENDENT_RESOURCE_EXISTS");
    case 5002: return _T("ERROR_DEPENDENCY_NOT_FOUND");
    case 5003: return _T("ERROR_DEPENDENCY_ALREADY_EXISTS");
    case 5004: return _T("ERROR_RESOURCE_NOT_ONLINE");
    case 5005: return _T("ERROR_HOST_NODE_NOT_AVAILABLE");
    case 5006: return _T("ERROR_RESOURCE_NOT_AVAILABLE");
    case 5007: return _T("ERROR_RESOURCE_NOT_FOUND");
    case 5008: return _T("ERROR_SHUTDOWN_CLUSTER");
    case 5009: return _T("ERROR_CANT_EVICT_ACTIVE_NODE");
    case 5010: return _T("ERROR_OBJECT_ALREADY_EXISTS");
    case 5011: return _T("ERROR_OBJECT_IN_LIST");
    case 5012: return _T("ERROR_GROUP_NOT_AVAILABLE");
    case 5013: return _T("ERROR_GROUP_NOT_FOUND");
    case 5014: return _T("ERROR_GROUP_NOT_ONLINE");
    case 5015: return _T("ERROR_HOST_NODE_NOT_RESOURCE_OWNER");
    case 5016: return _T("ERROR_HOST_NODE_NOT_GROUP_OWNER");
    case 5017: return _T("ERROR_RESMON_CREATE_FAILED");
    case 5018: return _T("ERROR_RESMON_ONLINE_FAILED");
    case 5019: return _T("ERROR_RESOURCE_ONLINE");
    case 5020: return _T("ERROR_QUORUM_RESOURCE");
    case 5021: return _T("ERROR_NOT_QUORUM_CAPABLE");
    case 5022: return _T("ERROR_CLUSTER_SHUTTING_DOWN");
    case 5023: return _T("ERROR_INVALID_STATE");
    case 5024: return _T("ERROR_RESOURCE_PROPERTIES_STORED");
    case 5025: return _T("ERROR_NOT_QUORUM_CLASS");
    case 5026: return _T("ERROR_CORE_RESOURCE");
    case 5027: return _T("ERROR_QUORUM_RESOURCE_ONLINE_FAILED");
    case 5028: return _T("ERROR_QUORUMLOG_OPEN_FAILED");
    case 5029: return _T("ERROR_CLUSTERLOG_CORRUPT");
    case 5030: return _T("ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE");
    case 5031: return _T("ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE");
    case 5032: return _T("ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND");
    case 5033: return _T("ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE");
    case 5034: return _T("ERROR_QUORUM_OWNER_ALIVE");
    case 5035: return _T("ERROR_NETWORK_NOT_AVAILABLE");
    case 5036: return _T("ERROR_NODE_NOT_AVAILABLE");
    case 5037: return _T("ERROR_ALL_NODES_NOT_AVAILABLE");
    case 5038: return _T("ERROR_RESOURCE_FAILED");
    case 5039: return _T("ERROR_CLUSTER_INVALID_NODE");
    case 5040: return _T("ERROR_CLUSTER_NODE_EXISTS");
    case 5041: return _T("ERROR_CLUSTER_JOIN_IN_PROGRESS");
    case 5042: return _T("ERROR_CLUSTER_NODE_NOT_FOUND");
    case 5043: return _T("ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND");
    case 5044: return _T("ERROR_CLUSTER_NETWORK_EXISTS");
    case 5045: return _T("ERROR_CLUSTER_NETWORK_NOT_FOUND");
    case 5046: return _T("ERROR_CLUSTER_NETINTERFACE_EXISTS");
    case 5047: return _T("ERROR_CLUSTER_NETINTERFACE_NOT_FOUND");
    case 5048: return _T("ERROR_CLUSTER_INVALID_REQUEST");
    case 5049: return _T("ERROR_CLUSTER_INVALID_NETWORK_PROVIDER");
    case 5050: return _T("ERROR_CLUSTER_NODE_DOWN");
    case 5051: return _T("ERROR_CLUSTER_NODE_UNREACHABLE");
    case 5052: return _T("ERROR_CLUSTER_NODE_NOT_MEMBER");
    case 5053: return _T("ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS");
    case 5054: return _T("ERROR_CLUSTER_INVALID_NETWORK");
    case 5056: return _T("ERROR_CLUSTER_NODE_UP");
    case 5057: return _T("ERROR_CLUSTER_IPADDR_IN_USE");
    case 5058: return _T("ERROR_CLUSTER_NODE_NOT_PAUSED");
    case 5059: return _T("ERROR_CLUSTER_NO_SECURITY_CONTEXT");
    case 5060: return _T("ERROR_CLUSTER_NETWORK_NOT_INTERNAL");
    case 5061: return _T("ERROR_CLUSTER_NODE_ALREADY_UP");
    case 5062: return _T("ERROR_CLUSTER_NODE_ALREADY_DOWN");
    case 5063: return _T("ERROR_CLUSTER_NETWORK_ALREADY_ONLINE");
    case 5064: return _T("ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE");
    case 5065: return _T("ERROR_CLUSTER_NODE_ALREADY_MEMBER");
    case 5066: return _T("ERROR_CLUSTER_LAST_INTERNAL_NETWORK");
    case 5067: return _T("ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS");
    case 5068: return _T("ERROR_INVALID_OPERATION_ON_QUORUM");
    case 5069: return _T("ERROR_DEPENDENCY_NOT_ALLOWED");
    case 5070: return _T("ERROR_CLUSTER_NODE_PAUSED");
    case 5071: return _T("ERROR_NODE_CANT_HOST_RESOURCE");
    case 5072: return _T("ERROR_CLUSTER_NODE_NOT_READY");
    case 5073: return _T("ERROR_CLUSTER_NODE_SHUTTING_DOWN");
    case 5074: return _T("ERROR_CLUSTER_JOIN_ABORTED");
    case 5075: return _T("ERROR_CLUSTER_INCOMPATIBLE_VERSIONS");
    case 5076: return _T("ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED");
    case 5077: return _T("ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED");
    case 5078: return _T("ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND");
    case 5079: return _T("ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED");
    case 5080: return _T("ERROR_CLUSTER_RESNAME_NOT_FOUND");
    case 5081: return _T("ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED");
    case 5082: return _T("ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST");
    case 5083: return _T("ERROR_CLUSTER_DATABASE_SEQMISMATCH");
    case 5084: return _T("ERROR_RESMON_INVALID_STATE");
    case 5085: return _T("ERROR_CLUSTER_GUM_NOT_LOCKER");
    case 5086: return _T("ERROR_QUORUM_DISK_NOT_FOUND");
    case 5087: return _T("ERROR_DATABASE_BACKUP_CORRUPT");
    case 5088: return _T("ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT");
    case 5089: return _T("ERROR_RESOURCE_PROPERTY_UNCHANGEABLE");
    case 5890: return _T("ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE");
    case 5891: return _T("ERROR_CLUSTER_QUORUMLOG_NOT_FOUND");
    case 5892: return _T("ERROR_CLUSTER_MEMBERSHIP_HALT");
    case 5893: return _T("ERROR_CLUSTER_INSTANCE_ID_MISMATCH");
    case 5894: return _T("ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP");
    case 5895: return _T("ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH");
    case 5896: return _T("ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP");
    case 5897: return _T("ERROR_CLUSTER_PARAMETER_MISMATCH");
    case 5898: return _T("ERROR_NODE_CANNOT_BE_CLUSTERED");
    case 5899: return _T("ERROR_CLUSTER_WRONG_OS_VERSION");
    case 5900: return _T("ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME");
    case 5901: return _T("ERROR_CLUSCFG_ALREADY_COMMITTED");
    case 5902: return _T("ERROR_CLUSCFG_ROLLBACK_FAILED");
    case 5903: return _T("ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT");
    case 5904: return _T("ERROR_CLUSTER_OLD_VERSION");
    case 5905: return _T("ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME");
    case 5906: return _T("ERROR_CLUSTER_NO_NET_ADAPTERS");
    case 5907: return _T("ERROR_CLUSTER_POISONED");
    case 5908: return _T("ERROR_CLUSTER_GROUP_MOVING");
    case 5909: return _T("ERROR_CLUSTER_RESOURCE_TYPE_BUSY");
    case 5910: return _T("ERROR_RESOURCE_CALL_TIMED_OUT");
    case 5911: return _T("ERROR_INVALID_CLUSTER_IPV6_ADDRESS");
    case 5912: return _T("ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION");
    case 5913: return _T("ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS");
    case 5914: return _T("ERROR_CLUSTER_PARTIAL_SEND");
    case 5915: return _T("ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION");
    case 5916: return _T("ERROR_CLUSTER_INVALID_STRING_TERMINATION");
    case 5917: return _T("ERROR_CLUSTER_INVALID_STRING_FORMAT");
    case 5918: return _T("ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS");
    case 5919: return _T("ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS");
    case 5920: return _T("ERROR_CLUSTER_NULL_DATA");
    case 5921: return _T("ERROR_CLUSTER_PARTIAL_READ");
    case 5922: return _T("ERROR_CLUSTER_PARTIAL_WRITE");
    case 5923: return _T("ERROR_CLUSTER_CANT_DESERIALIZE_DATA");
    case 5924: return _T("ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT");
    case 5925: return _T("ERROR_CLUSTER_NO_QUORUM");
    case 5926: return _T("ERROR_CLUSTER_INVALID_IPV6_NETWORK");
    case 5927: return _T("ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK");
    case 5928: return _T("ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP");
    case 5929: return _T("ERROR_DEPENDENCY_TREE_TOO_COMPLEX");
    case 5930: return _T("ERROR_EXCEPTION_IN_RESOURCE_CALL");
    case 5931: return _T("ERROR_CLUSTER_RHS_FAILED_INITIALIZATION");
    case 5932: return _T("ERROR_CLUSTER_NOT_INSTALLED");
    case 5933: return _T("ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE");
    case 5934: return _T("ERROR_CLUSTER_MAX_NODES_IN_CLUSTER");
    case 5935: return _T("ERROR_CLUSTER_TOO_MANY_NODES");
    case 5936: return _T("ERROR_CLUSTER_OBJECT_ALREADY_USED");
    case 5937: return _T("ERROR_NONCORE_GROUPS_FOUND");
    case 5938: return _T("ERROR_FILE_SHARE_RESOURCE_CONFLICT");
    case 5939: return _T("ERROR_CLUSTER_EVICT_INVALID_REQUEST");
    case 5940: return _T("ERROR_CLUSTER_SINGLETON_RESOURCE");
    case 5941: return _T("ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE");
    case 5942: return _T("ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED");
    case 5943: return _T("ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR");
    case 5944: return _T("ERROR_CLUSTER_GROUP_BUSY");
    case 5945: return _T("ERROR_CLUSTER_NOT_SHARED_VOLUME");
    case 5946: return _T("ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR");
    case 5947: return _T("ERROR_CLUSTER_SHARED_VOLUMES_IN_USE");
    case 5948: return _T("ERROR_CLUSTER_USE_SHARED_VOLUMES_API");
    case 5949: return _T("ERROR_CLUSTER_BACKUP_IN_PROGRESS");
    case 5950: return _T("ERROR_NON_CSV_PATH");
    case 5951: return _T("ERROR_CSV_VOLUME_NOT_LOCAL");
    case 5952: return _T("ERROR_CLUSTER_WATCHDOG_TERMINATING");
    case 6000: return _T("ERROR_ENCRYPTION_FAILED");
    case 6001: return _T("ERROR_DECRYPTION_FAILED");
    case 6002: return _T("ERROR_FILE_ENCRYPTED");
    case 6003: return _T("ERROR_NO_RECOVERY_POLICY");
    case 6004: return _T("ERROR_NO_EFS");
    case 6005: return _T("ERROR_WRONG_EFS");
    case 6006: return _T("ERROR_NO_USER_KEYS");
    case 6007: return _T("ERROR_FILE_NOT_ENCRYPTED");
    case 6008: return _T("ERROR_NOT_EXPORT_FORMAT");
    case 6009: return _T("ERROR_FILE_READ_ONLY");
    case 6010: return _T("ERROR_DIR_EFS_DISALLOWED");
    case 6011: return _T("ERROR_EFS_SERVER_NOT_TRUSTED");
    case 6012: return _T("ERROR_BAD_RECOVERY_POLICY");
    case 6013: return _T("ERROR_EFS_ALG_BLOB_TOO_BIG");
    case 6014: return _T("ERROR_VOLUME_NOT_SUPPORT_EFS");
    case 6015: return _T("ERROR_EFS_DISABLED");
    case 6016: return _T("ERROR_EFS_VERSION_NOT_SUPPORT");
    case 6017: return _T("ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE");
    case 6018: return _T("ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER");
    case 6019: return _T("ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE");
    case 6020: return _T("ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE");
    case 6021: return _T("ERROR_CS_ENCRYPTION_FILE_NOT_CSE");
    case 6022: return _T("ERROR_ENCRYPTION_POLICY_DENIES_OPERATION");
    case 6118: return _T("ERROR_NO_BROWSER_SERVERS_FOUND");
    case 6200: return _T("SCHED_E_SERVICE_NOT_LOCALSYSTEM");
    case 6600: return _T("ERROR_LOG_SECTOR_INVALID");
    case 6601: return _T("ERROR_LOG_SECTOR_PARITY_INVALID");
    case 6602: return _T("ERROR_LOG_SECTOR_REMAPPED");
    case 6603: return _T("ERROR_LOG_BLOCK_INCOMPLETE");
    case 6604: return _T("ERROR_LOG_INVALID_RANGE");
    case 6605: return _T("ERROR_LOG_BLOCKS_EXHAUSTED");
    case 6606: return _T("ERROR_LOG_READ_CONTEXT_INVALID");
    case 6607: return _T("ERROR_LOG_RESTART_INVALID");
    case 6608: return _T("ERROR_LOG_BLOCK_VERSION");
    case 6609: return _T("ERROR_LOG_BLOCK_INVALID");
    case 6610: return _T("ERROR_LOG_READ_MODE_INVALID");
    case 6611: return _T("ERROR_LOG_NO_RESTART");
    case 6612: return _T("ERROR_LOG_METADATA_CORRUPT");
    case 6613: return _T("ERROR_LOG_METADATA_INVALID");
    case 6614: return _T("ERROR_LOG_METADATA_INCONSISTENT");
    case 6615: return _T("ERROR_LOG_RESERVATION_INVALID");
    case 6616: return _T("ERROR_LOG_CANT_DELETE");
    case 6617: return _T("ERROR_LOG_CONTAINER_LIMIT_EXCEEDED");
    case 6618: return _T("ERROR_LOG_START_OF_LOG");
    case 6619: return _T("ERROR_LOG_POLICY_ALREADY_INSTALLED");
    case 6620: return _T("ERROR_LOG_POLICY_NOT_INSTALLED");
    case 6621: return _T("ERROR_LOG_POLICY_INVALID");
    case 6622: return _T("ERROR_LOG_POLICY_CONFLICT");
    case 6623: return _T("ERROR_LOG_PINNED_ARCHIVE_TAIL");
    case 6624: return _T("ERROR_LOG_RECORD_NONEXISTENT");
    case 6625: return _T("ERROR_LOG_RECORDS_RESERVED_INVALID");
    case 6626: return _T("ERROR_LOG_SPACE_RESERVED_INVALID");
    case 6627: return _T("ERROR_LOG_TAIL_INVALID");
    case 6628: return _T("ERROR_LOG_FULL");
    case 6629: return _T("ERROR_COULD_NOT_RESIZE_LOG");
    case 6630: return _T("ERROR_LOG_MULTIPLEXED");
    case 6631: return _T("ERROR_LOG_DEDICATED");
    case 6632: return _T("ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS");
    case 6633: return _T("ERROR_LOG_ARCHIVE_IN_PROGRESS");
    case 6634: return _T("ERROR_LOG_EPHEMERAL");
    case 6635: return _T("ERROR_LOG_NOT_ENOUGH_CONTAINERS");
    case 6636: return _T("ERROR_LOG_CLIENT_ALREADY_REGISTERED");
    case 6637: return _T("ERROR_LOG_CLIENT_NOT_REGISTERED");
    case 6638: return _T("ERROR_LOG_FULL_HANDLER_IN_PROGRESS");
    case 6639: return _T("ERROR_LOG_CONTAINER_READ_FAILED");
    case 6640: return _T("ERROR_LOG_CONTAINER_WRITE_FAILED");
    case 6641: return _T("ERROR_LOG_CONTAINER_OPEN_FAILED");
    case 6642: return _T("ERROR_LOG_CONTAINER_STATE_INVALID");
    case 6643: return _T("ERROR_LOG_STATE_INVALID");
    case 6644: return _T("ERROR_LOG_PINNED");
    case 6645: return _T("ERROR_LOG_METADATA_FLUSH_FAILED");
    case 6646: return _T("ERROR_LOG_INCONSISTENT_SECURITY");
    case 6647: return _T("ERROR_LOG_APPENDED_FLUSH_FAILED");
    case 6648: return _T("ERROR_LOG_PINNED_RESERVATION");
    case 6700: return _T("ERROR_INVALID_TRANSACTION");
    case 6701: return _T("ERROR_TRANSACTION_NOT_ACTIVE");
    case 6702: return _T("ERROR_TRANSACTION_REQUEST_NOT_VALID");
    case 6703: return _T("ERROR_TRANSACTION_NOT_REQUESTED");
    case 6704: return _T("ERROR_TRANSACTION_ALREADY_ABORTED");
    case 6705: return _T("ERROR_TRANSACTION_ALREADY_COMMITTED");
    case 6706: return _T("ERROR_TM_INITIALIZATION_FAILED");
    case 6707: return _T("ERROR_RESOURCEMANAGER_READ_ONLY");
    case 6708: return _T("ERROR_TRANSACTION_NOT_JOINED");
    case 6709: return _T("ERROR_TRANSACTION_SUPERIOR_EXISTS");
    case 6710: return _T("ERROR_CRM_PROTOCOL_ALREADY_EXISTS");
    case 6711: return _T("ERROR_TRANSACTION_PROPAGATION_FAILED");
    case 6712: return _T("ERROR_CRM_PROTOCOL_NOT_FOUND");
    case 6713: return _T("ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER");
    case 6714: return _T("ERROR_CURRENT_TRANSACTION_NOT_VALID");
    case 6715: return _T("ERROR_TRANSACTION_NOT_FOUND");
    case 6716: return _T("ERROR_RESOURCEMANAGER_NOT_FOUND");
    case 6717: return _T("ERROR_ENLISTMENT_NOT_FOUND");
    case 6718: return _T("ERROR_TRANSACTIONMANAGER_NOT_FOUND");
    case 6719: return _T("ERROR_TRANSACTIONMANAGER_NOT_ONLINE");
    case 6720: return _T("ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION");
    case 6721: return _T("ERROR_TRANSACTION_NOT_ROOT");
    case 6722: return _T("ERROR_TRANSACTION_OBJECT_EXPIRED");
    case 6723: return _T("ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED");
    case 6724: return _T("ERROR_TRANSACTION_RECORD_TOO_LONG");
    case 6725: return _T("ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED");
    case 6726: return _T("ERROR_TRANSACTION_INTEGRITY_VIOLATED");
    case 6727: return _T("ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH");
    case 6728: return _T("ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT");
    case 6729: return _T("ERROR_TRANSACTION_MUST_WRITETHROUGH");
    case 6730: return _T("ERROR_TRANSACTION_NO_SUPERIOR");
    case 6731: return _T("ERROR_HEURISTIC_DAMAGE_POSSIBLE");
    case 6800: return _T("ERROR_TRANSACTIONAL_CONFLICT");
    case 6801: return _T("ERROR_RM_NOT_ACTIVE");
    case 6802: return _T("ERROR_RM_METADATA_CORRUPT");
    case 6803: return _T("ERROR_DIRECTORY_NOT_RM");
    case 6805: return _T("ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE");
    case 6806: return _T("ERROR_LOG_RESIZE_INVALID_SIZE");
    case 6807: return _T("ERROR_OBJECT_NO_LONGER_EXISTS");
    case 6808: return _T("ERROR_STREAM_MINIVERSION_NOT_FOUND");
    case 6809: return _T("ERROR_STREAM_MINIVERSION_NOT_VALID");
    case 6810: return _T("ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION");
    case 6811: return _T("ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT");
    case 6812: return _T("ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS");
    case 6814: return _T("ERROR_REMOTE_FILE_VERSION_MISMATCH");
    case 6815: return _T("ERROR_HANDLE_NO_LONGER_VALID");
    case 6816: return _T("ERROR_NO_TXF_METADATA");
    case 6817: return _T("ERROR_LOG_CORRUPTION_DETECTED");
    case 6818: return _T("ERROR_CANT_RECOVER_WITH_HANDLE_OPEN");
    case 6819: return _T("ERROR_RM_DISCONNECTED");
    case 6820: return _T("ERROR_ENLISTMENT_NOT_SUPERIOR");
    case 6821: return _T("ERROR_RECOVERY_NOT_NEEDED");
    case 6822: return _T("ERROR_RM_ALREADY_STARTED");
    case 6823: return _T("ERROR_FILE_IDENTITY_NOT_PERSISTENT");
    case 6824: return _T("ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY");
    case 6825: return _T("ERROR_CANT_CROSS_RM_BOUNDARY");
    case 6826: return _T("ERROR_TXF_DIR_NOT_EMPTY");
    case 6827: return _T("ERROR_INDOUBT_TRANSACTIONS_EXIST");
    case 6828: return _T("ERROR_TM_VOLATILE");
    case 6829: return _T("ERROR_ROLLBACK_TIMER_EXPIRED");
    case 6830: return _T("ERROR_TXF_ATTRIBUTE_CORRUPT");
    case 6831: return _T("ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION");
    case 6832: return _T("ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED");
    case 6833: return _T("ERROR_LOG_GROWTH_FAILED");
    case 6834: return _T("ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE");
    case 6835: return _T("ERROR_TXF_METADATA_ALREADY_PRESENT");
    case 6836: return _T("ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET");
    case 6837: return _T("ERROR_TRANSACTION_REQUIRED_PROMOTION");
    case 6838: return _T("ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION");
    case 6839: return _T("ERROR_TRANSACTIONS_NOT_FROZEN");
    case 6840: return _T("ERROR_TRANSACTION_FREEZE_IN_PROGRESS");
    case 6841: return _T("ERROR_NOT_SNAPSHOT_VOLUME");
    case 6842: return _T("ERROR_NO_SAVEPOINT_WITH_OPEN_FILES");
    case 6843: return _T("ERROR_DATA_LOST_REPAIR");
    case 6844: return _T("ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION");
    case 6845: return _T("ERROR_TM_IDENTITY_MISMATCH");
    case 6846: return _T("ERROR_FLOATED_SECTION");
    case 6847: return _T("ERROR_CANNOT_ACCEPT_TRANSACTED_WORK");
    case 6848: return _T("ERROR_CANNOT_ABORT_TRANSACTIONS");
    case 6849: return _T("ERROR_BAD_CLUSTERS");
    case 6850: return _T("ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION");
    case 6851: return _T("ERROR_VOLUME_DIRTY");
    case 6852: return _T("ERROR_NO_LINK_TRACKING_IN_TRANSACTION");
    case 6853: return _T("ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION");
    case 6854: return _T("ERROR_EXPIRED_HANDLE");
    case 6855: return _T("ERROR_TRANSACTION_NOT_ENLISTED");
    case 7001: return _T("ERROR_CTX_WINSTATION_NAME_INVALID");
    case 7002: return _T("ERROR_CTX_INVALID_PD");
    case 7003: return _T("ERROR_CTX_PD_NOT_FOUND");
    case 7004: return _T("ERROR_CTX_WD_NOT_FOUND");
    case 7005: return _T("ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY");
    case 7006: return _T("ERROR_CTX_SERVICE_NAME_COLLISION");
    case 7007: return _T("ERROR_CTX_CLOSE_PENDING");
    case 7008: return _T("ERROR_CTX_NO_OUTBUF");
    case 7009: return _T("ERROR_CTX_MODEM_INF_NOT_FOUND");
    case 7010: return _T("ERROR_CTX_INVALID_MODEMNAME");
    case 7011: return _T("ERROR_CTX_MODEM_RESPONSE_ERROR");
    case 7012: return _T("ERROR_CTX_MODEM_RESPONSE_TIMEOUT");
    case 7013: return _T("ERROR_CTX_MODEM_RESPONSE_NO_CARRIER");
    case 7014: return _T("ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE");
    case 7015: return _T("ERROR_CTX_MODEM_RESPONSE_BUSY");
    case 7016: return _T("ERROR_CTX_MODEM_RESPONSE_VOICE");
    case 7017: return _T("ERROR_CTX_TD_ERROR");
    case 7022: return _T("ERROR_CTX_WINSTATION_NOT_FOUND");
    case 7023: return _T("ERROR_CTX_WINSTATION_ALREADY_EXISTS");
    case 7024: return _T("ERROR_CTX_WINSTATION_BUSY");
    case 7025: return _T("ERROR_CTX_BAD_VIDEO_MODE");
    case 7035: return _T("ERROR_CTX_GRAPHICS_INVALID");
    case 7037: return _T("ERROR_CTX_LOGON_DISABLED");
    case 7038: return _T("ERROR_CTX_NOT_CONSOLE");
    case 7040: return _T("ERROR_CTX_CLIENT_QUERY_TIMEOUT");
    case 7041: return _T("ERROR_CTX_CONSOLE_DISCONNECT");
    case 7042: return _T("ERROR_CTX_CONSOLE_CONNECT");
    case 7044: return _T("ERROR_CTX_SHADOW_DENIED");
    case 7045: return _T("ERROR_CTX_WINSTATION_ACCESS_DENIED");
    case 7049: return _T("ERROR_CTX_INVALID_WD");
    case 7050: return _T("ERROR_CTX_SHADOW_INVALID");
    case 7051: return _T("ERROR_CTX_SHADOW_DISABLED");
    case 7052: return _T("ERROR_CTX_CLIENT_LICENSE_IN_USE");
    case 7053: return _T("ERROR_CTX_CLIENT_LICENSE_NOT_SET");
    case 7054: return _T("ERROR_CTX_LICENSE_NOT_AVAILABLE");
    case 7055: return _T("ERROR_CTX_LICENSE_CLIENT_INVALID");
    case 7056: return _T("ERROR_CTX_LICENSE_EXPIRED");
    case 7057: return _T("ERROR_CTX_SHADOW_NOT_RUNNING");
    case 7058: return _T("ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE");
    case 7059: return _T("ERROR_ACTIVATION_COUNT_EXCEEDED");
    case 7060: return _T("ERROR_CTX_WINSTATIONS_DISABLED");
    case 7061: return _T("ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED");
    case 7062: return _T("ERROR_CTX_SESSION_IN_USE");
    case 7063: return _T("ERROR_CTX_NO_FORCE_LOGOFF");
    case 7064: return _T("ERROR_CTX_ACCOUNT_RESTRICTION");
    case 7065: return _T("ERROR_RDP_PROTOCOL_ERROR");
    case 7066: return _T("ERROR_CTX_CDM_CONNECT");
    case 7067: return _T("ERROR_CTX_CDM_DISCONNECT");
    case 7068: return _T("ERROR_CTX_SECURITY_LAYER_ERROR");
    case 7069: return _T("ERROR_TS_INCOMPATIBLE_SESSIONS");
    case 7070: return _T("ERROR_TS_VIDEO_SUBSYSTEM_ERROR");
    case 8001: return _T("FRS_ERR_INVALID_API_SEQUENCE");
    case 8002: return _T("FRS_ERR_STARTING_SERVICE");
    case 8003: return _T("FRS_ERR_STOPPING_SERVICE");
    case 8004: return _T("FRS_ERR_INTERNAL_API");
    case 8005: return _T("FRS_ERR_INTERNAL");
    case 8006: return _T("FRS_ERR_SERVICE_COMM");
    case 8007: return _T("FRS_ERR_INSUFFICIENT_PRIV");
    case 8008: return _T("FRS_ERR_AUTHENTICATION");
    case 8009: return _T("FRS_ERR_PARENT_INSUFFICIENT_PRIV");
    case 8010: return _T("FRS_ERR_PARENT_AUTHENTICATION");
    case 8011: return _T("FRS_ERR_CHILD_TO_PARENT_COMM");
    case 8012: return _T("FRS_ERR_PARENT_TO_CHILD_COMM");
    case 8013: return _T("FRS_ERR_SYSVOL_POPULATE");
    case 8014: return _T("FRS_ERR_SYSVOL_POPULATE_TIMEOUT");
    case 8015: return _T("FRS_ERR_SYSVOL_IS_BUSY");
    case 8016: return _T("FRS_ERR_SYSVOL_DEMOTE");
    case 8017: return _T("FRS_ERR_INVALID_SERVICE_PARAMETER");
    case 8200: return _T("ERROR_DS_NOT_INSTALLED");
    case 8201: return _T("ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY");
    case 8202: return _T("ERROR_DS_NO_ATTRIBUTE_OR_VALUE");
    case 8203: return _T("ERROR_DS_INVALID_ATTRIBUTE_SYNTAX");
    case 8204: return _T("ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED");
    case 8205: return _T("ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS");
    case 8206: return _T("ERROR_DS_BUSY");
    case 8207: return _T("ERROR_DS_UNAVAILABLE");
    case 8208: return _T("ERROR_DS_NO_RIDS_ALLOCATED");
    case 8209: return _T("ERROR_DS_NO_MORE_RIDS");
    case 8210: return _T("ERROR_DS_INCORRECT_ROLE_OWNER");
    case 8211: return _T("ERROR_DS_RIDMGR_INIT_ERROR");
    case 8212: return _T("ERROR_DS_OBJ_CLASS_VIOLATION");
    case 8213: return _T("ERROR_DS_CANT_ON_NON_LEAF");
    case 8214: return _T("ERROR_DS_CANT_ON_RDN");
    case 8215: return _T("ERROR_DS_CANT_MOD_OBJ_CLASS");
    case 8216: return _T("ERROR_DS_CROSS_DOM_MOVE_ERROR");
    case 8217: return _T("ERROR_DS_GC_NOT_AVAILABLE");
    case 8218: return _T("ERROR_SHARED_POLICY");
    case 8219: return _T("ERROR_POLICY_OBJECT_NOT_FOUND");
    case 8220: return _T("ERROR_POLICY_ONLY_IN_DS");
    case 8221: return _T("ERROR_PROMOTION_ACTIVE");
    case 8222: return _T("ERROR_NO_PROMOTION_ACTIVE");
    case 8224: return _T("ERROR_DS_OPERATIONS_ERROR");
    case 8225: return _T("ERROR_DS_PROTOCOL_ERROR");
    case 8226: return _T("ERROR_DS_TIMELIMIT_EXCEEDED");
    case 8227: return _T("ERROR_DS_SIZELIMIT_EXCEEDED");
    case 8228: return _T("ERROR_DS_ADMIN_LIMIT_EXCEEDED");
    case 8229: return _T("ERROR_DS_COMPARE_FALSE");
    case 8230: return _T("ERROR_DS_COMPARE_TRUE");
    case 8231: return _T("ERROR_DS_AUTH_METHOD_NOT_SUPPORTED");
    case 8232: return _T("ERROR_DS_STRONG_AUTH_REQUIRED");
    case 8233: return _T("ERROR_DS_INAPPROPRIATE_AUTH");
    case 8234: return _T("ERROR_DS_AUTH_UNKNOWN");
    case 8235: return _T("ERROR_DS_REFERRAL");
    case 8236: return _T("ERROR_DS_UNAVAILABLE_CRIT_EXTENSION");
    case 8237: return _T("ERROR_DS_CONFIDENTIALITY_REQUIRED");
    case 8238: return _T("ERROR_DS_INAPPROPRIATE_MATCHING");
    case 8239: return _T("ERROR_DS_CONSTRAINT_VIOLATION");
    case 8240: return _T("ERROR_DS_NO_SUCH_OBJECT");
    case 8241: return _T("ERROR_DS_ALIAS_PROBLEM");
    case 8242: return _T("ERROR_DS_INVALID_DN_SYNTAX");
    case 8243: return _T("ERROR_DS_IS_LEAF");
    case 8244: return _T("ERROR_DS_ALIAS_DEREF_PROBLEM");
    case 8245: return _T("ERROR_DS_UNWILLING_TO_PERFORM");
    case 8246: return _T("ERROR_DS_LOOP_DETECT");
    case 8247: return _T("ERROR_DS_NAMING_VIOLATION");
    case 8248: return _T("ERROR_DS_OBJECT_RESULTS_TOO_LARGE");
    case 8249: return _T("ERROR_DS_AFFECTS_MULTIPLE_DSAS");
    case 8250: return _T("ERROR_DS_SERVER_DOWN");
    case 8251: return _T("ERROR_DS_LOCAL_ERROR");
    case 8252: return _T("ERROR_DS_ENCODING_ERROR");
    case 8253: return _T("ERROR_DS_DECODING_ERROR");
    case 8254: return _T("ERROR_DS_FILTER_UNKNOWN");
    case 8255: return _T("ERROR_DS_PARAM_ERROR");
    case 8256: return _T("ERROR_DS_NOT_SUPPORTED");
    case 8257: return _T("ERROR_DS_NO_RESULTS_RETURNED");
    case 8258: return _T("ERROR_DS_CONTROL_NOT_FOUND");
    case 8259: return _T("ERROR_DS_CLIENT_LOOP");
    case 8260: return _T("ERROR_DS_REFERRAL_LIMIT_EXCEEDED");
    case 8261: return _T("ERROR_DS_SORT_CONTROL_MISSING");
    case 8262: return _T("ERROR_DS_OFFSET_RANGE_ERROR");
    case 8301: return _T("ERROR_DS_ROOT_MUST_BE_NC");
    case 8302: return _T("ERROR_DS_ADD_REPLICA_INHIBITED");
    case 8303: return _T("ERROR_DS_ATT_NOT_DEF_IN_SCHEMA");
    case 8304: return _T("ERROR_DS_MAX_OBJ_SIZE_EXCEEDED");
    case 8305: return _T("ERROR_DS_OBJ_STRING_NAME_EXISTS");
    case 8306: return _T("ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA");
    case 8307: return _T("ERROR_DS_RDN_DOESNT_MATCH_SCHEMA");
    case 8308: return _T("ERROR_DS_NO_REQUESTED_ATTS_FOUND");
    case 8309: return _T("ERROR_DS_USER_BUFFER_TO_SMALL");
    case 8310: return _T("ERROR_DS_ATT_IS_NOT_ON_OBJ");
    case 8311: return _T("ERROR_DS_ILLEGAL_MOD_OPERATION");
    case 8312: return _T("ERROR_DS_OBJ_TOO_LARGE");
    case 8313: return _T("ERROR_DS_BAD_INSTANCE_TYPE");
    case 8314: return _T("ERROR_DS_MASTERDSA_REQUIRED");
    case 8315: return _T("ERROR_DS_OBJECT_CLASS_REQUIRED");
    case 8316: return _T("ERROR_DS_MISSING_REQUIRED_ATT");
    case 8317: return _T("ERROR_DS_ATT_NOT_DEF_FOR_CLASS");
    case 8318: return _T("ERROR_DS_ATT_ALREADY_EXISTS");
    case 8320: return _T("ERROR_DS_CANT_ADD_ATT_VALUES");
    case 8321: return _T("ERROR_DS_SINGLE_VALUE_CONSTRAINT");
    case 8322: return _T("ERROR_DS_RANGE_CONSTRAINT");
    case 8323: return _T("ERROR_DS_ATT_VAL_ALREADY_EXISTS");
    case 8324: return _T("ERROR_DS_CANT_REM_MISSING_ATT");
    case 8325: return _T("ERROR_DS_CANT_REM_MISSING_ATT_VAL");
    case 8326: return _T("ERROR_DS_ROOT_CANT_BE_SUBREF");
    case 8327: return _T("ERROR_DS_NO_CHAINING");
    case 8328: return _T("ERROR_DS_NO_CHAINED_EVAL");
    case 8329: return _T("ERROR_DS_NO_PARENT_OBJECT");
    case 8330: return _T("ERROR_DS_PARENT_IS_AN_ALIAS");
    case 8331: return _T("ERROR_DS_CANT_MIX_MASTER_AND_REPS");
    case 8332: return _T("ERROR_DS_CHILDREN_EXIST");
    case 8333: return _T("ERROR_DS_OBJ_NOT_FOUND");
    case 8334: return _T("ERROR_DS_ALIASED_OBJ_MISSING");
    case 8335: return _T("ERROR_DS_BAD_NAME_SYNTAX");
    case 8336: return _T("ERROR_DS_ALIAS_POINTS_TO_ALIAS");
    case 8337: return _T("ERROR_DS_CANT_DEREF_ALIAS");
    case 8338: return _T("ERROR_DS_OUT_OF_SCOPE");
    case 8339: return _T("ERROR_DS_OBJECT_BEING_REMOVED");
    case 8340: return _T("ERROR_DS_CANT_DELETE_DSA_OBJ");
    case 8341: return _T("ERROR_DS_GENERIC_ERROR");
    case 8342: return _T("ERROR_DS_DSA_MUST_BE_INT_MASTER");
    case 8343: return _T("ERROR_DS_CLASS_NOT_DSA");
    case 8344: return _T("ERROR_DS_INSUFF_ACCESS_RIGHTS");
    case 8345: return _T("ERROR_DS_ILLEGAL_SUPERIOR");
    case 8346: return _T("ERROR_DS_ATTRIBUTE_OWNED_BY_SAM");
    case 8347: return _T("ERROR_DS_NAME_TOO_MANY_PARTS");
    case 8348: return _T("ERROR_DS_NAME_TOO_LONG");
    case 8349: return _T("ERROR_DS_NAME_VALUE_TOO_LONG");
    case 8350: return _T("ERROR_DS_NAME_UNPARSEABLE");
    case 8351: return _T("ERROR_DS_NAME_TYPE_UNKNOWN");
    case 8352: return _T("ERROR_DS_NOT_AN_OBJECT");
    case 8353: return _T("ERROR_DS_SEC_DESC_TOO_SHORT");
    case 8354: return _T("ERROR_DS_SEC_DESC_INVALID");
    case 8355: return _T("ERROR_DS_NO_DELETED_NAME");
    case 8356: return _T("ERROR_DS_SUBREF_MUST_HAVE_PARENT");
    case 8357: return _T("ERROR_DS_NCNAME_MUST_BE_NC");
    case 8358: return _T("ERROR_DS_CANT_ADD_SYSTEM_ONLY");
    case 8359: return _T("ERROR_DS_CLASS_MUST_BE_CONCRETE");
    case 8360: return _T("ERROR_DS_INVALID_DMD");
    case 8361: return _T("ERROR_DS_OBJ_GUID_EXISTS");
    case 8362: return _T("ERROR_DS_NOT_ON_BACKLINK");
    case 8363: return _T("ERROR_DS_NO_CROSSREF_FOR_NC");
    case 8364: return _T("ERROR_DS_SHUTTING_DOWN");
    case 8365: return _T("ERROR_DS_UNKNOWN_OPERATION");
    case 8366: return _T("ERROR_DS_INVALID_ROLE_OWNER");
    case 8367: return _T("ERROR_DS_COULDNT_CONTACT_FSMO");
    case 8368: return _T("ERROR_DS_CROSS_NC_DN_RENAME");
    case 8369: return _T("ERROR_DS_CANT_MOD_SYSTEM_ONLY");
    case 8370: return _T("ERROR_DS_REPLICATOR_ONLY");
    case 8371: return _T("ERROR_DS_OBJ_CLASS_NOT_DEFINED");
    case 8372: return _T("ERROR_DS_OBJ_CLASS_NOT_SUBCLASS");
    case 8373: return _T("ERROR_DS_NAME_REFERENCE_INVALID");
    case 8374: return _T("ERROR_DS_CROSS_REF_EXISTS");
    case 8375: return _T("ERROR_DS_CANT_DEL_MASTER_CROSSREF");
    case 8376: return _T("ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD");
    case 8377: return _T("ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX");
    case 8378: return _T("ERROR_DS_DUP_RDN");
    case 8379: return _T("ERROR_DS_DUP_OID");
    case 8380: return _T("ERROR_DS_DUP_MAPI_ID");
    case 8381: return _T("ERROR_DS_DUP_SCHEMA_ID_GUID");
    case 8382: return _T("ERROR_DS_DUP_LDAP_DISPLAY_NAME");
    case 8383: return _T("ERROR_DS_SEMANTIC_ATT_TEST");
    case 8384: return _T("ERROR_DS_SYNTAX_MISMATCH");
    case 8385: return _T("ERROR_DS_EXISTS_IN_MUST_HAVE");
    case 8386: return _T("ERROR_DS_EXISTS_IN_MAY_HAVE");
    case 8387: return _T("ERROR_DS_NONEXISTENT_MAY_HAVE");
    case 8388: return _T("ERROR_DS_NONEXISTENT_MUST_HAVE");
    case 8389: return _T("ERROR_DS_AUX_CLS_TEST_FAIL");
    case 8390: return _T("ERROR_DS_NONEXISTENT_POSS_SUP");
    case 8391: return _T("ERROR_DS_SUB_CLS_TEST_FAIL");
    case 8392: return _T("ERROR_DS_BAD_RDN_ATT_ID_SYNTAX");
    case 8393: return _T("ERROR_DS_EXISTS_IN_AUX_CLS");
    case 8394: return _T("ERROR_DS_EXISTS_IN_SUB_CLS");
    case 8395: return _T("ERROR_DS_EXISTS_IN_POSS_SUP");
    case 8396: return _T("ERROR_DS_RECALCSCHEMA_FAILED");
    case 8397: return _T("ERROR_DS_TREE_DELETE_NOT_FINISHED");
    case 8398: return _T("ERROR_DS_CANT_DELETE");
    case 8399: return _T("ERROR_DS_ATT_SCHEMA_REQ_ID");
    case 8400: return _T("ERROR_DS_BAD_ATT_SCHEMA_SYNTAX");
    case 8401: return _T("ERROR_DS_CANT_CACHE_ATT");
    case 8402: return _T("ERROR_DS_CANT_CACHE_CLASS");
    case 8403: return _T("ERROR_DS_CANT_REMOVE_ATT_CACHE");
    case 8404: return _T("ERROR_DS_CANT_REMOVE_CLASS_CACHE");
    case 8405: return _T("ERROR_DS_CANT_RETRIEVE_DN");
    case 8406: return _T("ERROR_DS_MISSING_SUPREF");
    case 8407: return _T("ERROR_DS_CANT_RETRIEVE_INSTANCE");
    case 8408: return _T("ERROR_DS_CODE_INCONSISTENCY");
    case 8409: return _T("ERROR_DS_DATABASE_ERROR");
    case 8410: return _T("ERROR_DS_GOVERNSID_MISSING");
    case 8411: return _T("ERROR_DS_MISSING_EXPECTED_ATT");
    case 8412: return _T("ERROR_DS_NCNAME_MISSING_CR_REF");
    case 8413: return _T("ERROR_DS_SECURITY_CHECKING_ERROR");
    case 8414: return _T("ERROR_DS_SCHEMA_NOT_LOADED");
    case 8415: return _T("ERROR_DS_SCHEMA_ALLOC_FAILED");
    case 8416: return _T("ERROR_DS_ATT_SCHEMA_REQ_SYNTAX");
    case 8417: return _T("ERROR_DS_GCVERIFY_ERROR");
    case 8418: return _T("ERROR_DS_DRA_SCHEMA_MISMATCH");
    case 8419: return _T("ERROR_DS_CANT_FIND_DSA_OBJ");
    case 8420: return _T("ERROR_DS_CANT_FIND_EXPECTED_NC");
    case 8421: return _T("ERROR_DS_CANT_FIND_NC_IN_CACHE");
    case 8422: return _T("ERROR_DS_CANT_RETRIEVE_CHILD");
    case 8423: return _T("ERROR_DS_SECURITY_ILLEGAL_MODIFY");
    case 8424: return _T("ERROR_DS_CANT_REPLACE_HIDDEN_REC");
    case 8425: return _T("ERROR_DS_BAD_HIERARCHY_FILE");
    case 8426: return _T("ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED");
    case 8427: return _T("ERROR_DS_CONFIG_PARAM_MISSING");
    case 8428: return _T("ERROR_DS_COUNTING_AB_INDICES_FAILED");
    case 8429: return _T("ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED");
    case 8430: return _T("ERROR_DS_INTERNAL_FAILURE");
    case 8431: return _T("ERROR_DS_UNKNOWN_ERROR");
    case 8432: return _T("ERROR_DS_ROOT_REQUIRES_CLASS_TOP");
    case 8433: return _T("ERROR_DS_REFUSING_FSMO_ROLES");
    case 8434: return _T("ERROR_DS_MISSING_FSMO_SETTINGS");
    case 8435: return _T("ERROR_DS_UNABLE_TO_SURRENDER_ROLES");
    case 8436: return _T("ERROR_DS_DRA_GENERIC");
    case 8437: return _T("ERROR_DS_DRA_INVALID_PARAMETER");
    case 8438: return _T("ERROR_DS_DRA_BUSY");
    case 8439: return _T("ERROR_DS_DRA_BAD_DN");
    case 8440: return _T("ERROR_DS_DRA_BAD_NC");
    case 8441: return _T("ERROR_DS_DRA_DN_EXISTS");
    case 8442: return _T("ERROR_DS_DRA_INTERNAL_ERROR");
    case 8443: return _T("ERROR_DS_DRA_INCONSISTENT_DIT");
    case 8444: return _T("ERROR_DS_DRA_CONNECTION_FAILED");
    case 8445: return _T("ERROR_DS_DRA_BAD_INSTANCE_TYPE");
    case 8446: return _T("ERROR_DS_DRA_OUT_OF_MEM");
    case 8447: return _T("ERROR_DS_DRA_MAIL_PROBLEM");
    case 8448: return _T("ERROR_DS_DRA_REF_ALREADY_EXISTS");
    case 8449: return _T("ERROR_DS_DRA_REF_NOT_FOUND");
    case 8450: return _T("ERROR_DS_DRA_OBJ_IS_REP_SOURCE");
    case 8451: return _T("ERROR_DS_DRA_DB_ERROR");
    case 8452: return _T("ERROR_DS_DRA_NO_REPLICA");
    case 8453: return _T("ERROR_DS_DRA_ACCESS_DENIED");
    case 8454: return _T("ERROR_DS_DRA_NOT_SUPPORTED");
    case 8455: return _T("ERROR_DS_DRA_RPC_CANCELLED");
    case 8456: return _T("ERROR_DS_DRA_SOURCE_DISABLED");
    case 8457: return _T("ERROR_DS_DRA_SINK_DISABLED");
    case 8458: return _T("ERROR_DS_DRA_NAME_COLLISION");
    case 8459: return _T("ERROR_DS_DRA_SOURCE_REINSTALLED");
    case 8460: return _T("ERROR_DS_DRA_MISSING_PARENT");
    case 8461: return _T("ERROR_DS_DRA_PREEMPTED");
    case 8462: return _T("ERROR_DS_DRA_ABANDON_SYNC");
    case 8463: return _T("ERROR_DS_DRA_SHUTDOWN");
    case 8464: return _T("ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET");
    case 8465: return _T("ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA");
    case 8466: return _T("ERROR_DS_DRA_EXTN_CONNECTION_FAILED");
    case 8467: return _T("ERROR_DS_INSTALL_SCHEMA_MISMATCH");
    case 8468: return _T("ERROR_DS_DUP_LINK_ID");
    case 8469: return _T("ERROR_DS_NAME_ERROR_RESOLVING");
    case 8470: return _T("ERROR_DS_NAME_ERROR_NOT_FOUND");
    case 8471: return _T("ERROR_DS_NAME_ERROR_NOT_UNIQUE");
    case 8472: return _T("ERROR_DS_NAME_ERROR_NO_MAPPING");
    case 8473: return _T("ERROR_DS_NAME_ERROR_DOMAIN_ONLY");
    case 8474: return _T("ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING");
    case 8475: return _T("ERROR_DS_CONSTRUCTED_ATT_MOD");
    case 8476: return _T("ERROR_DS_WRONG_OM_OBJ_CLASS");
    case 8477: return _T("ERROR_DS_DRA_REPL_PENDING");
    case 8478: return _T("ERROR_DS_DS_REQUIRED");
    case 8479: return _T("ERROR_DS_INVALID_LDAP_DISPLAY_NAME");
    case 8480: return _T("ERROR_DS_NON_BASE_SEARCH");
    case 8481: return _T("ERROR_DS_CANT_RETRIEVE_ATTS");
    case 8482: return _T("ERROR_DS_BACKLINK_WITHOUT_LINK");
    case 8483: return _T("ERROR_DS_EPOCH_MISMATCH");
    case 8484: return _T("ERROR_DS_SRC_NAME_MISMATCH");
    case 8485: return _T("ERROR_DS_SRC_AND_DST_NC_IDENTICAL");
    case 8486: return _T("ERROR_DS_DST_NC_MISMATCH");
    case 8487: return _T("ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC");
    case 8488: return _T("ERROR_DS_SRC_GUID_MISMATCH");
    case 8489: return _T("ERROR_DS_CANT_MOVE_DELETED_OBJECT");
    case 8490: return _T("ERROR_DS_PDC_OPERATION_IN_PROGRESS");
    case 8491: return _T("ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD");
    case 8492: return _T("ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION");
    case 8493: return _T("ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS");
    case 8494: return _T("ERROR_DS_NC_MUST_HAVE_NC_PARENT");
    case 8495: return _T("ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE");
    case 8496: return _T("ERROR_DS_DST_DOMAIN_NOT_NATIVE");
    case 8497: return _T("ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER");
    case 8498: return _T("ERROR_DS_CANT_MOVE_ACCOUNT_GROUP");
    case 8499: return _T("ERROR_DS_CANT_MOVE_RESOURCE_GROUP");
    case 8500: return _T("ERROR_DS_INVALID_SEARCH_FLAG");
    case 8501: return _T("ERROR_DS_NO_TREE_DELETE_ABOVE_NC");
    case 8502: return _T("ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE");
    case 8503: return _T("ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE");
    case 8504: return _T("ERROR_DS_SAM_INIT_FAILURE");
    case 8505: return _T("ERROR_DS_SENSITIVE_GROUP_VIOLATION");
    case 8506: return _T("ERROR_DS_CANT_MOD_PRIMARYGROUPID");
    case 8507: return _T("ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD");
    case 8508: return _T("ERROR_DS_NONSAFE_SCHEMA_CHANGE");
    case 8509: return _T("ERROR_DS_SCHEMA_UPDATE_DISALLOWED");
    case 8510: return _T("ERROR_DS_CANT_CREATE_UNDER_SCHEMA");
    case 8511: return _T("ERROR_DS_INSTALL_NO_SRC_SCH_VERSION");
    case 8512: return _T("ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE");
    case 8513: return _T("ERROR_DS_INVALID_GROUP_TYPE");
    case 8514: return _T("ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN");
    case 8515: return _T("ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN");
    case 8516: return _T("ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER");
    case 8517: return _T("ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER");
    case 8518: return _T("ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER");
    case 8519: return _T("ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER");
    case 8520: return _T("ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER");
    case 8521: return _T("ERROR_DS_HAVE_PRIMARY_MEMBERS");
    case 8522: return _T("ERROR_DS_STRING_SD_CONVERSION_FAILED");
    case 8523: return _T("ERROR_DS_NAMING_MASTER_GC");
    case 8524: return _T("ERROR_DS_DNS_LOOKUP_FAILURE");
    case 8525: return _T("ERROR_DS_COULDNT_UPDATE_SPNS");
    case 8526: return _T("ERROR_DS_CANT_RETRIEVE_SD");
    case 8527: return _T("ERROR_DS_KEY_NOT_UNIQUE");
    case 8528: return _T("ERROR_DS_WRONG_LINKED_ATT_SYNTAX");
    case 8529: return _T("ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD");
    case 8530: return _T("ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY");
    case 8531: return _T("ERROR_DS_CANT_START");
    case 8532: return _T("ERROR_DS_INIT_FAILURE");
    case 8533: return _T("ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION");
    case 8534: return _T("ERROR_DS_SOURCE_DOMAIN_IN_FOREST");
    case 8535: return _T("ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST");
    case 8536: return _T("ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED");
    case 8537: return _T("ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN");
    case 8538: return _T("ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER");
    case 8539: return _T("ERROR_DS_SRC_SID_EXISTS_IN_FOREST");
    case 8540: return _T("ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH");
    case 8541: return _T("ERROR_SAM_INIT_FAILURE");
    case 8542: return _T("ERROR_DS_DRA_SCHEMA_INFO_SHIP");
    case 8543: return _T("ERROR_DS_DRA_SCHEMA_CONFLICT");
    case 8544: return _T("ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT");
    case 8545: return _T("ERROR_DS_DRA_OBJ_NC_MISMATCH");
    case 8546: return _T("ERROR_DS_NC_STILL_HAS_DSAS");
    case 8547: return _T("ERROR_DS_GC_REQUIRED");
    case 8548: return _T("ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY");
    case 8549: return _T("ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS");
    case 8550: return _T("ERROR_DS_CANT_ADD_TO_GC");
    case 8551: return _T("ERROR_DS_NO_CHECKPOINT_WITH_PDC");
    case 8552: return _T("ERROR_DS_SOURCE_AUDITING_NOT_ENABLED");
    case 8553: return _T("ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC");
    case 8554: return _T("ERROR_DS_INVALID_NAME_FOR_SPN");
    case 8555: return _T("ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS");
    case 8556: return _T("ERROR_DS_UNICODEPWD_NOT_IN_QUOTES");
    case 8557: return _T("ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED");
    case 8558: return _T("ERROR_DS_MUST_BE_RUN_ON_DST_DC");
    case 8559: return _T("ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER");
    case 8560: return _T("ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ");
    case 8561: return _T("ERROR_DS_INIT_FAILURE_CONSOLE");
    case 8562: return _T("ERROR_DS_SAM_INIT_FAILURE_CONSOLE");
    case 8563: return _T("ERROR_DS_FOREST_VERSION_TOO_HIGH");
    case 8564: return _T("ERROR_DS_DOMAIN_VERSION_TOO_HIGH");
    case 8565: return _T("ERROR_DS_FOREST_VERSION_TOO_LOW");
    case 8566: return _T("ERROR_DS_DOMAIN_VERSION_TOO_LOW");
    case 8567: return _T("ERROR_DS_INCOMPATIBLE_VERSION");
    case 8568: return _T("ERROR_DS_LOW_DSA_VERSION");
    case 8569: return _T("ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN");
    case 8570: return _T("ERROR_DS_NOT_SUPPORTED_SORT_ORDER");
    case 8571: return _T("ERROR_DS_NAME_NOT_UNIQUE");
    case 8572: return _T("ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4");
    case 8573: return _T("ERROR_DS_OUT_OF_VERSION_STORE");
    case 8574: return _T("ERROR_DS_INCOMPATIBLE_CONTROLS_USED");
    case 8575: return _T("ERROR_DS_NO_REF_DOMAIN");
    case 8576: return _T("ERROR_DS_RESERVED_LINK_ID");
    case 8577: return _T("ERROR_DS_LINK_ID_NOT_AVAILABLE");
    case 8578: return _T("ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER");
    case 8579: return _T("ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE");
    case 8580: return _T("ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC");
    case 8581: return _T("ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG");
    case 8582: return _T("ERROR_DS_MODIFYDN_WRONG_GRANDPARENT");
    case 8583: return _T("ERROR_DS_NAME_ERROR_TRUST_REFERRAL");
    case 8584: return _T("ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER");
    case 8585: return _T("ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD");
    case 8586: return _T("ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2");
    case 8587: return _T("ERROR_DS_THREAD_LIMIT_EXCEEDED");
    case 8588: return _T("ERROR_DS_NOT_CLOSEST");
    case 8589: return _T("ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF");
    case 8590: return _T("ERROR_DS_SINGLE_USER_MODE_FAILED");
    case 8591: return _T("ERROR_DS_NTDSCRIPT_SYNTAX_ERROR");
    case 8592: return _T("ERROR_DS_NTDSCRIPT_PROCESS_ERROR");
    case 8593: return _T("ERROR_DS_DIFFERENT_REPL_EPOCHS");
    case 8594: return _T("ERROR_DS_DRS_EXTENSIONS_CHANGED");
    case 8595: return _T("ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR");
    case 8596: return _T("ERROR_DS_NO_MSDS_INTID");
    case 8597: return _T("ERROR_DS_DUP_MSDS_INTID");
    case 8598: return _T("ERROR_DS_EXISTS_IN_RDNATTID");
    case 8599: return _T("ERROR_DS_AUTHORIZATION_FAILED");
    case 8600: return _T("ERROR_DS_INVALID_SCRIPT");
    case 8601: return _T("ERROR_DS_REMOTE_CROSSREF_OP_FAILED");
    case 8602: return _T("ERROR_DS_CROSS_REF_BUSY");
    case 8603: return _T("ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN");
    case 8604: return _T("ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC");
    case 8605: return _T("ERROR_DS_DUPLICATE_ID_FOUND");
    case 8606: return _T("ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT");
    case 8607: return _T("ERROR_DS_GROUP_CONVERSION_ERROR");
    case 8608: return _T("ERROR_DS_CANT_MOVE_APP_BASIC_GROUP");
    case 8609: return _T("ERROR_DS_CANT_MOVE_APP_QUERY_GROUP");
    case 8610: return _T("ERROR_DS_ROLE_NOT_VERIFIED");
    case 8611: return _T("ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL");
    case 8612: return _T("ERROR_DS_DOMAIN_RENAME_IN_PROGRESS");
    case 8613: return _T("ERROR_DS_EXISTING_AD_CHILD_NC");
    case 8614: return _T("ERROR_DS_REPL_LIFETIME_EXCEEDED");
    case 8615: return _T("ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER");
    case 8616: return _T("ERROR_DS_LDAP_SEND_QUEUE_FULL");
    case 8617: return _T("ERROR_DS_DRA_OUT_SCHEDULE_WINDOW");
    case 8618: return _T("ERROR_DS_POLICY_NOT_KNOWN");
    case 8619: return _T("ERROR_NO_SITE_SETTINGS_OBJECT");
    case 8620: return _T("ERROR_NO_SECRETS");
    case 8621: return _T("ERROR_NO_WRITABLE_DC_FOUND");
    case 8622: return _T("ERROR_DS_NO_SERVER_OBJECT");
    case 8623: return _T("ERROR_DS_NO_NTDSA_OBJECT");
    case 8624: return _T("ERROR_DS_NON_ASQ_SEARCH");
    case 8625: return _T("ERROR_DS_AUDIT_FAILURE");
    case 8626: return _T("ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE");
    case 8627: return _T("ERROR_DS_INVALID_SEARCH_FLAG_TUPLE");
    case 8628: return _T("ERROR_DS_HIERARCHY_TABLE_TOO_DEEP");
    case 8629: return _T("ERROR_DS_DRA_CORRUPT_UTD_VECTOR");
    case 8630: return _T("ERROR_DS_DRA_SECRETS_DENIED");
    case 8631: return _T("ERROR_DS_RESERVED_MAPI_ID");
    case 8632: return _T("ERROR_DS_MAPI_ID_NOT_AVAILABLE");
    case 8633: return _T("ERROR_DS_DRA_MISSING_KRBTGT_SECRET");
    case 8634: return _T("ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST");
    case 8635: return _T("ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST");
    case 8636: return _T("ERROR_INVALID_USER_PRINCIPAL_NAME");
    case 8637: return _T("ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS");
    case 8638: return _T("ERROR_DS_OID_NOT_FOUND");
    case 8639: return _T("ERROR_DS_DRA_RECYCLED_TARGET");
    case 9000: return _T("DNS_ERROR_RESPONSE_CODES_BASE");
    case 9001: return _T("DNS_ERROR_RCODE_FORMAT_ERROR");
    case 9002: return _T("DNS_ERROR_RCODE_SERVER_FAILURE");
    case 9003: return _T("DNS_ERROR_RCODE_NAME_ERROR");
    case 9004: return _T("DNS_ERROR_RCODE_NOT_IMPLEMENTED");
    case 9005: return _T("DNS_ERROR_RCODE_REFUSED");
    case 9006: return _T("DNS_ERROR_RCODE_YXDOMAIN");
    case 9007: return _T("DNS_ERROR_RCODE_YXRRSET");
    case 9008: return _T("DNS_ERROR_RCODE_NXRRSET");
    case 9009: return _T("DNS_ERROR_RCODE_NOTAUTH");
    case 9010: return _T("DNS_ERROR_RCODE_NOTZONE");
    case 9016: return _T("DNS_ERROR_RCODE_BADSIG");
    case 9017: return _T("DNS_ERROR_RCODE_BADKEY");
    case 9018: return _T("DNS_ERROR_RCODE_BADTIME");
    case 9500: return _T("DNS_ERROR_PACKET_FMT_BASE");
    case 9501: return _T("DNS_INFO_NO_RECORDS");
    case 9502: return _T("DNS_ERROR_BAD_PACKET");
    case 9503: return _T("DNS_ERROR_NO_PACKET");
    case 9504: return _T("DNS_ERROR_RCODE");
    case 9505: return _T("DNS_ERROR_UNSECURE_PACKET");
    case 9550: return _T("DNS_ERROR_GENERAL_API_BASE");
    case 9551: return _T("DNS_ERROR_INVALID_TYPE");
    case 9552: return _T("DNS_ERROR_INVALID_IP_ADDRESS");
    case 9553: return _T("DNS_ERROR_INVALID_PROPERTY");
    case 9554: return _T("DNS_ERROR_TRY_AGAIN_LATER");
    case 9555: return _T("DNS_ERROR_NOT_UNIQUE");
    case 9556: return _T("DNS_ERROR_NON_RFC_NAME");
    case 9557: return _T("DNS_STATUS_FQDN");
    case 9558: return _T("DNS_STATUS_DOTTED_NAME");
    case 9559: return _T("DNS_STATUS_SINGLE_PART_NAME");
    case 9560: return _T("DNS_ERROR_INVALID_NAME_CHAR");
    case 9561: return _T("DNS_ERROR_NUMERIC_NAME");
    case 9562: return _T("DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER");
    case 9563: return _T("DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION");
    case 9564: return _T("DNS_ERROR_CANNOT_FIND_ROOT_HINTS");
    case 9565: return _T("DNS_ERROR_INCONSISTENT_ROOT_HINTS");
    case 9566: return _T("DNS_ERROR_DWORD_VALUE_TOO_SMALL");
    case 9567: return _T("DNS_ERROR_DWORD_VALUE_TOO_LARGE");
    case 9568: return _T("DNS_ERROR_BACKGROUND_LOADING");
    case 9569: return _T("DNS_ERROR_NOT_ALLOWED_ON_RODC");
    case 9570: return _T("DNS_ERROR_NOT_ALLOWED_UNDER_DNAME");
    case 9571: return _T("DNS_ERROR_DELEGATION_REQUIRED");
    case 9572: return _T("DNS_ERROR_INVALID_POLICY_TABLE");
    case 9600: return _T("DNS_ERROR_ZONE_BASE");
    case 9601: return _T("DNS_ERROR_ZONE_DOES_NOT_EXIST");
    case 9602: return _T("DNS_ERROR_NO_ZONE_INFO");
    case 9603: return _T("DNS_ERROR_INVALID_ZONE_OPERATION");
    case 9604: return _T("DNS_ERROR_ZONE_CONFIGURATION_ERROR");
    case 9605: return _T("DNS_ERROR_ZONE_HAS_NO_SOA_RECORD");
    case 9606: return _T("DNS_ERROR_ZONE_HAS_NO_NS_RECORDS");
    case 9607: return _T("DNS_ERROR_ZONE_LOCKED");
    case 9608: return _T("DNS_ERROR_ZONE_CREATION_FAILED");
    case 9609: return _T("DNS_ERROR_ZONE_ALREADY_EXISTS");
    case 9610: return _T("DNS_ERROR_AUTOZONE_ALREADY_EXISTS");
    case 9611: return _T("DNS_ERROR_INVALID_ZONE_TYPE");
    case 9612: return _T("DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP");
    case 9613: return _T("DNS_ERROR_ZONE_NOT_SECONDARY");
    case 9614: return _T("DNS_ERROR_NEED_SECONDARY_ADDRESSES");
    case 9615: return _T("DNS_ERROR_WINS_INIT_FAILED");
    case 9616: return _T("DNS_ERROR_NEED_WINS_SERVERS");
    case 9617: return _T("DNS_ERROR_NBSTAT_INIT_FAILED");
    case 9618: return _T("DNS_ERROR_SOA_DELETE_INVALID");
    case 9619: return _T("DNS_ERROR_FORWARDER_ALREADY_EXISTS");
    case 9620: return _T("DNS_ERROR_ZONE_REQUIRES_MASTER_IP");
    case 9621: return _T("DNS_ERROR_ZONE_IS_SHUTDOWN");
    case 9650: return _T("DNS_ERROR_DATAFILE_BASE");
    case 9651: return _T("DNS_ERROR_PRIMARY_REQUIRES_DATAFILE");
    case 9652: return _T("DNS_ERROR_INVALID_DATAFILE_NAME");
    case 9653: return _T("DNS_ERROR_DATAFILE_OPEN_FAILURE");
    case 9654: return _T("DNS_ERROR_FILE_WRITEBACK_FAILED");
    case 9655: return _T("DNS_ERROR_DATAFILE_PARSING");
    case 9700: return _T("DNS_ERROR_DATABASE_BASE");
    case 9701: return _T("DNS_ERROR_RECORD_DOES_NOT_EXIST");
    case 9702: return _T("DNS_ERROR_RECORD_FORMAT");
    case 9703: return _T("DNS_ERROR_NODE_CREATION_FAILED");
    case 9704: return _T("DNS_ERROR_UNKNOWN_RECORD_TYPE");
    case 9705: return _T("DNS_ERROR_RECORD_TIMED_OUT");
    case 9706: return _T("DNS_ERROR_NAME_NOT_IN_ZONE");
    case 9707: return _T("DNS_ERROR_CNAME_LOOP");
    case 9708: return _T("DNS_ERROR_NODE_IS_CNAME");
    case 9709: return _T("DNS_ERROR_CNAME_COLLISION");
    case 9710: return _T("DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT");
    case 9711: return _T("DNS_ERROR_RECORD_ALREADY_EXISTS");
    case 9712: return _T("DNS_ERROR_SECONDARY_DATA");
    case 9713: return _T("DNS_ERROR_NO_CREATE_CACHE_DATA");
    case 9714: return _T("DNS_ERROR_NAME_DOES_NOT_EXIST");
    case 9715: return _T("DNS_WARNING_PTR_CREATE_FAILED");
    case 9716: return _T("DNS_WARNING_DOMAIN_UNDELETED");
    case 9717: return _T("DNS_ERROR_DS_UNAVAILABLE");
    case 9718: return _T("DNS_ERROR_DS_ZONE_ALREADY_EXISTS");
    case 9719: return _T("DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE");
    case 9720: return _T("DNS_ERROR_NODE_IS_DNAME");
    case 9721: return _T("DNS_ERROR_DNAME_COLLISION");
    case 9722: return _T("DNS_ERROR_ALIAS_LOOP");
    case 9750: return _T("DNS_ERROR_OPERATION_BASE");
    case 9751: return _T("DNS_INFO_AXFR_COMPLETE");
    case 9752: return _T("DNS_ERROR_AXFR");
    case 9753: return _T("DNS_INFO_ADDED_LOCAL_WINS");
    case 9800: return _T("DNS_ERROR_SECURE_BASE");
    case 9801: return _T("DNS_STATUS_CONTINUE_NEEDED");
    case 9850: return _T("DNS_ERROR_SETUP_BASE");
    case 9851: return _T("DNS_ERROR_NO_TCPIP");
    case 9852: return _T("DNS_ERROR_NO_DNS_SERVERS");
    case 9900: return _T("DNS_ERROR_DP_BASE");
    case 9901: return _T("DNS_ERROR_DP_DOES_NOT_EXIST");
    case 9902: return _T("DNS_ERROR_DP_ALREADY_EXISTS");
    case 9903: return _T("DNS_ERROR_DP_NOT_ENLISTED");
    case 9904: return _T("DNS_ERROR_DP_ALREADY_ENLISTED");
    case 9905: return _T("DNS_ERROR_DP_NOT_AVAILABLE");
    case 9906: return _T("DNS_ERROR_DP_FSMO_ERROR");
#ifndef WSABASEERR
    case 10000: return _T("WSABASEERR");
    case 10004: return _T("WSAEINTR");
    case 10009: return _T("WSAEBADF");
    case 10013: return _T("WSAEACCES");
    case 10014: return _T("WSAEFAULT");
    case 10022: return _T("WSAEINVAL");
    case 10024: return _T("WSAEMFILE");
    case 10035: return _T("WSAEWOULDBLOCK");
    case 10036: return _T("WSAEINPROGRESS");
    case 10037: return _T("WSAEALREADY");
    case 10038: return _T("WSAENOTSOCK");
    case 10039: return _T("WSAEDESTADDRREQ");
    case 10040: return _T("WSAEMSGSIZE");
    case 10041: return _T("WSAEPROTOTYPE");
    case 10042: return _T("WSAENOPROTOOPT");
    case 10043: return _T("WSAEPROTONOSUPPORT");
    case 10044: return _T("WSAESOCKTNOSUPPORT");
    case 10045: return _T("WSAEOPNOTSUPP");
    case 10046: return _T("WSAEPFNOSUPPORT");
    case 10047: return _T("WSAEAFNOSUPPORT");
    case 10048: return _T("WSAEADDRINUSE");
    case 10049: return _T("WSAEADDRNOTAVAIL");
    case 10050: return _T("WSAENETDOWN");
    case 10051: return _T("WSAENETUNREACH");
    case 10052: return _T("WSAENETRESET");
    case 10053: return _T("WSAECONNABORTED");
    case 10054: return _T("WSAECONNRESET");
    case 10055: return _T("WSAENOBUFS");
    case 10056: return _T("WSAEISCONN");
    case 10057: return _T("WSAENOTCONN");
    case 10058: return _T("WSAESHUTDOWN");
    case 10059: return _T("WSAETOOMANYREFS");
    case 10060: return _T("WSAETIMEDOUT");
    case 10061: return _T("WSAECONNREFUSED");
    case 10062: return _T("WSAELOOP");
    case 10063: return _T("WSAENAMETOOLONG");
    case 10064: return _T("WSAEHOSTDOWN");
    case 10065: return _T("WSAEHOSTUNREACH");
    case 10066: return _T("WSAENOTEMPTY");
    case 10067: return _T("WSAEPROCLIM");
    case 10068: return _T("WSAEUSERS");
    case 10069: return _T("WSAEDQUOT");
    case 10070: return _T("WSAESTALE");
    case 10071: return _T("WSAEREMOTE");
    case 10091: return _T("WSASYSNOTREADY");
    case 10092: return _T("WSAVERNOTSUPPORTED");
    case 10093: return _T("WSANOTINITIALISED");
    case 10101: return _T("WSAEDISCON");
    case 10102: return _T("WSAENOMORE");
    case 10103: return _T("WSAECANCELLED");
    case 10104: return _T("WSAEINVALIDPROCTABLE");
    case 10105: return _T("WSAEINVALIDPROVIDER");
    case 10106: return _T("WSAEPROVIDERFAILEDINIT");
    case 10107: return _T("WSASYSCALLFAILURE");
    case 10108: return _T("WSASERVICE_NOT_FOUND");
    case 10109: return _T("WSATYPE_NOT_FOUND");
    case 10110: return _T("WSA_E_NO_MORE");
    case 10111: return _T("WSA_E_CANCELLED");
    case 10112: return _T("WSAEREFUSED");
    case 11001: return _T("WSAHOST_NOT_FOUND");
    case 11002: return _T("WSATRY_AGAIN");
    case 11003: return _T("WSANO_RECOVERY");
    case 11004: return _T("WSANO_DATA");
    case 11005: return _T("WSA_QOS_RECEIVERS");
    case 11006: return _T("WSA_QOS_SENDERS");
    case 11007: return _T("WSA_QOS_NO_SENDERS");
    case 11008: return _T("WSA_QOS_NO_RECEIVERS");
    case 11009: return _T("WSA_QOS_REQUEST_CONFIRMED");
    case 11010: return _T("WSA_QOS_ADMISSION_FAILURE");
    case 11011: return _T("WSA_QOS_POLICY_FAILURE");
    case 11012: return _T("WSA_QOS_BAD_STYLE");
    case 11013: return _T("WSA_QOS_BAD_OBJECT");
    case 11014: return _T("WSA_QOS_TRAFFIC_CTRL_ERROR");
    case 11015: return _T("WSA_QOS_GENERIC_ERROR");
    case 11016: return _T("WSA_QOS_ESERVICETYPE");
    case 11017: return _T("WSA_QOS_EFLOWSPEC");
    case 11018: return _T("WSA_QOS_EPROVSPECBUF");
    case 11019: return _T("WSA_QOS_EFILTERSTYLE");
    case 11020: return _T("WSA_QOS_EFILTERTYPE");
    case 11021: return _T("WSA_QOS_EFILTERCOUNT");
    case 11022: return _T("WSA_QOS_EOBJLENGTH");
    case 11023: return _T("WSA_QOS_EFLOWCOUNT");
    case 11024: return _T("WSA_QOS_EUNKOWNPSOBJ");
    case 11025: return _T("WSA_QOS_EPOLICYOBJ");
    case 11026: return _T("WSA_QOS_EFLOWDESC");
    case 11027: return _T("WSA_QOS_EPSFLOWSPEC");
    case 11028: return _T("WSA_QOS_EPSFILTERSPEC");
    case 11029: return _T("WSA_QOS_ESDMODEOBJ");
    case 11030: return _T("WSA_QOS_ESHAPERATEOBJ");
    case 11031: return _T("WSA_QOS_RESERVED_PETYPE");
    case 11032: return _T("WSA_SECURE_HOST_NOT_FOUND");
    case 11033: return _T("WSA_IPSEC_NAME_POLICY_ERROR");
#endif 
    case 13000: return _T("ERROR_IPSEC_QM_POLICY_EXISTS");
    case 13001: return _T("ERROR_IPSEC_QM_POLICY_NOT_FOUND");
    case 13002: return _T("ERROR_IPSEC_QM_POLICY_IN_USE");
    case 13003: return _T("ERROR_IPSEC_MM_POLICY_EXISTS");
    case 13004: return _T("ERROR_IPSEC_MM_POLICY_NOT_FOUND");
    case 13005: return _T("ERROR_IPSEC_MM_POLICY_IN_USE");
    case 13006: return _T("ERROR_IPSEC_MM_FILTER_EXISTS");
    case 13007: return _T("ERROR_IPSEC_MM_FILTER_NOT_FOUND");
    case 13008: return _T("ERROR_IPSEC_TRANSPORT_FILTER_EXISTS");
    case 13009: return _T("ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND");
    case 13010: return _T("ERROR_IPSEC_MM_AUTH_EXISTS");
    case 13011: return _T("ERROR_IPSEC_MM_AUTH_NOT_FOUND");
    case 13012: return _T("ERROR_IPSEC_MM_AUTH_IN_USE");
    case 13013: return _T("ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND");
    case 13014: return _T("ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND");
    case 13015: return _T("ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND");
    case 13016: return _T("ERROR_IPSEC_TUNNEL_FILTER_EXISTS");
    case 13017: return _T("ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND");
    case 13018: return _T("ERROR_IPSEC_MM_FILTER_PENDING_DELETION");
    case 13019: return _T("ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION");
    case 13020: return _T("ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION");
    case 13021: return _T("ERROR_IPSEC_MM_POLICY_PENDING_DELETION");
    case 13022: return _T("ERROR_IPSEC_MM_AUTH_PENDING_DELETION");
    case 13023: return _T("ERROR_IPSEC_QM_POLICY_PENDING_DELETION");
    case 13024: return _T("WARNING_IPSEC_MM_POLICY_PRUNED");
    case 13025: return _T("WARNING_IPSEC_QM_POLICY_PRUNED");
    case 13800: return _T("ERROR_IPSEC_IKE_NEG_STATUS_BEGIN");
    case 13801: return _T("ERROR_IPSEC_IKE_AUTH_FAIL");
    case 13802: return _T("ERROR_IPSEC_IKE_ATTRIB_FAIL");
    case 13803: return _T("ERROR_IPSEC_IKE_NEGOTIATION_PENDING");
    case 13804: return _T("ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR");
    case 13805: return _T("ERROR_IPSEC_IKE_TIMED_OUT");
    case 13806: return _T("ERROR_IPSEC_IKE_NO_CERT");
    case 13807: return _T("ERROR_IPSEC_IKE_SA_DELETED");
    case 13808: return _T("ERROR_IPSEC_IKE_SA_REAPED");
    case 13809: return _T("ERROR_IPSEC_IKE_MM_ACQUIRE_DROP");
    case 13810: return _T("ERROR_IPSEC_IKE_QM_ACQUIRE_DROP");
    case 13811: return _T("ERROR_IPSEC_IKE_QUEUE_DROP_MM");
    case 13812: return _T("ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM");
    case 13813: return _T("ERROR_IPSEC_IKE_DROP_NO_RESPONSE");
    case 13814: return _T("ERROR_IPSEC_IKE_MM_DELAY_DROP");
    case 13815: return _T("ERROR_IPSEC_IKE_QM_DELAY_DROP");
    case 13816: return _T("ERROR_IPSEC_IKE_ERROR");
    case 13817: return _T("ERROR_IPSEC_IKE_CRL_FAILED");
    case 13818: return _T("ERROR_IPSEC_IKE_INVALID_KEY_USAGE");
    case 13819: return _T("ERROR_IPSEC_IKE_INVALID_CERT_TYPE");
    case 13820: return _T("ERROR_IPSEC_IKE_NO_PRIVATE_KEY");
    case 13821: return _T("ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY");
    case 13822: return _T("ERROR_IPSEC_IKE_DH_FAIL");
    case 13823: return _T("ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED");
    case 13824: return _T("ERROR_IPSEC_IKE_INVALID_HEADER");
    case 13825: return _T("ERROR_IPSEC_IKE_NO_POLICY");
    case 13826: return _T("ERROR_IPSEC_IKE_INVALID_SIGNATURE");
    case 13827: return _T("ERROR_IPSEC_IKE_KERBEROS_ERROR");
    case 13828: return _T("ERROR_IPSEC_IKE_NO_PUBLIC_KEY");
    case 13829: return _T("ERROR_IPSEC_IKE_PROCESS_ERR");
    case 13830: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_SA");
    case 13831: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_PROP");
    case 13832: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_TRANS");
    case 13833: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_KE");
    case 13834: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_ID");
    case 13835: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_CERT");
    case 13836: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ");
    case 13837: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_HASH");
    case 13838: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_SIG");
    case 13839: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_NONCE");
    case 13840: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY");
    case 13841: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_DELETE");
    case 13842: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR");
    case 13843: return _T("ERROR_IPSEC_IKE_INVALID_PAYLOAD");
    case 13844: return _T("ERROR_IPSEC_IKE_LOAD_SOFT_SA");
    case 13845: return _T("ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN");
    case 13846: return _T("ERROR_IPSEC_IKE_INVALID_COOKIE");
    case 13847: return _T("ERROR_IPSEC_IKE_NO_PEER_CERT");
    case 13848: return _T("ERROR_IPSEC_IKE_PEER_CRL_FAILED");
    case 13849: return _T("ERROR_IPSEC_IKE_POLICY_CHANGE");
    case 13850: return _T("ERROR_IPSEC_IKE_NO_MM_POLICY");
    case 13851: return _T("ERROR_IPSEC_IKE_NOTCBPRIV");
    case 13852: return _T("ERROR_IPSEC_IKE_SECLOADFAIL");
    case 13853: return _T("ERROR_IPSEC_IKE_FAILSSPINIT");
    case 13854: return _T("ERROR_IPSEC_IKE_FAILQUERYSSP");
    case 13855: return _T("ERROR_IPSEC_IKE_SRVACQFAIL");
    case 13856: return _T("ERROR_IPSEC_IKE_SRVQUERYCRED");
    case 13857: return _T("ERROR_IPSEC_IKE_GETSPIFAIL");
    case 13858: return _T("ERROR_IPSEC_IKE_INVALID_FILTER");
    case 13859: return _T("ERROR_IPSEC_IKE_OUT_OF_MEMORY");
    case 13860: return _T("ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED");
    case 13861: return _T("ERROR_IPSEC_IKE_INVALID_POLICY");
    case 13862: return _T("ERROR_IPSEC_IKE_UNKNOWN_DOI");
    case 13863: return _T("ERROR_IPSEC_IKE_INVALID_SITUATION");
    case 13864: return _T("ERROR_IPSEC_IKE_DH_FAILURE");
    case 13865: return _T("ERROR_IPSEC_IKE_INVALID_GROUP");
    case 13866: return _T("ERROR_IPSEC_IKE_ENCRYPT");
    case 13867: return _T("ERROR_IPSEC_IKE_DECRYPT");
    case 13868: return _T("ERROR_IPSEC_IKE_POLICY_MATCH");
    case 13869: return _T("ERROR_IPSEC_IKE_UNSUPPORTED_ID");
    case 13870: return _T("ERROR_IPSEC_IKE_INVALID_HASH");
    case 13871: return _T("ERROR_IPSEC_IKE_INVALID_HASH_ALG");
    case 13872: return _T("ERROR_IPSEC_IKE_INVALID_HASH_SIZE");
    case 13873: return _T("ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG");
    case 13874: return _T("ERROR_IPSEC_IKE_INVALID_AUTH_ALG");
    case 13875: return _T("ERROR_IPSEC_IKE_INVALID_SIG");
    case 13876: return _T("ERROR_IPSEC_IKE_LOAD_FAILED");
    case 13877: return _T("ERROR_IPSEC_IKE_RPC_DELETE");
    case 13878: return _T("ERROR_IPSEC_IKE_BENIGN_REINIT");
    case 13879: return _T("ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY");
    case 13880: return _T("ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION");
    case 13881: return _T("ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN");
    case 13882: return _T("ERROR_IPSEC_IKE_MM_LIMIT");
    case 13883: return _T("ERROR_IPSEC_IKE_NEGOTIATION_DISABLED");
    case 13884: return _T("ERROR_IPSEC_IKE_QM_LIMIT");
    case 13885: return _T("ERROR_IPSEC_IKE_MM_EXPIRED");
    case 13886: return _T("ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID");
    case 13887: return _T("ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH");
    case 13888: return _T("ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID");
    case 13889: return _T("ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD");
    case 13890: return _T("ERROR_IPSEC_IKE_DOS_COOKIE_SENT");
    case 13891: return _T("ERROR_IPSEC_IKE_SHUTTING_DOWN");
    case 13892: return _T("ERROR_IPSEC_IKE_CGA_AUTH_FAILED");
    case 13893: return _T("ERROR_IPSEC_IKE_PROCESS_ERR_NATOA");
    case 13894: return _T("ERROR_IPSEC_IKE_INVALID_MM_FOR_QM");
    case 13895: return _T("ERROR_IPSEC_IKE_QM_EXPIRED");
    case 13896: return _T("ERROR_IPSEC_IKE_TOO_MANY_FILTERS");
    case 13897: return _T("ERROR_IPSEC_IKE_NEG_STATUS_END");
    case 13898: return _T("ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL");
    case 13899: return _T("ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE");
    case 13900: return _T("ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING");
    case 13901: return _T("ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING");
    case 13902: return _T("ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS");
    case 13903: return _T("ERROR_IPSEC_IKE_RATELIMIT_DROP");
    case 13904: return _T("ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE");
    case 13905: return _T("ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE");
    case 13906: return _T("ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE");
    case 13907: return _T("ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY");
    case 13908: return _T("ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE");
    case 13909: return _T("ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END");
    case 13910: return _T("ERROR_IPSEC_BAD_SPI");
    case 13911: return _T("ERROR_IPSEC_SA_LIFETIME_EXPIRED");
    case 13912: return _T("ERROR_IPSEC_WRONG_SA");
    case 13913: return _T("ERROR_IPSEC_REPLAY_CHECK_FAILED");
    case 13914: return _T("ERROR_IPSEC_INVALID_PACKET");
    case 13915: return _T("ERROR_IPSEC_INTEGRITY_CHECK_FAILED");
    case 13916: return _T("ERROR_IPSEC_CLEAR_TEXT_DROP");
    case 13917: return _T("ERROR_IPSEC_AUTH_FIREWALL_DROP");
    case 13918: return _T("ERROR_IPSEC_THROTTLE_DROP");
    case 13925: return _T("ERROR_IPSEC_DOSP_BLOCK");
    case 13926: return _T("ERROR_IPSEC_DOSP_RECEIVED_MULTICAST");
    case 13927: return _T("ERROR_IPSEC_DOSP_INVALID_PACKET");
    case 13928: return _T("ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED");
    case 13929: return _T("ERROR_IPSEC_DOSP_MAX_ENTRIES");
    case 13930: return _T("ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED");
    case 13931: return _T("ERROR_IPSEC_DOSP_NOT_INSTALLED");
    case 13932: return _T("ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES");
    case 14000: return _T("ERROR_SXS_SECTION_NOT_FOUND");
    case 14001: return _T("ERROR_SXS_CANT_GEN_ACTCTX");
    case 14002: return _T("ERROR_SXS_INVALID_ACTCTXDATA_FORMAT");
    case 14003: return _T("ERROR_SXS_ASSEMBLY_NOT_FOUND");
    case 14004: return _T("ERROR_SXS_MANIFEST_FORMAT_ERROR");
    case 14005: return _T("ERROR_SXS_MANIFEST_PARSE_ERROR");
    case 14006: return _T("ERROR_SXS_ACTIVATION_CONTEXT_DISABLED");
    case 14007: return _T("ERROR_SXS_KEY_NOT_FOUND");
    case 14008: return _T("ERROR_SXS_VERSION_CONFLICT");
    case 14009: return _T("ERROR_SXS_WRONG_SECTION_TYPE");
    case 14010: return _T("ERROR_SXS_THREAD_QUERIES_DISABLED");
    case 14011: return _T("ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET");
    case 14012: return _T("ERROR_SXS_UNKNOWN_ENCODING_GROUP");
    case 14013: return _T("ERROR_SXS_UNKNOWN_ENCODING");
    case 14014: return _T("ERROR_SXS_INVALID_XML_NAMESPACE_URI");
    case 14015: return _T("ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED");
    case 14016: return _T("ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED");
    case 14017: return _T("ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE");
    case 14018: return _T("ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE");
    case 14019: return _T("ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE");
    case 14020: return _T("ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT");
    case 14021: return _T("ERROR_SXS_DUPLICATE_DLL_NAME");
    case 14022: return _T("ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME");
    case 14023: return _T("ERROR_SXS_DUPLICATE_CLSID");
    case 14024: return _T("ERROR_SXS_DUPLICATE_IID");
    case 14025: return _T("ERROR_SXS_DUPLICATE_TLBID");
    case 14026: return _T("ERROR_SXS_DUPLICATE_PROGID");
    case 14027: return _T("ERROR_SXS_DUPLICATE_ASSEMBLY_NAME");
    case 14028: return _T("ERROR_SXS_FILE_HASH_MISMATCH");
    case 14029: return _T("ERROR_SXS_POLICY_PARSE_ERROR");
    case 14030: return _T("ERROR_SXS_XML_E_MISSINGQUOTE");
    case 14031: return _T("ERROR_SXS_XML_E_COMMENTSYNTAX");
    case 14032: return _T("ERROR_SXS_XML_E_BADSTARTNAMECHAR");
    case 14033: return _T("ERROR_SXS_XML_E_BADNAMECHAR");
    case 14034: return _T("ERROR_SXS_XML_E_BADCHARINSTRING");
    case 14035: return _T("ERROR_SXS_XML_E_XMLDECLSYNTAX");
    case 14036: return _T("ERROR_SXS_XML_E_BADCHARDATA");
    case 14037: return _T("ERROR_SXS_XML_E_MISSINGWHITESPACE");
    case 14038: return _T("ERROR_SXS_XML_E_EXPECTINGTAGEND");
    case 14039: return _T("ERROR_SXS_XML_E_MISSINGSEMICOLON");
    case 14040: return _T("ERROR_SXS_XML_E_UNBALANCEDPAREN");
    case 14041: return _T("ERROR_SXS_XML_E_INTERNALERROR");
    case 14042: return _T("ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE");
    case 14043: return _T("ERROR_SXS_XML_E_INCOMPLETE_ENCODING");
    case 14044: return _T("ERROR_SXS_XML_E_MISSING_PAREN");
    case 14045: return _T("ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE");
    case 14046: return _T("ERROR_SXS_XML_E_MULTIPLE_COLONS");
    case 14047: return _T("ERROR_SXS_XML_E_INVALID_DECIMAL");
    case 14048: return _T("ERROR_SXS_XML_E_INVALID_HEXIDECIMAL");
    case 14049: return _T("ERROR_SXS_XML_E_INVALID_UNICODE");
    case 14050: return _T("ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK");
    case 14051: return _T("ERROR_SXS_XML_E_UNEXPECTEDENDTAG");
    case 14052: return _T("ERROR_SXS_XML_E_UNCLOSEDTAG");
    case 14053: return _T("ERROR_SXS_XML_E_DUPLICATEATTRIBUTE");
    case 14054: return _T("ERROR_SXS_XML_E_MULTIPLEROOTS");
    case 14055: return _T("ERROR_SXS_XML_E_INVALIDATROOTLEVEL");
    case 14056: return _T("ERROR_SXS_XML_E_BADXMLDECL");
    case 14057: return _T("ERROR_SXS_XML_E_MISSINGROOT");
    case 14058: return _T("ERROR_SXS_XML_E_UNEXPECTEDEOF");
    case 14059: return _T("ERROR_SXS_XML_E_BADPEREFINSUBSET");
    case 14060: return _T("ERROR_SXS_XML_E_UNCLOSEDSTARTTAG");
    case 14061: return _T("ERROR_SXS_XML_E_UNCLOSEDENDTAG");
    case 14062: return _T("ERROR_SXS_XML_E_UNCLOSEDSTRING");
    case 14063: return _T("ERROR_SXS_XML_E_UNCLOSEDCOMMENT");
    case 14064: return _T("ERROR_SXS_XML_E_UNCLOSEDDECL");
    case 14065: return _T("ERROR_SXS_XML_E_UNCLOSEDCDATA");
    case 14066: return _T("ERROR_SXS_XML_E_RESERVEDNAMESPACE");
    case 14067: return _T("ERROR_SXS_XML_E_INVALIDENCODING");
    case 14068: return _T("ERROR_SXS_XML_E_INVALIDSWITCH");
    case 14069: return _T("ERROR_SXS_XML_E_BADXMLCASE");
    case 14070: return _T("ERROR_SXS_XML_E_INVALID_STANDALONE");
    case 14071: return _T("ERROR_SXS_XML_E_UNEXPECTED_STANDALONE");
    case 14072: return _T("ERROR_SXS_XML_E_INVALID_VERSION");
    case 14073: return _T("ERROR_SXS_XML_E_MISSINGEQUALS");
    case 14074: return _T("ERROR_SXS_PROTECTION_RECOVERY_FAILED");
    case 14075: return _T("ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT");
    case 14076: return _T("ERROR_SXS_PROTECTION_CATALOG_NOT_VALID");
    case 14077: return _T("ERROR_SXS_UNTRANSLATABLE_HRESULT");
    case 14078: return _T("ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING");
    case 14079: return _T("ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE");
    case 14080: return _T("ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME");
    case 14081: return _T("ERROR_SXS_ASSEMBLY_MISSING");
    case 14082: return _T("ERROR_SXS_CORRUPT_ACTIVATION_STACK");
    case 14083: return _T("ERROR_SXS_CORRUPTION");
    case 14084: return _T("ERROR_SXS_EARLY_DEACTIVATION");
    case 14085: return _T("ERROR_SXS_INVALID_DEACTIVATION");
    case 14086: return _T("ERROR_SXS_MULTIPLE_DEACTIVATION");
    case 14087: return _T("ERROR_SXS_PROCESS_TERMINATION_REQUESTED");
    case 14088: return _T("ERROR_SXS_RELEASE_ACTIVATION_CONTEXT");
    case 14089: return _T("ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY");
    case 14090: return _T("ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE");
    case 14091: return _T("ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME");
    case 14092: return _T("ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE");
    case 14093: return _T("ERROR_SXS_IDENTITY_PARSE_ERROR");
    case 14094: return _T("ERROR_MALFORMED_SUBSTITUTION_STRING");
    case 14095: return _T("ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN");
    case 14096: return _T("ERROR_UNMAPPED_SUBSTITUTION_STRING");
    case 14097: return _T("ERROR_SXS_ASSEMBLY_NOT_LOCKED");
    case 14098: return _T("ERROR_SXS_COMPONENT_STORE_CORRUPT");
    case 14099: return _T("ERROR_ADVANCED_INSTALLER_FAILED");
    case 14100: return _T("ERROR_XML_ENCODING_MISMATCH");
    case 14101: return _T("ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT");
    case 14102: return _T("ERROR_SXS_IDENTITIES_DIFFERENT");
    case 14103: return _T("ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT");
    case 14104: return _T("ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY");
    case 14105: return _T("ERROR_SXS_MANIFEST_TOO_BIG");
    case 14106: return _T("ERROR_SXS_SETTING_NOT_REGISTERED");
    case 14107: return _T("ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE");
    case 14108: return _T("ERROR_SMI_PRIMITIVE_INSTALLER_FAILED");
    case 14109: return _T("ERROR_GENERIC_COMMAND_FAILED");
    case 14110: return _T("ERROR_SXS_FILE_HASH_MISSING");
    case 15000: return _T("ERROR_EVT_INVALID_CHANNEL_PATH");
    case 15001: return _T("ERROR_EVT_INVALID_QUERY");
    case 15002: return _T("ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND");
    case 15003: return _T("ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND");
    case 15004: return _T("ERROR_EVT_INVALID_PUBLISHER_NAME");
    case 15005: return _T("ERROR_EVT_INVALID_EVENT_DATA");
    case 15007: return _T("ERROR_EVT_CHANNEL_NOT_FOUND");
    case 15008: return _T("ERROR_EVT_MALFORMED_XML_TEXT");
    case 15009: return _T("ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL");
    case 15010: return _T("ERROR_EVT_CONFIGURATION_ERROR");
    case 15011: return _T("ERROR_EVT_QUERY_RESULT_STALE");
    case 15012: return _T("ERROR_EVT_QUERY_RESULT_INVALID_POSITION");
    case 15013: return _T("ERROR_EVT_NON_VALIDATING_MSXML");
    case 15014: return _T("ERROR_EVT_FILTER_ALREADYSCOPED");
    case 15015: return _T("ERROR_EVT_FILTER_NOTELTSET");
    case 15016: return _T("ERROR_EVT_FILTER_INVARG");
    case 15017: return _T("ERROR_EVT_FILTER_INVTEST");
    case 15018: return _T("ERROR_EVT_FILTER_INVTYPE");
    case 15019: return _T("ERROR_EVT_FILTER_PARSEERR");
    case 15020: return _T("ERROR_EVT_FILTER_UNSUPPORTEDOP");
    case 15021: return _T("ERROR_EVT_FILTER_UNEXPECTEDTOKEN");
    case 15022: return _T("ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL");
    case 15023: return _T("ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE");
    case 15024: return _T("ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE");
    case 15025: return _T("ERROR_EVT_CHANNEL_CANNOT_ACTIVATE");
    case 15026: return _T("ERROR_EVT_FILTER_TOO_COMPLEX");
    case 15027: return _T("ERROR_EVT_MESSAGE_NOT_FOUND");
    case 15028: return _T("ERROR_EVT_MESSAGE_ID_NOT_FOUND");
    case 15029: return _T("ERROR_EVT_UNRESOLVED_VALUE_INSERT");
    case 15030: return _T("ERROR_EVT_UNRESOLVED_PARAMETER_INSERT");
    case 15031: return _T("ERROR_EVT_MAX_INSERTS_REACHED");
    case 15032: return _T("ERROR_EVT_EVENT_DEFINITION_NOT_FOUND");
    case 15033: return _T("ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND");
    case 15034: return _T("ERROR_EVT_VERSION_TOO_OLD");
    case 15035: return _T("ERROR_EVT_VERSION_TOO_NEW");
    case 15036: return _T("ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY");
    case 15037: return _T("ERROR_EVT_PUBLISHER_DISABLED");
    case 15038: return _T("ERROR_EVT_FILTER_OUT_OF_RANGE");
    case 15080: return _T("ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE");
    case 15081: return _T("ERROR_EC_LOG_DISABLED");
    case 15082: return _T("ERROR_EC_CIRCULAR_FORWARDING");
    case 15083: return _T("ERROR_EC_CREDSTORE_FULL");
    case 15084: return _T("ERROR_EC_CRED_NOT_FOUND");
    case 15085: return _T("ERROR_EC_NO_ACTIVE_CHANNEL");
    case 15100: return _T("ERROR_MUI_FILE_NOT_FOUND");
    case 15101: return _T("ERROR_MUI_INVALID_FILE");
    case 15102: return _T("ERROR_MUI_INVALID_RC_CONFIG");
    case 15103: return _T("ERROR_MUI_INVALID_LOCALE_NAME");
    case 15104: return _T("ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME");
    case 15105: return _T("ERROR_MUI_FILE_NOT_LOADED");
    case 15106: return _T("ERROR_RESOURCE_ENUM_USER_STOP");
    case 15107: return _T("ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED");
    case 15108: return _T("ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME");
    case 15200: return _T("ERROR_MCA_INVALID_CAPABILITIES_STRING");
    case 15201: return _T("ERROR_MCA_INVALID_VCP_VERSION");
    case 15202: return _T("ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION");
    case 15203: return _T("ERROR_MCA_MCCS_VERSION_MISMATCH");
    case 15204: return _T("ERROR_MCA_UNSUPPORTED_MCCS_VERSION");
    case 15205: return _T("ERROR_MCA_INTERNAL_ERROR");
    case 15206: return _T("ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED");
    case 15207: return _T("ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE");
    case 15250: return _T("ERROR_AMBIGUOUS_SYSTEM_DEVICE");
    case 15299: return _T("ERROR_SYSTEM_DEVICE_NOT_FOUND");
    case 15300: return _T("ERROR_HASH_NOT_SUPPORTED");
    case 15301: return _T("ERROR_HASH_NOT_PRESENT");
  };
#endif
  return DErrWin32Default(aError);
}

LPCTSTR DErrSEVERITY(HRESULT aError)
{
#ifdef DISPLAY_SEVERITY
  switch(HRESULT_SEVERITY(aError)) {
    case 0: return _T("SEVERITY_SUCCESS");
    case 1: return _T("SEVERITY_ERROR");
  };
#endif
  return _T("");
}

LPCTSTR DErrHRESULT(HRESULT aError)
{
#ifdef DISPLAY_HRESULT
  switch(aError) {
    case 0: return _T("S_OK");
    case 1: return _T("S_FALSE");
    case 0x8000FFFFL: return _T("E_UNEXPECTED"); 
#if defined(_WIN32) && !defined(_MAC)
    case 0x80004001L: return _T("E_NOTIMPL"); 
    case 0x8007000EL: return _T("E_OUTOFMEMORY"); 
    case 0x80070057L: return _T("E_INVALIDARG"); 
    case 0x80004002L: return _T("E_NOINTERFACE"); 
    case 0x80004003L: return _T("E_POINTER"); 
    case 0x80070006L: return _T("E_HANDLE"); 
    case 0x80004004L: return _T("E_ABORT"); 
    case 0x80004005L: return _T("E_FAIL"); 
    case 0x80070005L: return _T("E_ACCESSDENIED"); 
#else
    case 0x80000001L: return _T("E_NOTIMPL"); 
    case 0x80000002L: return _T("E_OUTOFMEMORY"); 
    case 0x80000003L: return _T("E_INVALIDARG"); 
    case 0x80000004L: return _T("E_NOINTERFACE"); 
    case 0x80000005L: return _T("E_POINTER"); 
    case 0x80000006L: return _T("E_HANDLE"); 
    case 0x80000007L: return _T("E_ABORT"); 
    case 0x80000008L: return _T("E_FAIL"); 
    case 0x80000009L: return _T("E_ACCESSDENIED"); 
#endif 
    case 0x8000000AL: return _T("E_PENDING"); 
    case 0x80004006L: return _T("CO_E_INIT_TLS"); 
    case 0x80004007L: return _T("CO_E_INIT_SHARED_ALLOCATOR"); 
    case 0x80004008L: return _T("CO_E_INIT_MEMORY_ALLOCATOR"); 
    case 0x80004009L: return _T("CO_E_INIT_CLASS_CACHE"); 
    case 0x8000400AL: return _T("CO_E_INIT_RPC_CHANNEL"); 
    case 0x8000400BL: return _T("CO_E_INIT_TLS_SET_CHANNEL_CONTROL"); 
    case 0x8000400CL: return _T("CO_E_INIT_TLS_CHANNEL_CONTROL"); 
    case 0x8000400DL: return _T("CO_E_INIT_UNACCEPTED_USER_ALLOCATOR"); 
    case 0x8000400EL: return _T("CO_E_INIT_SCM_MUTEX_EXISTS"); 
    case 0x8000400FL: return _T("CO_E_INIT_SCM_FILE_MAPPING_EXISTS"); 
    case 0x80004010L: return _T("CO_E_INIT_SCM_MAP_VIEW_OF_FILE"); 
    case 0x80004011L: return _T("CO_E_INIT_SCM_EXEC_FAILURE"); 
    case 0x80004012L: return _T("CO_E_INIT_ONLY_SINGLE_THREADED"); 
    case 0x80004013L: return _T("CO_E_CANT_REMOTE"); 
    case 0x80004014L: return _T("CO_E_BAD_SERVER_NAME"); 
    case 0x80004015L: return _T("CO_E_WRONG_SERVER_IDENTITY"); 
    case 0x80004016L: return _T("CO_E_OLE1DDE_DISABLED"); 
    case 0x80004017L: return _T("CO_E_RUNAS_SYNTAX"); 
    case 0x80004018L: return _T("CO_E_CREATEPROCESS_FAILURE"); 
    case 0x80004019L: return _T("CO_E_RUNAS_CREATEPROCESS_FAILURE"); 
    case 0x8000401AL: return _T("CO_E_RUNAS_LOGON_FAILURE"); 
    case 0x8000401BL: return _T("CO_E_LAUNCH_PERMSSION_DENIED"); 
    case 0x8000401CL: return _T("CO_E_START_SERVICE_FAILURE"); 
    case 0x8000401DL: return _T("CO_E_REMOTE_COMMUNICATION_FAILURE"); 
    case 0x8000401EL: return _T("CO_E_SERVER_START_TIMEOUT"); 
    case 0x8000401FL: return _T("CO_E_CLSREG_INCONSISTENT"); 
    case 0x80004020L: return _T("CO_E_IIDREG_INCONSISTENT"); 
    case 0x80004021L: return _T("CO_E_NOT_SUPPORTED"); 
    case 0x80004022L: return _T("CO_E_RELOAD_DLL"); 
    case 0x80004023L: return _T("CO_E_MSI_ERROR"); 
    case 0x80004024L: return _T("CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT"); 
    case 0x80004025L: return _T("CO_E_SERVER_PAUSED"); 
    case 0x80004026L: return _T("CO_E_SERVER_NOT_PAUSED"); 
    case 0x80004027L: return _T("CO_E_CLASS_DISABLED"); 
    case 0x80004028L: return _T("CO_E_CLRNOTAVAILABLE"); 
    case 0x80004029L: return _T("CO_E_ASYNC_WORK_REJECTED"); 
    case 0x8000402AL: return _T("CO_E_SERVER_INIT_TIMEOUT"); 
    case 0x8000402BL: return _T("CO_E_NO_SECCTX_IN_ACTIVATE"); 
    case 0x80004030L: return _T("CO_E_TRACKER_CONFIG"); 
    case 0x80004031L: return _T("CO_E_THREADPOOL_CONFIG"); 
    case 0x80004032L: return _T("CO_E_SXS_CONFIG"); 
    case 0x80004033L: return _T("CO_E_MALFORMED_SPN"); 
    case 0x80040000L: return _T("OLE_E_OLEVERB"); 
    case 0x80040001L: return _T("OLE_E_ADVF"); 
    case 0x80040002L: return _T("OLE_E_ENUM_NOMORE"); 
    case 0x80040003L: return _T("OLE_E_ADVISENOTSUPPORTED"); 
    case 0x80040004L: return _T("OLE_E_NOCONNECTION"); 
    case 0x80040005L: return _T("OLE_E_NOTRUNNING"); 
    case 0x80040006L: return _T("OLE_E_NOCACHE"); 
    case 0x80040007L: return _T("OLE_E_BLANK"); 
    case 0x80040008L: return _T("OLE_E_CLASSDIFF"); 
    case 0x80040009L: return _T("OLE_E_CANT_GETMONIKER"); 
    case 0x8004000AL: return _T("OLE_E_CANT_BINDTOSOURCE"); 
    case 0x8004000BL: return _T("OLE_E_STATIC"); 
    case 0x8004000CL: return _T("OLE_E_PROMPTSAVECANCELLED"); 
    case 0x8004000DL: return _T("OLE_E_INVALIDRECT"); 
    case 0x8004000EL: return _T("OLE_E_WRONGCOMPOBJ"); 
    case 0x8004000FL: return _T("OLE_E_INVALIDHWND"); 
    case 0x80040010L: return _T("OLE_E_NOT_INPLACEACTIVE"); 
    case 0x80040011L: return _T("OLE_E_CANTCONVERT"); 
    case 0x80040012L: return _T("OLE_E_NOSTORAGE"); 
    case 0x80040064L: return _T("DV_E_FORMATETC"); 
    case 0x80040065L: return _T("DV_E_DVTARGETDEVICE"); 
    case 0x80040066L: return _T("DV_E_STGMEDIUM"); 
    case 0x80040067L: return _T("DV_E_STATDATA"); 
    case 0x80040068L: return _T("DV_E_LINDEX"); 
    case 0x80040069L: return _T("DV_E_TYMED"); 
    case 0x8004006AL: return _T("DV_E_CLIPFORMAT"); 
    case 0x8004006BL: return _T("DV_E_DVASPECT"); 
    case 0x8004006CL: return _T("DV_E_DVTARGETDEVICE_SIZE"); 
    case 0x8004006DL: return _T("DV_E_NOIVIEWOBJECT"); 
    case 0x80040100L: return _T("DRAGDROP_E_NOTREGISTERED"); 
    case 0x80040101L: return _T("DRAGDROP_E_ALREADYREGISTERED"); 
    case 0x80040102L: return _T("DRAGDROP_E_INVALIDHWND"); 
    case 0x80040110L: return _T("CLASS_E_NOAGGREGATION"); 
    case 0x80040111L: return _T("CLASS_E_CLASSNOTAVAILABLE"); 
    case 0x80040112L: return _T("CLASS_E_NOTLICENSED"); 
    case 0x80040140L: return _T("VIEW_E_DRAW"); 
    case 0x80040150L: return _T("REGDB_E_READREGDB"); 
    case 0x80040151L: return _T("REGDB_E_WRITEREGDB"); 
    case 0x80040152L: return _T("REGDB_E_KEYMISSING"); 
    case 0x80040153L: return _T("REGDB_E_INVALIDVALUE"); 
    case 0x80040154L: return _T("REGDB_E_CLASSNOTREG"); 
    case 0x80040155L: return _T("REGDB_E_IIDNOTREG"); 
    case 0x80040156L: return _T("REGDB_E_BADTHREADINGMODEL"); 
    case 0x80040160L: return _T("CAT_E_CATIDNOEXIST"); 
    case 0x80040161L: return _T("CAT_E_NODESCRIPTION"); 
    case 0x80040164L: return _T("CS_E_PACKAGE_NOTFOUND"); 
    case 0x80040165L: return _T("CS_E_NOT_DELETABLE"); 
    case 0x80040166L: return _T("CS_E_CLASS_NOTFOUND"); 
    case 0x80040167L: return _T("CS_E_INVALID_VERSION"); 
    case 0x80040168L: return _T("CS_E_NO_CLASSSTORE"); 
    case 0x80040169L: return _T("CS_E_OBJECT_NOTFOUND"); 
    case 0x8004016AL: return _T("CS_E_OBJECT_ALREADY_EXISTS"); 
    case 0x8004016BL: return _T("CS_E_INVALID_PATH"); 
    case 0x8004016CL: return _T("CS_E_NETWORK_ERROR"); 
    case 0x8004016DL: return _T("CS_E_ADMIN_LIMIT_EXCEEDED"); 
    case 0x8004016EL: return _T("CS_E_SCHEMA_MISMATCH"); 
    case 0x8004016FL: return _T("CS_E_INTERNAL_ERROR"); 
    case 0x80040170L: return _T("CACHE_E_NOCACHE_UPDATED"); 
    case 0x80040180L: return _T("OLEOBJ_E_NOVERBS"); 
    case 0x80040181L: return _T("OLEOBJ_E_INVALIDVERB"); 
    case 0x800401A0L: return _T("INPLACE_E_NOTUNDOABLE"); 
    case 0x800401A1L: return _T("INPLACE_E_NOTOOLSPACE"); 
    case 0x800401C0L: return _T("CONVERT10_E_OLESTREAM_GET"); 
    case 0x800401C1L: return _T("CONVERT10_E_OLESTREAM_PUT"); 
    case 0x800401C2L: return _T("CONVERT10_E_OLESTREAM_FMT"); 
    case 0x800401C3L: return _T("CONVERT10_E_OLESTREAM_BITMAP_TO_DIB"); 
    case 0x800401C4L: return _T("CONVERT10_E_STG_FMT"); 
    case 0x800401C5L: return _T("CONVERT10_E_STG_NO_STD_STREAM"); 
    case 0x800401C6L: return _T("CONVERT10_E_STG_DIB_TO_BITMAP"); 
    case 0x800401D0L: return _T("CLIPBRD_E_CANT_OPEN"); 
    case 0x800401D1L: return _T("CLIPBRD_E_CANT_EMPTY"); 
    case 0x800401D2L: return _T("CLIPBRD_E_CANT_SET"); 
    case 0x800401D3L: return _T("CLIPBRD_E_BAD_DATA"); 
    case 0x800401D4L: return _T("CLIPBRD_E_CANT_CLOSE"); 
    case 0x800401E0L: return _T("MK_E_CONNECTMANUALLY"); 
    case 0x800401E1L: return _T("MK_E_EXCEEDEDDEADLINE"); 
    case 0x800401E2L: return _T("MK_E_NEEDGENERIC"); 
    case 0x800401E3L: return _T("MK_E_UNAVAILABLE"); 
    case 0x800401E4L: return _T("MK_E_SYNTAX"); 
    case 0x800401E5L: return _T("MK_E_NOOBJECT"); 
    case 0x800401E6L: return _T("MK_E_INVALIDEXTENSION"); 
    case 0x800401E7L: return _T("MK_E_INTERMEDIATEINTERFACENOTSUPPORTED"); 
    case 0x800401E8L: return _T("MK_E_NOTBINDABLE"); 
    case 0x800401E9L: return _T("MK_E_NOTBOUND"); 
    case 0x800401EAL: return _T("MK_E_CANTOPENFILE"); 
    case 0x800401EBL: return _T("MK_E_MUSTBOTHERUSER"); 
    case 0x800401ECL: return _T("MK_E_NOINVERSE"); 
    case 0x800401EDL: return _T("MK_E_NOSTORAGE"); 
    case 0x800401EEL: return _T("MK_E_NOPREFIX"); 
    case 0x800401EFL: return _T("MK_E_ENUMERATION_FAILED"); 
    case 0x800401F0L: return _T("CO_E_NOTINITIALIZED"); 
    case 0x800401F1L: return _T("CO_E_ALREADYINITIALIZED"); 
    case 0x800401F2L: return _T("CO_E_CANTDETERMINECLASS"); 
    case 0x800401F3L: return _T("CO_E_CLASSSTRING"); 
    case 0x800401F4L: return _T("CO_E_IIDSTRING"); 
    case 0x800401F5L: return _T("CO_E_APPNOTFOUND"); 
    case 0x800401F6L: return _T("CO_E_APPSINGLEUSE"); 
    case 0x800401F7L: return _T("CO_E_ERRORINAPP"); 
    case 0x800401F8L: return _T("CO_E_DLLNOTFOUND"); 
    case 0x800401F9L: return _T("CO_E_ERRORINDLL"); 
    case 0x800401FAL: return _T("CO_E_WRONGOSFORAPP"); 
    case 0x800401FBL: return _T("CO_E_OBJNOTREG"); 
    case 0x800401FCL: return _T("CO_E_OBJISREG"); 
    case 0x800401FDL: return _T("CO_E_OBJNOTCONNECTED"); 
    case 0x800401FEL: return _T("CO_E_APPDIDNTREG"); 
    case 0x800401FFL: return _T("CO_E_RELEASED"); 
    case 0x00040200L: return _T("EVENT_S_SOME_SUBSCRIBERS_FAILED"); 
    case 0x80040201L: return _T("EVENT_E_ALL_SUBSCRIBERS_FAILED"); 
    case 0x00040202L: return _T("EVENT_S_NOSUBSCRIBERS"); 
    case 0x80040203L: return _T("EVENT_E_QUERYSYNTAX"); 
    case 0x80040204L: return _T("EVENT_E_QUERYFIELD"); 
    case 0x80040205L: return _T("EVENT_E_INTERNALEXCEPTION"); 
    case 0x80040206L: return _T("EVENT_E_INTERNALERROR"); 
    case 0x80040207L: return _T("EVENT_E_INVALID_PER_USER_SID"); 
    case 0x80040208L: return _T("EVENT_E_USER_EXCEPTION"); 
    case 0x80040209L: return _T("EVENT_E_TOO_MANY_METHODS"); 
    case 0x8004020AL: return _T("EVENT_E_MISSING_EVENTCLASS"); 
    case 0x8004020BL: return _T("EVENT_E_NOT_ALL_REMOVED"); 
    case 0x8004020CL: return _T("EVENT_E_COMPLUS_NOT_INSTALLED"); 
    case 0x8004020DL: return _T("EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT"); 
    case 0x8004020EL: return _T("EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT"); 
    case 0x8004020FL: return _T("EVENT_E_INVALID_EVENT_CLASS_PARTITION"); 
    case 0x80040210L: return _T("EVENT_E_PER_USER_SID_NOT_LOGGED_ON"); 
    case 0x8004D000L: return _T("XACT_E_ALREADYOTHERSINGLEPHASE"); 
    case 0x8004D001L: return _T("XACT_E_CANTRETAIN"); 
    case 0x8004D002L: return _T("XACT_E_COMMITFAILED"); 
    case 0x8004D003L: return _T("XACT_E_COMMITPREVENTED"); 
    case 0x8004D004L: return _T("XACT_E_HEURISTICABORT"); 
    case 0x8004D005L: return _T("XACT_E_HEURISTICCOMMIT"); 
    case 0x8004D006L: return _T("XACT_E_HEURISTICDAMAGE"); 
    case 0x8004D007L: return _T("XACT_E_HEURISTICDANGER"); 
    case 0x8004D008L: return _T("XACT_E_ISOLATIONLEVEL"); 
    case 0x8004D009L: return _T("XACT_E_NOASYNC"); 
    case 0x8004D00AL: return _T("XACT_E_NOENLIST"); 
    case 0x8004D00BL: return _T("XACT_E_NOISORETAIN"); 
    case 0x8004D00CL: return _T("XACT_E_NORESOURCE"); 
    case 0x8004D00DL: return _T("XACT_E_NOTCURRENT"); 
    case 0x8004D00EL: return _T("XACT_E_NOTRANSACTION"); 
    case 0x8004D00FL: return _T("XACT_E_NOTSUPPORTED"); 
    case 0x8004D010L: return _T("XACT_E_UNKNOWNRMGRID"); 
    case 0x8004D011L: return _T("XACT_E_WRONGSTATE"); 
    case 0x8004D012L: return _T("XACT_E_WRONGUOW"); 
    case 0x8004D013L: return _T("XACT_E_XTIONEXISTS"); 
    case 0x8004D014L: return _T("XACT_E_NOIMPORTOBJECT"); 
    case 0x8004D015L: return _T("XACT_E_INVALIDCOOKIE"); 
    case 0x8004D016L: return _T("XACT_E_INDOUBT"); 
    case 0x8004D017L: return _T("XACT_E_NOTIMEOUT"); 
    case 0x8004D018L: return _T("XACT_E_ALREADYINPROGRESS"); 
    case 0x8004D019L: return _T("XACT_E_ABORTED"); 
    case 0x8004D01AL: return _T("XACT_E_LOGFULL"); 
    case 0x8004D01BL: return _T("XACT_E_TMNOTAVAILABLE"); 
    case 0x8004D01CL: return _T("XACT_E_CONNECTION_DOWN"); 
    case 0x8004D01DL: return _T("XACT_E_CONNECTION_DENIED"); 
    case 0x8004D01EL: return _T("XACT_E_REENLISTTIMEOUT"); 
    case 0x8004D01FL: return _T("XACT_E_TIP_CONNECT_FAILED"); 
    case 0x8004D020L: return _T("XACT_E_TIP_PROTOCOL_ERROR"); 
    case 0x8004D021L: return _T("XACT_E_TIP_PULL_FAILED"); 
    case 0x8004D022L: return _T("XACT_E_DEST_TMNOTAVAILABLE"); 
    case 0x8004D023L: return _T("XACT_E_TIP_DISABLED"); 
    case 0x8004D024L: return _T("XACT_E_NETWORK_TX_DISABLED"); 
    case 0x8004D025L: return _T("XACT_E_PARTNER_NETWORK_TX_DISABLED"); 
    case 0x8004D026L: return _T("XACT_E_XA_TX_DISABLED"); 
    case 0x8004D027L: return _T("XACT_E_UNABLE_TO_READ_DTC_CONFIG"); 
    case 0x8004D028L: return _T("XACT_E_UNABLE_TO_LOAD_DTC_PROXY"); 
    case 0x8004D029L: return _T("XACT_E_ABORTING"); 
    case 0x8004D02AL: return _T("XACT_E_PUSH_COMM_FAILURE"); 
    case 0x8004D02BL: return _T("XACT_E_PULL_COMM_FAILURE"); 
    case 0x8004D02CL: return _T("XACT_E_LU_TX_DISABLED"); 
    case 0x8004D080L: return _T("XACT_E_CLERKNOTFOUND"); 
    case 0x8004D081L: return _T("XACT_E_CLERKEXISTS"); 
    case 0x8004D082L: return _T("XACT_E_RECOVERYINPROGRESS"); 
    case 0x8004D083L: return _T("XACT_E_TRANSACTIONCLOSED"); 
    case 0x8004D084L: return _T("XACT_E_INVALIDLSN"); 
    case 0x8004D085L: return _T("XACT_E_REPLAYREQUEST"); 
    case 0x0004D000L: return _T("XACT_S_ASYNC"); 
    case 0x0004D001L: return _T("XACT_S_DEFECT"); 
    case 0x0004D002L: return _T("XACT_S_READONLY"); 
    case 0x0004D003L: return _T("XACT_S_SOMENORETAIN"); 
    case 0x0004D004L: return _T("XACT_S_OKINFORM"); 
    case 0x0004D005L: return _T("XACT_S_MADECHANGESCONTENT"); 
    case 0x0004D006L: return _T("XACT_S_MADECHANGESINFORM"); 
    case 0x0004D007L: return _T("XACT_S_ALLNORETAIN"); 
    case 0x0004D008L: return _T("XACT_S_ABORTING"); 
    case 0x0004D009L: return _T("XACT_S_SINGLEPHASE"); 
    case 0x0004D00AL: return _T("XACT_S_LOCALLY_OK"); 
    case 0x0004D010L: return _T("XACT_S_LASTRESOURCEMANAGER"); 
    case 0x8004E002L: return _T("CONTEXT_E_ABORTED"); 
    case 0x8004E003L: return _T("CONTEXT_E_ABORTING"); 
    case 0x8004E004L: return _T("CONTEXT_E_NOCONTEXT"); 
    case 0x8004E005L: return _T("CONTEXT_E_WOULD_DEADLOCK"); 
    case 0x8004E006L: return _T("CONTEXT_E_SYNCH_TIMEOUT"); 
    case 0x8004E007L: return _T("CONTEXT_E_OLDREF"); 
    case 0x8004E00CL: return _T("CONTEXT_E_ROLENOTFOUND"); 
    case 0x8004E00FL: return _T("CONTEXT_E_TMNOTAVAILABLE"); 
    case 0x8004E021L: return _T("CO_E_ACTIVATIONFAILED"); 
    case 0x8004E022L: return _T("CO_E_ACTIVATIONFAILED_EVENTLOGGED"); 
    case 0x8004E023L: return _T("CO_E_ACTIVATIONFAILED_CATALOGERROR"); 
    case 0x8004E024L: return _T("CO_E_ACTIVATIONFAILED_TIMEOUT"); 
    case 0x8004E025L: return _T("CO_E_INITIALIZATIONFAILED"); 
    case 0x8004E026L: return _T("CONTEXT_E_NOJIT"); 
    case 0x8004E027L: return _T("CONTEXT_E_NOTRANSACTION"); 
    case 0x8004E028L: return _T("CO_E_THREADINGMODEL_CHANGED"); 
    case 0x8004E029L: return _T("CO_E_NOIISINTRINSICS"); 
    case 0x8004E02AL: return _T("CO_E_NOCOOKIES"); 
    case 0x8004E02BL: return _T("CO_E_DBERROR"); 
    case 0x8004E02CL: return _T("CO_E_NOTPOOLED"); 
    case 0x8004E02DL: return _T("CO_E_NOTCONSTRUCTED"); 
    case 0x8004E02EL: return _T("CO_E_NOSYNCHRONIZATION"); 
    case 0x8004E02FL: return _T("CO_E_ISOLEVELMISMATCH"); 
    case 0x8004E030L: return _T("CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED"); 
    case 0x8004E031L: return _T("CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED"); 
    case 0x00040000L: return _T("OLE_S_USEREG"); 
    case 0x00040001L: return _T("OLE_S_STATIC"); 
    case 0x00040002L: return _T("OLE_S_MAC_CLIPFORMAT"); 
    case 0x00040100L: return _T("DRAGDROP_S_DROP"); 
    case 0x00040101L: return _T("DRAGDROP_S_CANCEL"); 
    case 0x00040102L: return _T("DRAGDROP_S_USEDEFAULTCURSORS"); 
    case 0x00040130L: return _T("DATA_S_SAMEFORMATETC"); 
    case 0x00040140L: return _T("VIEW_S_ALREADY_FROZEN"); 
    case 0x00040170L: return _T("CACHE_S_FORMATETC_NOTSUPPORTED"); 
    case 0x00040171L: return _T("CACHE_S_SAMECACHE"); 
    case 0x00040172L: return _T("CACHE_S_SOMECACHES_NOTUPDATED"); 
    case 0x00040180L: return _T("OLEOBJ_S_INVALIDVERB"); 
    case 0x00040181L: return _T("OLEOBJ_S_CANNOT_DOVERB_NOW"); 
    case 0x00040182L: return _T("OLEOBJ_S_INVALIDHWND"); 
    case 0x000401A0L: return _T("INPLACE_S_TRUNCATED"); 
    case 0x000401C0L: return _T("CONVERT10_S_NO_PRESENTATION"); 
    case 0x000401E2L: return _T("MK_S_REDUCED_TO_SELF"); 
    case 0x000401E4L: return _T("MK_S_ME"); 
    case 0x000401E5L: return _T("MK_S_HIM"); 
    case 0x000401E6L: return _T("MK_S_US"); 
    case 0x000401E7L: return _T("MK_S_MONIKERALREADYREGISTERED"); 
    case 0x00041300L: return _T("SCHED_S_TASK_READY"); 
    case 0x00041301L: return _T("SCHED_S_TASK_RUNNING"); 
    case 0x00041302L: return _T("SCHED_S_TASK_DISABLED"); 
    case 0x00041303L: return _T("SCHED_S_TASK_HAS_NOT_RUN"); 
    case 0x00041304L: return _T("SCHED_S_TASK_NO_MORE_RUNS"); 
    case 0x00041305L: return _T("SCHED_S_TASK_NOT_SCHEDULED"); 
    case 0x00041306L: return _T("SCHED_S_TASK_TERMINATED"); 
    case 0x00041307L: return _T("SCHED_S_TASK_NO_VALID_TRIGGERS"); 
    case 0x00041308L: return _T("SCHED_S_EVENT_TRIGGER"); 
    case 0x80041309L: return _T("SCHED_E_TRIGGER_NOT_FOUND"); 
    case 0x8004130AL: return _T("SCHED_E_TASK_NOT_READY"); 
    case 0x8004130BL: return _T("SCHED_E_TASK_NOT_RUNNING"); 
    case 0x8004130CL: return _T("SCHED_E_SERVICE_NOT_INSTALLED"); 
    case 0x8004130DL: return _T("SCHED_E_CANNOT_OPEN_TASK"); 
    case 0x8004130EL: return _T("SCHED_E_INVALID_TASK"); 
    case 0x8004130FL: return _T("SCHED_E_ACCOUNT_INFORMATION_NOT_SET"); 
    case 0x80041310L: return _T("SCHED_E_ACCOUNT_NAME_NOT_FOUND"); 
    case 0x80041311L: return _T("SCHED_E_ACCOUNT_DBASE_CORRUPT"); 
    case 0x80041312L: return _T("SCHED_E_NO_SECURITY_SERVICES"); 
    case 0x80041313L: return _T("SCHED_E_UNKNOWN_OBJECT_VERSION"); 
    case 0x80041314L: return _T("SCHED_E_UNSUPPORTED_ACCOUNT_OPTION"); 
    case 0x80041315L: return _T("SCHED_E_SERVICE_NOT_RUNNING"); 
    case 0x80041316L: return _T("SCHED_E_UNEXPECTEDNODE"); 
    case 0x80041317L: return _T("SCHED_E_NAMESPACE"); 
    case 0x80041318L: return _T("SCHED_E_INVALIDVALUE"); 
    case 0x80041319L: return _T("SCHED_E_MISSINGNODE"); 
    case 0x8004131AL: return _T("SCHED_E_MALFORMEDXML"); 
    case 0x0004131BL: return _T("SCHED_S_SOME_TRIGGERS_FAILED"); 
    case 0x0004131CL: return _T("SCHED_S_BATCH_LOGON_PROBLEM"); 
    case 0x8004131DL: return _T("SCHED_E_TOO_MANY_NODES"); 
    case 0x8004131EL: return _T("SCHED_E_PAST_END_BOUNDARY"); 
    case 0x8004131FL: return _T("SCHED_E_ALREADY_RUNNING"); 
    case 0x80041320L: return _T("SCHED_E_USER_NOT_LOGGED_ON"); 
    case 0x80041321L: return _T("SCHED_E_INVALID_TASK_HASH"); 
    case 0x80041322L: return _T("SCHED_E_SERVICE_NOT_AVAILABLE"); 
    case 0x80041323L: return _T("SCHED_E_SERVICE_TOO_BUSY"); 
    case 0x80041324L: return _T("SCHED_E_TASK_ATTEMPTED"); 
    case 0x00041325L: return _T("SCHED_S_TASK_QUEUED"); 
    case 0x80041326L: return _T("SCHED_E_TASK_DISABLED"); 
    case 0x80041327L: return _T("SCHED_E_TASK_NOT_V1_COMPAT"); 
    case 0x80041328L: return _T("SCHED_E_START_ON_DEMAND"); 
    case 0x80080001L: return _T("CO_E_CLASS_CREATE_FAILED"); 
    case 0x80080002L: return _T("CO_E_SCM_ERROR"); 
    case 0x80080003L: return _T("CO_E_SCM_RPC_FAILURE"); 
    case 0x80080004L: return _T("CO_E_BAD_PATH"); 
    case 0x80080005L: return _T("CO_E_SERVER_EXEC_FAILURE"); 
    case 0x80080006L: return _T("CO_E_OBJSRV_RPC_FAILURE"); 
    case 0x80080007L: return _T("MK_E_NO_NORMALIZED"); 
    case 0x80080008L: return _T("CO_E_SERVER_STOPPING"); 
    case 0x80080009L: return _T("MEM_E_INVALID_ROOT"); 
    case 0x80080010L: return _T("MEM_E_INVALID_LINK"); 
    case 0x80080011L: return _T("MEM_E_INVALID_SIZE"); 
    case 0x00080012L: return _T("CO_S_NOTALLINTERFACES"); 
    case 0x00080013L: return _T("CO_S_MACHINENAMENOTFOUND"); 
    case 0x80080015L: return _T("CO_E_MISSING_DISPLAYNAME"); 
    case 0x80080016L: return _T("CO_E_RUNAS_VALUE_MUST_BE_AAA"); 
    case 0x80080017L: return _T("CO_E_ELEVATION_DISABLED"); 
    case 0x80020001L: return _T("DISP_E_UNKNOWNINTERFACE"); 
    case 0x80020003L: return _T("DISP_E_MEMBERNOTFOUND"); 
    case 0x80020004L: return _T("DISP_E_PARAMNOTFOUND"); 
    case 0x80020005L: return _T("DISP_E_TYPEMISMATCH"); 
    case 0x80020006L: return _T("DISP_E_UNKNOWNNAME"); 
    case 0x80020007L: return _T("DISP_E_NONAMEDARGS"); 
    case 0x80020008L: return _T("DISP_E_BADVARTYPE"); 
    case 0x80020009L: return _T("DISP_E_EXCEPTION"); 
    case 0x8002000AL: return _T("DISP_E_OVERFLOW"); 
    case 0x8002000BL: return _T("DISP_E_BADINDEX"); 
    case 0x8002000CL: return _T("DISP_E_UNKNOWNLCID"); 
    case 0x8002000DL: return _T("DISP_E_ARRAYISLOCKED"); 
    case 0x8002000EL: return _T("DISP_E_BADPARAMCOUNT"); 
    case 0x8002000FL: return _T("DISP_E_PARAMNOTOPTIONAL"); 
    case 0x80020010L: return _T("DISP_E_BADCALLEE"); 
    case 0x80020011L: return _T("DISP_E_NOTACOLLECTION"); 
    case 0x80020012L: return _T("DISP_E_DIVBYZERO"); 
    case 0x80020013L: return _T("DISP_E_BUFFERTOOSMALL"); 
    case 0x80028016L: return _T("TYPE_E_BUFFERTOOSMALL"); 
    case 0x80028017L: return _T("TYPE_E_FIELDNOTFOUND"); 
    case 0x80028018L: return _T("TYPE_E_INVDATAREAD"); 
    case 0x80028019L: return _T("TYPE_E_UNSUPFORMAT"); 
    case 0x8002801CL: return _T("TYPE_E_REGISTRYACCESS"); 
    case 0x8002801DL: return _T("TYPE_E_LIBNOTREGISTERED"); 
    case 0x80028027L: return _T("TYPE_E_UNDEFINEDTYPE"); 
    case 0x80028028L: return _T("TYPE_E_QUALIFIEDNAMEDISALLOWED"); 
    case 0x80028029L: return _T("TYPE_E_INVALIDSTATE"); 
    case 0x8002802AL: return _T("TYPE_E_WRONGTYPEKIND"); 
    case 0x8002802BL: return _T("TYPE_E_ELEMENTNOTFOUND"); 
    case 0x8002802CL: return _T("TYPE_E_AMBIGUOUSNAME"); 
    case 0x8002802DL: return _T("TYPE_E_NAMECONFLICT"); 
    case 0x8002802EL: return _T("TYPE_E_UNKNOWNLCID"); 
    case 0x8002802FL: return _T("TYPE_E_DLLFUNCTIONNOTFOUND"); 
    case 0x800288BDL: return _T("TYPE_E_BADMODULEKIND"); 
    case 0x800288C5L: return _T("TYPE_E_SIZETOOBIG"); 
    case 0x800288C6L: return _T("TYPE_E_DUPLICATEID"); 
    case 0x800288CFL: return _T("TYPE_E_INVALIDID"); 
    case 0x80028CA0L: return _T("TYPE_E_TYPEMISMATCH"); 
    case 0x80028CA1L: return _T("TYPE_E_OUTOFBOUNDS"); 
    case 0x80028CA2L: return _T("TYPE_E_IOERROR"); 
    case 0x80028CA3L: return _T("TYPE_E_CANTCREATETMPFILE"); 
    case 0x80029C4AL: return _T("TYPE_E_CANTLOADLIBRARY"); 
    case 0x80029C83L: return _T("TYPE_E_INCONSISTENTPROPFUNCS"); 
    case 0x80029C84L: return _T("TYPE_E_CIRCULARTYPE"); 
    case 0x80030001L: return _T("STG_E_INVALIDFUNCTION"); 
    case 0x80030002L: return _T("STG_E_FILENOTFOUND"); 
    case 0x80030003L: return _T("STG_E_PATHNOTFOUND"); 
    case 0x80030004L: return _T("STG_E_TOOMANYOPENFILES"); 
    case 0x80030005L: return _T("STG_E_ACCESSDENIED"); 
    case 0x80030006L: return _T("STG_E_INVALIDHANDLE"); 
    case 0x80030008L: return _T("STG_E_INSUFFICIENTMEMORY"); 
    case 0x80030009L: return _T("STG_E_INVALIDPOINTER"); 
    case 0x80030012L: return _T("STG_E_NOMOREFILES"); 
    case 0x80030013L: return _T("STG_E_DISKISWRITEPROTECTED"); 
    case 0x80030019L: return _T("STG_E_SEEKERROR"); 
    case 0x8003001DL: return _T("STG_E_WRITEFAULT"); 
    case 0x8003001EL: return _T("STG_E_READFAULT"); 
    case 0x80030020L: return _T("STG_E_SHAREVIOLATION"); 
    case 0x80030021L: return _T("STG_E_LOCKVIOLATION"); 
    case 0x80030050L: return _T("STG_E_FILEALREADYEXISTS"); 
    case 0x80030057L: return _T("STG_E_INVALIDPARAMETER"); 
    case 0x80030070L: return _T("STG_E_MEDIUMFULL"); 
    case 0x800300F0L: return _T("STG_E_PROPSETMISMATCHED"); 
    case 0x800300FAL: return _T("STG_E_ABNORMALAPIEXIT"); 
    case 0x800300FBL: return _T("STG_E_INVALIDHEADER"); 
    case 0x800300FCL: return _T("STG_E_INVALIDNAME"); 
    case 0x800300FDL: return _T("STG_E_UNKNOWN"); 
    case 0x800300FEL: return _T("STG_E_UNIMPLEMENTEDFUNCTION"); 
    case 0x800300FFL: return _T("STG_E_INVALIDFLAG"); 
    case 0x80030100L: return _T("STG_E_INUSE"); 
    case 0x80030101L: return _T("STG_E_NOTCURRENT"); 
    case 0x80030102L: return _T("STG_E_REVERTED"); 
    case 0x80030103L: return _T("STG_E_CANTSAVE"); 
    case 0x80030104L: return _T("STG_E_OLDFORMAT"); 
    case 0x80030105L: return _T("STG_E_OLDDLL"); 
    case 0x80030106L: return _T("STG_E_SHAREREQUIRED"); 
    case 0x80030107L: return _T("STG_E_NOTFILEBASEDSTORAGE"); 
    case 0x80030108L: return _T("STG_E_EXTANTMARSHALLINGS"); 
    case 0x80030109L: return _T("STG_E_DOCFILECORRUPT"); 
    case 0x80030110L: return _T("STG_E_BADBASEADDRESS"); 
    case 0x80030111L: return _T("STG_E_DOCFILETOOLARGE"); 
    case 0x80030112L: return _T("STG_E_NOTSIMPLEFORMAT"); 
    case 0x80030201L: return _T("STG_E_INCOMPLETE"); 
    case 0x80030202L: return _T("STG_E_TERMINATED"); 
    case 0x00030200L: return _T("STG_S_CONVERTED"); 
    case 0x00030201L: return _T("STG_S_BLOCK"); 
    case 0x00030202L: return _T("STG_S_RETRYNOW"); 
    case 0x00030203L: return _T("STG_S_MONITORING"); 
    case 0x00030204L: return _T("STG_S_MULTIPLEOPENS"); 
    case 0x00030205L: return _T("STG_S_CONSOLIDATIONFAILED"); 
    case 0x00030206L: return _T("STG_S_CANNOTCONSOLIDATE"); 
    case 0x80030305L: return _T("STG_E_STATUS_COPY_PROTECTION_FAILURE"); 
    case 0x80030306L: return _T("STG_E_CSS_AUTHENTICATION_FAILURE"); 
    case 0x80030307L: return _T("STG_E_CSS_KEY_NOT_PRESENT"); 
    case 0x80030308L: return _T("STG_E_CSS_KEY_NOT_ESTABLISHED"); 
    case 0x80030309L: return _T("STG_E_CSS_SCRAMBLED_SECTOR"); 
    case 0x8003030AL: return _T("STG_E_CSS_REGION_MISMATCH"); 
    case 0x8003030BL: return _T("STG_E_RESETS_EXHAUSTED"); 
    case 0x80010001L: return _T("RPC_E_CALL_REJECTED"); 
    case 0x80010002L: return _T("RPC_E_CALL_CANCELED"); 
    case 0x80010003L: return _T("RPC_E_CANTPOST_INSENDCALL"); 
    case 0x80010004L: return _T("RPC_E_CANTCALLOUT_INASYNCCALL"); 
    case 0x80010005L: return _T("RPC_E_CANTCALLOUT_INEXTERNALCALL"); 
    case 0x80010006L: return _T("RPC_E_CONNECTION_TERMINATED"); 
    case 0x80010007L: return _T("RPC_E_SERVER_DIED"); 
    case 0x80010008L: return _T("RPC_E_CLIENT_DIED"); 
    case 0x80010009L: return _T("RPC_E_INVALID_DATAPACKET"); 
    case 0x8001000AL: return _T("RPC_E_CANTTRANSMIT_CALL"); 
    case 0x8001000BL: return _T("RPC_E_CLIENT_CANTMARSHAL_DATA"); 
    case 0x8001000CL: return _T("RPC_E_CLIENT_CANTUNMARSHAL_DATA"); 
    case 0x8001000DL: return _T("RPC_E_SERVER_CANTMARSHAL_DATA"); 
    case 0x8001000EL: return _T("RPC_E_SERVER_CANTUNMARSHAL_DATA"); 
    case 0x8001000FL: return _T("RPC_E_INVALID_DATA"); 
    case 0x80010010L: return _T("RPC_E_INVALID_PARAMETER"); 
    case 0x80010011L: return _T("RPC_E_CANTCALLOUT_AGAIN"); 
    case 0x80010012L: return _T("RPC_E_SERVER_DIED_DNE"); 
    case 0x80010100L: return _T("RPC_E_SYS_CALL_FAILED"); 
    case 0x80010101L: return _T("RPC_E_OUT_OF_RESOURCES"); 
    case 0x80010102L: return _T("RPC_E_ATTEMPTED_MULTITHREAD"); 
    case 0x80010103L: return _T("RPC_E_NOT_REGISTERED"); 
    case 0x80010104L: return _T("RPC_E_FAULT"); 
    case 0x80010105L: return _T("RPC_E_SERVERFAULT"); 
    case 0x80010106L: return _T("RPC_E_CHANGED_MODE"); 
    case 0x80010107L: return _T("RPC_E_INVALIDMETHOD"); 
    case 0x80010108L: return _T("RPC_E_DISCONNECTED"); 
    case 0x80010109L: return _T("RPC_E_RETRY"); 
    case 0x8001010AL: return _T("RPC_E_SERVERCALL_RETRYLATER"); 
    case 0x8001010BL: return _T("RPC_E_SERVERCALL_REJECTED"); 
    case 0x8001010CL: return _T("RPC_E_INVALID_CALLDATA"); 
    case 0x8001010DL: return _T("RPC_E_CANTCALLOUT_ININPUTSYNCCALL"); 
    case 0x8001010EL: return _T("RPC_E_WRONG_THREAD"); 
    case 0x8001010FL: return _T("RPC_E_THREAD_NOT_INIT"); 
    case 0x80010110L: return _T("RPC_E_VERSION_MISMATCH"); 
    case 0x80010111L: return _T("RPC_E_INVALID_HEADER"); 
    case 0x80010112L: return _T("RPC_E_INVALID_EXTENSION"); 
    case 0x80010113L: return _T("RPC_E_INVALID_IPID"); 
    case 0x80010114L: return _T("RPC_E_INVALID_OBJECT"); 
    case 0x80010115L: return _T("RPC_S_CALLPENDING"); 
    case 0x80010116L: return _T("RPC_S_WAITONTIMER"); 
    case 0x80010117L: return _T("RPC_E_CALL_COMPLETE"); 
    case 0x80010118L: return _T("RPC_E_UNSECURE_CALL"); 
    case 0x80010119L: return _T("RPC_E_TOO_LATE"); 
    case 0x8001011AL: return _T("RPC_E_NO_GOOD_SECURITY_PACKAGES"); 
    case 0x8001011BL: return _T("RPC_E_ACCESS_DENIED"); 
    case 0x8001011CL: return _T("RPC_E_REMOTE_DISABLED"); 
    case 0x8001011DL: return _T("RPC_E_INVALID_OBJREF"); 
    case 0x8001011EL: return _T("RPC_E_NO_CONTEXT"); 
    case 0x8001011FL: return _T("RPC_E_TIMEOUT"); 
    case 0x80010120L: return _T("RPC_E_NO_SYNC"); 
    case 0x80010121L: return _T("RPC_E_FULLSIC_REQUIRED"); 
    case 0x80010122L: return _T("RPC_E_INVALID_STD_NAME"); 
    case 0x80010123L: return _T("CO_E_FAILEDTOIMPERSONATE"); 
    case 0x80010124L: return _T("CO_E_FAILEDTOGETSECCTX"); 
    case 0x80010125L: return _T("CO_E_FAILEDTOOPENTHREADTOKEN"); 
    case 0x80010126L: return _T("CO_E_FAILEDTOGETTOKENINFO"); 
    case 0x80010127L: return _T("CO_E_TRUSTEEDOESNTMATCHCLIENT"); 
    case 0x80010128L: return _T("CO_E_FAILEDTOQUERYCLIENTBLANKET"); 
    case 0x80010129L: return _T("CO_E_FAILEDTOSETDACL"); 
    case 0x8001012AL: return _T("CO_E_ACCESSCHECKFAILED"); 
    case 0x8001012BL: return _T("CO_E_NETACCESSAPIFAILED"); 
    case 0x8001012CL: return _T("CO_E_WRONGTRUSTEENAMESYNTAX"); 
    case 0x8001012DL: return _T("CO_E_INVALIDSID"); 
    case 0x8001012EL: return _T("CO_E_CONVERSIONFAILED"); 
    case 0x8001012FL: return _T("CO_E_NOMATCHINGSIDFOUND"); 
    case 0x80010130L: return _T("CO_E_LOOKUPACCSIDFAILED"); 
    case 0x80010131L: return _T("CO_E_NOMATCHINGNAMEFOUND"); 
    case 0x80010132L: return _T("CO_E_LOOKUPACCNAMEFAILED"); 
    case 0x80010133L: return _T("CO_E_SETSERLHNDLFAILED"); 
    case 0x80010134L: return _T("CO_E_FAILEDTOGETWINDIR"); 
    case 0x80010135L: return _T("CO_E_PATHTOOLONG"); 
    case 0x80010136L: return _T("CO_E_FAILEDTOGENUUID"); 
    case 0x80010137L: return _T("CO_E_FAILEDTOCREATEFILE"); 
    case 0x80010138L: return _T("CO_E_FAILEDTOCLOSEHANDLE"); 
    case 0x80010139L: return _T("CO_E_EXCEEDSYSACLLIMIT"); 
    case 0x8001013AL: return _T("CO_E_ACESINWRONGORDER"); 
    case 0x8001013BL: return _T("CO_E_INCOMPATIBLESTREAMVERSION"); 
    case 0x8001013CL: return _T("CO_E_FAILEDTOOPENPROCESSTOKEN"); 
    case 0x8001013DL: return _T("CO_E_DECODEFAILED"); 
    case 0x8001013FL: return _T("CO_E_ACNOTINITIALIZED"); 
    case 0x80010140L: return _T("CO_E_CANCEL_DISABLED"); 
    case 0x8001FFFFL: return _T("RPC_E_UNEXPECTED"); 
    case 0xC0090001L: return _T("ERROR_AUDITING_DISABLED"); 
    case 0xC0090002L: return _T("ERROR_ALL_SIDS_FILTERED"); 
    case 0xC0090003L: return _T("ERROR_BIZRULES_NOT_ENABLED"); 
    case 0x80090001L: return _T("NTE_BAD_UID"); 
    case 0x80090002L: return _T("NTE_BAD_HASH"); 
    case 0x80090003L: return _T("NTE_BAD_KEY"); 
    case 0x80090004L: return _T("NTE_BAD_LEN"); 
    case 0x80090005L: return _T("NTE_BAD_DATA"); 
    case 0x80090006L: return _T("NTE_BAD_SIGNATURE"); 
    case 0x80090007L: return _T("NTE_BAD_VER"); 
    case 0x80090008L: return _T("NTE_BAD_ALGID"); 
    case 0x80090009L: return _T("NTE_BAD_FLAGS"); 
    case 0x8009000AL: return _T("NTE_BAD_TYPE"); 
    case 0x8009000BL: return _T("NTE_BAD_KEY_STATE"); 
    case 0x8009000CL: return _T("NTE_BAD_HASH_STATE"); 
    case 0x8009000DL: return _T("NTE_NO_KEY"); 
    case 0x8009000EL: return _T("NTE_NO_MEMORY"); 
    case 0x8009000FL: return _T("NTE_EXISTS"); 
    case 0x80090010L: return _T("NTE_PERM"); 
    case 0x80090011L: return _T("NTE_NOT_FOUND"); 
    case 0x80090012L: return _T("NTE_DOUBLE_ENCRYPT"); 
    case 0x80090013L: return _T("NTE_BAD_PROVIDER"); 
    case 0x80090014L: return _T("NTE_BAD_PROV_TYPE"); 
    case 0x80090015L: return _T("NTE_BAD_PUBLIC_KEY"); 
    case 0x80090016L: return _T("NTE_BAD_KEYSET"); 
    case 0x80090017L: return _T("NTE_PROV_TYPE_NOT_DEF"); 
    case 0x80090018L: return _T("NTE_PROV_TYPE_ENTRY_BAD"); 
    case 0x80090019L: return _T("NTE_KEYSET_NOT_DEF"); 
    case 0x8009001AL: return _T("NTE_KEYSET_ENTRY_BAD"); 
    case 0x8009001BL: return _T("NTE_PROV_TYPE_NO_MATCH"); 
    case 0x8009001CL: return _T("NTE_SIGNATURE_FILE_BAD"); 
    case 0x8009001DL: return _T("NTE_PROVIDER_DLL_FAIL"); 
    case 0x8009001EL: return _T("NTE_PROV_DLL_NOT_FOUND"); 
    case 0x8009001FL: return _T("NTE_BAD_KEYSET_PARAM"); 
    case 0x80090020L: return _T("NTE_FAIL"); 
    case 0x80090021L: return _T("NTE_SYS_ERR"); 
    case 0x80090022L: return _T("NTE_SILENT_CONTEXT"); 
    case 0x80090023L: return _T("NTE_TOKEN_KEYSET_STORAGE_FULL"); 
    case 0x80090024L: return _T("NTE_TEMPORARY_PROFILE"); 
    case 0x80090025L: return _T("NTE_FIXEDPARAMETER"); 
    case 0x80090026L: return _T("NTE_INVALID_HANDLE"); 
    case 0x80090027L: return _T("NTE_INVALID_PARAMETER"); 
    case 0x80090028L: return _T("NTE_BUFFER_TOO_SMALL"); 
    case 0x80090029L: return _T("NTE_NOT_SUPPORTED"); 
    case 0x8009002AL: return _T("NTE_NO_MORE_ITEMS"); 
    case 0x8009002BL: return _T("NTE_BUFFERS_OVERLAP"); 
    case 0x8009002CL: return _T("NTE_DECRYPTION_FAILURE"); 
    case 0x8009002DL: return _T("NTE_INTERNAL_ERROR"); 
    case 0x8009002EL: return _T("NTE_UI_REQUIRED"); 
    case 0x8009002FL: return _T("NTE_HMAC_NOT_SUPPORTED"); 
    case 0x80090300L: return _T("SEC_E_INSUFFICIENT_MEMORY"); 
    case 0x80090301L: return _T("SEC_E_INVALID_HANDLE"); 
    case 0x80090302L: return _T("SEC_E_UNSUPPORTED_FUNCTION"); 
    case 0x80090303L: return _T("SEC_E_TARGET_UNKNOWN"); 
    case 0x80090304L: return _T("SEC_E_INTERNAL_ERROR"); 
    case 0x80090305L: return _T("SEC_E_SECPKG_NOT_FOUND"); 
    case 0x80090306L: return _T("SEC_E_NOT_OWNER"); 
    case 0x80090307L: return _T("SEC_E_CANNOT_INSTALL"); 
    case 0x80090308L: return _T("SEC_E_INVALID_TOKEN"); 
    case 0x80090309L: return _T("SEC_E_CANNOT_PACK"); 
    case 0x8009030AL: return _T("SEC_E_QOP_NOT_SUPPORTED"); 
    case 0x8009030BL: return _T("SEC_E_NO_IMPERSONATION"); 
    case 0x8009030CL: return _T("SEC_E_LOGON_DENIED"); 
    case 0x8009030DL: return _T("SEC_E_UNKNOWN_CREDENTIALS"); 
    case 0x8009030EL: return _T("SEC_E_NO_CREDENTIALS"); 
    case 0x8009030FL: return _T("SEC_E_MESSAGE_ALTERED"); 
    case 0x80090310L: return _T("SEC_E_OUT_OF_SEQUENCE"); 
    case 0x80090311L: return _T("SEC_E_NO_AUTHENTICATING_AUTHORITY"); 
    case 0x00090312L: return _T("SEC_I_CONTINUE_NEEDED"); 
    case 0x00090313L: return _T("SEC_I_COMPLETE_NEEDED"); 
    case 0x00090314L: return _T("SEC_I_COMPLETE_AND_CONTINUE"); 
    case 0x00090315L: return _T("SEC_I_LOCAL_LOGON"); 
    case 0x80090316L: return _T("SEC_E_BAD_PKGID"); 
    case 0x80090317L: return _T("SEC_E_CONTEXT_EXPIRED"); 
    case 0x00090317L: return _T("SEC_I_CONTEXT_EXPIRED"); 
    case 0x80090318L: return _T("SEC_E_INCOMPLETE_MESSAGE"); 
    case 0x80090320L: return _T("SEC_E_INCOMPLETE_CREDENTIALS"); 
    case 0x80090321L: return _T("SEC_E_BUFFER_TOO_SMALL"); 
    case 0x00090320L: return _T("SEC_I_INCOMPLETE_CREDENTIALS"); 
    case 0x00090321L: return _T("SEC_I_RENEGOTIATE"); 
    case 0x80090322L: return _T("SEC_E_WRONG_PRINCIPAL"); 
    case 0x00090323L: return _T("SEC_I_NO_LSA_CONTEXT"); 
    case 0x80090324L: return _T("SEC_E_TIME_SKEW"); 
    case 0x80090325L: return _T("SEC_E_UNTRUSTED_ROOT"); 
    case 0x80090326L: return _T("SEC_E_ILLEGAL_MESSAGE"); 
    case 0x80090327L: return _T("SEC_E_CERT_UNKNOWN"); 
    case 0x80090328L: return _T("SEC_E_CERT_EXPIRED"); 
    case 0x80090329L: return _T("SEC_E_ENCRYPT_FAILURE"); 
    case 0x80090330L: return _T("SEC_E_DECRYPT_FAILURE"); 
    case 0x80090331L: return _T("SEC_E_ALGORITHM_MISMATCH"); 
    case 0x80090332L: return _T("SEC_E_SECURITY_QOS_FAILED"); 
    case 0x80090333L: return _T("SEC_E_UNFINISHED_CONTEXT_DELETED"); 
    case 0x80090334L: return _T("SEC_E_NO_TGT_REPLY"); 
    case 0x80090335L: return _T("SEC_E_NO_IP_ADDRESSES"); 
    case 0x80090336L: return _T("SEC_E_WRONG_CREDENTIAL_HANDLE"); 
    case 0x80090337L: return _T("SEC_E_CRYPTO_SYSTEM_INVALID"); 
    case 0x80090338L: return _T("SEC_E_MAX_REFERRALS_EXCEEDED"); 
    case 0x80090339L: return _T("SEC_E_MUST_BE_KDC"); 
    case 0x8009033AL: return _T("SEC_E_STRONG_CRYPTO_NOT_SUPPORTED"); 
    case 0x8009033BL: return _T("SEC_E_TOO_MANY_PRINCIPALS"); 
    case 0x8009033CL: return _T("SEC_E_NO_PA_DATA"); 
    case 0x8009033DL: return _T("SEC_E_PKINIT_NAME_MISMATCH"); 
    case 0x8009033EL: return _T("SEC_E_SMARTCARD_LOGON_REQUIRED"); 
    case 0x8009033FL: return _T("SEC_E_SHUTDOWN_IN_PROGRESS"); 
    case 0x80090340L: return _T("SEC_E_KDC_INVALID_REQUEST"); 
    case 0x80090341L: return _T("SEC_E_KDC_UNABLE_TO_REFER"); 
    case 0x80090342L: return _T("SEC_E_KDC_UNKNOWN_ETYPE"); 
    case 0x80090343L: return _T("SEC_E_UNSUPPORTED_PREAUTH"); 
    case 0x80090345L: return _T("SEC_E_DELEGATION_REQUIRED"); 
    case 0x80090346L: return _T("SEC_E_BAD_BINDINGS"); 
    case 0x80090347L: return _T("SEC_E_MULTIPLE_ACCOUNTS"); 
    case 0x80090348L: return _T("SEC_E_NO_KERB_KEY"); 
    case 0x80090349L: return _T("SEC_E_CERT_WRONG_USAGE"); 
    case 0x80090350L: return _T("SEC_E_DOWNGRADE_DETECTED"); 
    case 0x80090351L: return _T("SEC_E_SMARTCARD_CERT_REVOKED"); 
    case 0x80090352L: return _T("SEC_E_ISSUING_CA_UNTRUSTED"); 
    case 0x80090353L: return _T("SEC_E_REVOCATION_OFFLINE_C"); 
    case 0x80090354L: return _T("SEC_E_PKINIT_CLIENT_FAILURE"); 
    case 0x80090355L: return _T("SEC_E_SMARTCARD_CERT_EXPIRED"); 
    case 0x80090356L: return _T("SEC_E_NO_S4U_PROT_SUPPORT"); 
    case 0x80090357L: return _T("SEC_E_CROSSREALM_DELEGATION_FAILURE"); 
    case 0x80090358L: return _T("SEC_E_REVOCATION_OFFLINE_KDC"); 
    case 0x80090359L: return _T("SEC_E_ISSUING_CA_UNTRUSTED_KDC"); 
    case 0x8009035AL: return _T("SEC_E_KDC_CERT_EXPIRED"); 
    case 0x8009035BL: return _T("SEC_E_KDC_CERT_REVOKED"); 
    case 0x0009035CL: return _T("SEC_I_SIGNATURE_NEEDED"); 
    case 0x8009035DL: return _T("SEC_E_INVALID_PARAMETER"); 
    case 0x8009035EL: return _T("SEC_E_DELEGATION_POLICY"); 
    case 0x8009035FL: return _T("SEC_E_POLICY_NLTM_ONLY"); 
    case 0x00090360L: return _T("SEC_I_NO_RENEGOTIATION"); 
    case 0x80090361L: return _T("SEC_E_NO_CONTEXT"); 
    case 0x80090362L: return _T("SEC_E_PKU2U_CERT_FAILURE"); 
    case 0x80090363L: return _T("SEC_E_MUTUAL_AUTH_FAILED"); 
    case 0x80091001L: return _T("CRYPT_E_MSG_ERROR"); 
    case 0x80091002L: return _T("CRYPT_E_UNKNOWN_ALGO"); 
    case 0x80091003L: return _T("CRYPT_E_OID_FORMAT"); 
    case 0x80091004L: return _T("CRYPT_E_INVALID_MSG_TYPE"); 
    case 0x80091005L: return _T("CRYPT_E_UNEXPECTED_ENCODING"); 
    case 0x80091006L: return _T("CRYPT_E_AUTH_ATTR_MISSING"); 
    case 0x80091007L: return _T("CRYPT_E_HASH_VALUE"); 
    case 0x80091008L: return _T("CRYPT_E_INVALID_INDEX"); 
    case 0x80091009L: return _T("CRYPT_E_ALREADY_DECRYPTED"); 
    case 0x8009100AL: return _T("CRYPT_E_NOT_DECRYPTED"); 
    case 0x8009100BL: return _T("CRYPT_E_RECIPIENT_NOT_FOUND"); 
    case 0x8009100CL: return _T("CRYPT_E_CONTROL_TYPE"); 
    case 0x8009100DL: return _T("CRYPT_E_ISSUER_SERIALNUMBER"); 
    case 0x8009100EL: return _T("CRYPT_E_SIGNER_NOT_FOUND"); 
    case 0x8009100FL: return _T("CRYPT_E_ATTRIBUTES_MISSING"); 
    case 0x80091010L: return _T("CRYPT_E_STREAM_MSG_NOT_READY"); 
    case 0x80091011L: return _T("CRYPT_E_STREAM_INSUFFICIENT_DATA"); 
    case 0x00091012L: return _T("CRYPT_I_NEW_PROTECTION_REQUIRED"); 
    case 0x80092001L: return _T("CRYPT_E_BAD_LEN"); 
    case 0x80092002L: return _T("CRYPT_E_BAD_ENCODE"); 
    case 0x80092003L: return _T("CRYPT_E_FILE_ERROR"); 
    case 0x80092004L: return _T("CRYPT_E_NOT_FOUND"); 
    case 0x80092005L: return _T("CRYPT_E_EXISTS"); 
    case 0x80092006L: return _T("CRYPT_E_NO_PROVIDER"); 
    case 0x80092007L: return _T("CRYPT_E_SELF_SIGNED"); 
    case 0x80092008L: return _T("CRYPT_E_DELETED_PREV"); 
    case 0x80092009L: return _T("CRYPT_E_NO_MATCH"); 
    case 0x8009200AL: return _T("CRYPT_E_UNEXPECTED_MSG_TYPE"); 
    case 0x8009200BL: return _T("CRYPT_E_NO_KEY_PROPERTY"); 
    case 0x8009200CL: return _T("CRYPT_E_NO_DECRYPT_CERT"); 
    case 0x8009200DL: return _T("CRYPT_E_BAD_MSG"); 
    case 0x8009200EL: return _T("CRYPT_E_NO_SIGNER"); 
    case 0x8009200FL: return _T("CRYPT_E_PENDING_CLOSE"); 
    case 0x80092010L: return _T("CRYPT_E_REVOKED"); 
    case 0x80092011L: return _T("CRYPT_E_NO_REVOCATION_DLL"); 
    case 0x80092012L: return _T("CRYPT_E_NO_REVOCATION_CHECK"); 
    case 0x80092013L: return _T("CRYPT_E_REVOCATION_OFFLINE"); 
    case 0x80092014L: return _T("CRYPT_E_NOT_IN_REVOCATION_DATABASE"); 
    case 0x80092020L: return _T("CRYPT_E_INVALID_NUMERIC_STRING"); 
    case 0x80092021L: return _T("CRYPT_E_INVALID_PRINTABLE_STRING"); 
    case 0x80092022L: return _T("CRYPT_E_INVALID_IA5_STRING"); 
    case 0x80092023L: return _T("CRYPT_E_INVALID_X500_STRING"); 
    case 0x80092024L: return _T("CRYPT_E_NOT_CHAR_STRING"); 
    case 0x80092025L: return _T("CRYPT_E_FILERESIZED"); 
    case 0x80092026L: return _T("CRYPT_E_SECURITY_SETTINGS"); 
    case 0x80092027L: return _T("CRYPT_E_NO_VERIFY_USAGE_DLL"); 
    case 0x80092028L: return _T("CRYPT_E_NO_VERIFY_USAGE_CHECK"); 
    case 0x80092029L: return _T("CRYPT_E_VERIFY_USAGE_OFFLINE"); 
    case 0x8009202AL: return _T("CRYPT_E_NOT_IN_CTL"); 
    case 0x8009202BL: return _T("CRYPT_E_NO_TRUSTED_SIGNER"); 
    case 0x8009202CL: return _T("CRYPT_E_MISSING_PUBKEY_PARA"); 
    case 0x80093000L: return _T("CRYPT_E_OSS_ERROR"); 
    case 0x80093001L: return _T("OSS_MORE_BUF"); 
    case 0x80093002L: return _T("OSS_NEGATIVE_UINTEGER"); 
    case 0x80093003L: return _T("OSS_PDU_RANGE"); 
    case 0x80093004L: return _T("OSS_MORE_INPUT"); 
    case 0x80093005L: return _T("OSS_DATA_ERROR"); 
    case 0x80093006L: return _T("OSS_BAD_ARG"); 
    case 0x80093007L: return _T("OSS_BAD_VERSION"); 
    case 0x80093008L: return _T("OSS_OUT_MEMORY"); 
    case 0x80093009L: return _T("OSS_PDU_MISMATCH"); 
    case 0x8009300AL: return _T("OSS_LIMITED"); 
    case 0x8009300BL: return _T("OSS_BAD_PTR"); 
    case 0x8009300CL: return _T("OSS_BAD_TIME"); 
    case 0x8009300DL: return _T("OSS_INDEFINITE_NOT_SUPPORTED"); 
    case 0x8009300EL: return _T("OSS_MEM_ERROR"); 
    case 0x8009300FL: return _T("OSS_BAD_TABLE"); 
    case 0x80093010L: return _T("OSS_TOO_LONG"); 
    case 0x80093011L: return _T("OSS_CONSTRAINT_VIOLATED"); 
    case 0x80093012L: return _T("OSS_FATAL_ERROR"); 
    case 0x80093013L: return _T("OSS_ACCESS_SERIALIZATION_ERROR"); 
    case 0x80093014L: return _T("OSS_NULL_TBL"); 
    case 0x80093015L: return _T("OSS_NULL_FCN"); 
    case 0x80093016L: return _T("OSS_BAD_ENCRULES"); 
    case 0x80093017L: return _T("OSS_UNAVAIL_ENCRULES"); 
    case 0x80093018L: return _T("OSS_CANT_OPEN_TRACE_WINDOW"); 
    case 0x80093019L: return _T("OSS_UNIMPLEMENTED"); 
    case 0x8009301AL: return _T("OSS_OID_DLL_NOT_LINKED"); 
    case 0x8009301BL: return _T("OSS_CANT_OPEN_TRACE_FILE"); 
    case 0x8009301CL: return _T("OSS_TRACE_FILE_ALREADY_OPEN"); 
    case 0x8009301DL: return _T("OSS_TABLE_MISMATCH"); 
    case 0x8009301EL: return _T("OSS_TYPE_NOT_SUPPORTED"); 
    case 0x8009301FL: return _T("OSS_REAL_DLL_NOT_LINKED"); 
    case 0x80093020L: return _T("OSS_REAL_CODE_NOT_LINKED"); 
    case 0x80093021L: return _T("OSS_OUT_OF_RANGE"); 
    case 0x80093022L: return _T("OSS_COPIER_DLL_NOT_LINKED"); 
    case 0x80093023L: return _T("OSS_CONSTRAINT_DLL_NOT_LINKED"); 
    case 0x80093024L: return _T("OSS_COMPARATOR_DLL_NOT_LINKED"); 
    case 0x80093025L: return _T("OSS_COMPARATOR_CODE_NOT_LINKED"); 
    case 0x80093026L: return _T("OSS_MEM_MGR_DLL_NOT_LINKED"); 
    case 0x80093027L: return _T("OSS_PDV_DLL_NOT_LINKED"); 
    case 0x80093028L: return _T("OSS_PDV_CODE_NOT_LINKED"); 
    case 0x80093029L: return _T("OSS_API_DLL_NOT_LINKED"); 
    case 0x8009302AL: return _T("OSS_BERDER_DLL_NOT_LINKED"); 
    case 0x8009302BL: return _T("OSS_PER_DLL_NOT_LINKED"); 
    case 0x8009302CL: return _T("OSS_OPEN_TYPE_ERROR"); 
    case 0x8009302DL: return _T("OSS_MUTEX_NOT_CREATED"); 
    case 0x8009302EL: return _T("OSS_CANT_CLOSE_TRACE_FILE"); 
    case 0x80093100L: return _T("CRYPT_E_ASN1_ERROR"); 
    case 0x80093101L: return _T("CRYPT_E_ASN1_INTERNAL"); 
    case 0x80093102L: return _T("CRYPT_E_ASN1_EOD"); 
    case 0x80093103L: return _T("CRYPT_E_ASN1_CORRUPT"); 
    case 0x80093104L: return _T("CRYPT_E_ASN1_LARGE"); 
    case 0x80093105L: return _T("CRYPT_E_ASN1_CONSTRAINT"); 
    case 0x80093106L: return _T("CRYPT_E_ASN1_MEMORY"); 
    case 0x80093107L: return _T("CRYPT_E_ASN1_OVERFLOW"); 
    case 0x80093108L: return _T("CRYPT_E_ASN1_BADPDU"); 
    case 0x80093109L: return _T("CRYPT_E_ASN1_BADARGS"); 
    case 0x8009310AL: return _T("CRYPT_E_ASN1_BADREAL"); 
    case 0x8009310BL: return _T("CRYPT_E_ASN1_BADTAG"); 
    case 0x8009310CL: return _T("CRYPT_E_ASN1_CHOICE"); 
    case 0x8009310DL: return _T("CRYPT_E_ASN1_RULE"); 
    case 0x8009310EL: return _T("CRYPT_E_ASN1_UTF8"); 
    case 0x80093133L: return _T("CRYPT_E_ASN1_PDU_TYPE"); 
    case 0x80093134L: return _T("CRYPT_E_ASN1_NYI"); 
    case 0x80093201L: return _T("CRYPT_E_ASN1_EXTENDED"); 
    case 0x80093202L: return _T("CRYPT_E_ASN1_NOEOD"); 
    case 0x80094001L: return _T("CERTSRV_E_BAD_REQUESTSUBJECT"); 
    case 0x80094002L: return _T("CERTSRV_E_NO_REQUEST"); 
    case 0x80094003L: return _T("CERTSRV_E_BAD_REQUESTSTATUS"); 
    case 0x80094004L: return _T("CERTSRV_E_PROPERTY_EMPTY"); 
    case 0x80094005L: return _T("CERTSRV_E_INVALID_CA_CERTIFICATE"); 
    case 0x80094006L: return _T("CERTSRV_E_SERVER_SUSPENDED"); 
    case 0x80094007L: return _T("CERTSRV_E_ENCODING_LENGTH"); 
    case 0x80094008L: return _T("CERTSRV_E_ROLECONFLICT"); 
    case 0x80094009L: return _T("CERTSRV_E_RESTRICTEDOFFICER"); 
    case 0x8009400AL: return _T("CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED"); 
    case 0x8009400BL: return _T("CERTSRV_E_NO_VALID_KRA"); 
    case 0x8009400CL: return _T("CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL"); 
    case 0x8009400DL: return _T("CERTSRV_E_NO_CAADMIN_DEFINED"); 
    case 0x8009400EL: return _T("CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE"); 
    case 0x8009400FL: return _T("CERTSRV_E_NO_DB_SESSIONS"); 
    case 0x80094010L: return _T("CERTSRV_E_ALIGNMENT_FAULT"); 
    case 0x80094011L: return _T("CERTSRV_E_ENROLL_DENIED"); 
    case 0x80094012L: return _T("CERTSRV_E_TEMPLATE_DENIED"); 
    case 0x80094013L: return _T("CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE"); 
    case 0x80094014L: return _T("CERTSRV_E_ADMIN_DENIED_REQUEST"); 
    case 0x80094015L: return _T("CERTSRV_E_NO_POLICY_SERVER"); 
    case 0x80094800L: return _T("CERTSRV_E_UNSUPPORTED_CERT_TYPE"); 
    case 0x80094801L: return _T("CERTSRV_E_NO_CERT_TYPE"); 
    case 0x80094802L: return _T("CERTSRV_E_TEMPLATE_CONFLICT"); 
    case 0x80094803L: return _T("CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED"); 
    case 0x80094804L: return _T("CERTSRV_E_ARCHIVED_KEY_REQUIRED"); 
    case 0x80094805L: return _T("CERTSRV_E_SMIME_REQUIRED"); 
    case 0x80094806L: return _T("CERTSRV_E_BAD_RENEWAL_SUBJECT"); 
    case 0x80094807L: return _T("CERTSRV_E_BAD_TEMPLATE_VERSION"); 
    case 0x80094808L: return _T("CERTSRV_E_TEMPLATE_POLICY_REQUIRED"); 
    case 0x80094809L: return _T("CERTSRV_E_SIGNATURE_POLICY_REQUIRED"); 
    case 0x8009480AL: return _T("CERTSRV_E_SIGNATURE_COUNT"); 
    case 0x8009480BL: return _T("CERTSRV_E_SIGNATURE_REJECTED"); 
    case 0x8009480CL: return _T("CERTSRV_E_ISSUANCE_POLICY_REQUIRED"); 
    case 0x8009480DL: return _T("CERTSRV_E_SUBJECT_UPN_REQUIRED"); 
    case 0x8009480EL: return _T("CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED"); 
    case 0x8009480FL: return _T("CERTSRV_E_SUBJECT_DNS_REQUIRED"); 
    case 0x80094810L: return _T("CERTSRV_E_ARCHIVED_KEY_UNEXPECTED"); 
    case 0x80094811L: return _T("CERTSRV_E_KEY_LENGTH"); 
    case 0x80094812L: return _T("CERTSRV_E_SUBJECT_EMAIL_REQUIRED"); 
    case 0x80094813L: return _T("CERTSRV_E_UNKNOWN_CERT_TYPE"); 
    case 0x80094814L: return _T("CERTSRV_E_CERT_TYPE_OVERLAP"); 
    case 0x80094815L: return _T("CERTSRV_E_TOO_MANY_SIGNATURES"); 
    case 0x80095000L: return _T("XENROLL_E_KEY_NOT_EXPORTABLE"); 
    case 0x80095001L: return _T("XENROLL_E_CANNOT_ADD_ROOT_CERT"); 
    case 0x80095002L: return _T("XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND"); 
    case 0x80095003L: return _T("XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH"); 
    case 0x80095004L: return _T("XENROLL_E_RESPONSE_KA_HASH_MISMATCH"); 
    case 0x80095005L: return _T("XENROLL_E_KEYSPEC_SMIME_MISMATCH"); 
    case 0x80096001L: return _T("TRUST_E_SYSTEM_ERROR"); 
    case 0x80096002L: return _T("TRUST_E_NO_SIGNER_CERT"); 
    case 0x80096003L: return _T("TRUST_E_COUNTER_SIGNER"); 
    case 0x80096004L: return _T("TRUST_E_CERT_SIGNATURE"); 
    case 0x80096005L: return _T("TRUST_E_TIME_STAMP"); 
    case 0x80096010L: return _T("TRUST_E_BAD_DIGEST"); 
    case 0x80096019L: return _T("TRUST_E_BASIC_CONSTRAINTS"); 
    case 0x8009601EL: return _T("TRUST_E_FINANCIAL_CRITERIA"); 
    case 0x80097001L: return _T("MSSIPOTF_E_OUTOFMEMRANGE"); 
    case 0x80097002L: return _T("MSSIPOTF_E_CANTGETOBJECT"); 
    case 0x80097003L: return _T("MSSIPOTF_E_NOHEADTABLE"); 
    case 0x80097004L: return _T("MSSIPOTF_E_BAD_MAGICNUMBER"); 
    case 0x80097005L: return _T("MSSIPOTF_E_BAD_OFFSET_TABLE"); 
    case 0x80097006L: return _T("MSSIPOTF_E_TABLE_TAGORDER"); 
    case 0x80097007L: return _T("MSSIPOTF_E_TABLE_LONGWORD"); 
    case 0x80097008L: return _T("MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT"); 
    case 0x80097009L: return _T("MSSIPOTF_E_TABLES_OVERLAP"); 
    case 0x8009700AL: return _T("MSSIPOTF_E_TABLE_PADBYTES"); 
    case 0x8009700BL: return _T("MSSIPOTF_E_FILETOOSMALL"); 
    case 0x8009700CL: return _T("MSSIPOTF_E_TABLE_CHECKSUM"); 
    case 0x8009700DL: return _T("MSSIPOTF_E_FILE_CHECKSUM"); 
    case 0x80097010L: return _T("MSSIPOTF_E_FAILED_POLICY"); 
    case 0x80097011L: return _T("MSSIPOTF_E_FAILED_HINTS_CHECK"); 
    case 0x80097012L: return _T("MSSIPOTF_E_NOT_OPENTYPE"); 
    case 0x80097013L: return _T("MSSIPOTF_E_FILE"); 
    case 0x80097014L: return _T("MSSIPOTF_E_CRYPT"); 
    case 0x80097015L: return _T("MSSIPOTF_E_BADVERSION"); 
    case 0x80097016L: return _T("MSSIPOTF_E_DSIG_STRUCTURE"); 
    case 0x80097017L: return _T("MSSIPOTF_E_PCONST_CHECK"); 
    case 0x80097018L: return _T("MSSIPOTF_E_STRUCTURE"); 
    case 0x80097019L: return _T("ERROR_CRED_REQUIRES_CONFIRMATION"); 
    case 0x800B0001L: return _T("TRUST_E_PROVIDER_UNKNOWN"); 
    case 0x800B0002L: return _T("TRUST_E_ACTION_UNKNOWN"); 
    case 0x800B0003L: return _T("TRUST_E_SUBJECT_FORM_UNKNOWN"); 
    case 0x800B0004L: return _T("TRUST_E_SUBJECT_NOT_TRUSTED"); 
    case 0x800B0005L: return _T("DIGSIG_E_ENCODE"); 
    case 0x800B0006L: return _T("DIGSIG_E_DECODE"); 
    case 0x800B0007L: return _T("DIGSIG_E_EXTENSIBILITY"); 
    case 0x800B0008L: return _T("DIGSIG_E_CRYPTO"); 
    case 0x800B0009L: return _T("PERSIST_E_SIZEDEFINITE"); 
    case 0x800B000AL: return _T("PERSIST_E_SIZEINDEFINITE"); 
    case 0x800B000BL: return _T("PERSIST_E_NOTSELFSIZING"); 
    case 0x800B0100L: return _T("TRUST_E_NOSIGNATURE"); 
    case 0x800B0101L: return _T("CERT_E_EXPIRED"); 
    case 0x800B0102L: return _T("CERT_E_VALIDITYPERIODNESTING"); 
    case 0x800B0103L: return _T("CERT_E_ROLE"); 
    case 0x800B0104L: return _T("CERT_E_PATHLENCONST"); 
    case 0x800B0105L: return _T("CERT_E_CRITICAL"); 
    case 0x800B0106L: return _T("CERT_E_PURPOSE"); 
    case 0x800B0107L: return _T("CERT_E_ISSUERCHAINING"); 
    case 0x800B0108L: return _T("CERT_E_MALFORMED"); 
    case 0x800B0109L: return _T("CERT_E_UNTRUSTEDROOT"); 
    case 0x800B010AL: return _T("CERT_E_CHAINING"); 
    case 0x800B010BL: return _T("TRUST_E_FAIL"); 
    case 0x800B010CL: return _T("CERT_E_REVOKED"); 
    case 0x800B010DL: return _T("CERT_E_UNTRUSTEDTESTROOT"); 
    case 0x800B010EL: return _T("CERT_E_REVOCATION_FAILURE"); 
    case 0x800B010FL: return _T("CERT_E_CN_NO_MATCH"); 
    case 0x800B0110L: return _T("CERT_E_WRONG_USAGE"); 
    case 0x800B0111L: return _T("TRUST_E_EXPLICIT_DISTRUST"); 
    case 0x800B0112L: return _T("CERT_E_UNTRUSTEDCA"); 
    case 0x800B0113L: return _T("CERT_E_INVALID_POLICY"); 
    case 0x800B0114L: return _T("CERT_E_INVALID_NAME"); 
    case 0x800F0000L: return _T("SPAPI_E_EXPECTED_SECTION_NAME"); 
    case 0x800F0001L: return _T("SPAPI_E_BAD_SECTION_NAME_LINE"); 
    case 0x800F0002L: return _T("SPAPI_E_SECTION_NAME_TOO_LONG"); 
    case 0x800F0003L: return _T("SPAPI_E_GENERAL_SYNTAX"); 
    case 0x800F0100L: return _T("SPAPI_E_WRONG_INF_STYLE"); 
    case 0x800F0101L: return _T("SPAPI_E_SECTION_NOT_FOUND"); 
    case 0x800F0102L: return _T("SPAPI_E_LINE_NOT_FOUND"); 
    case 0x800F0103L: return _T("SPAPI_E_NO_BACKUP"); 
    case 0x800F0200L: return _T("SPAPI_E_NO_ASSOCIATED_CLASS"); 
    case 0x800F0201L: return _T("SPAPI_E_CLASS_MISMATCH"); 
    case 0x800F0202L: return _T("SPAPI_E_DUPLICATE_FOUND"); 
    case 0x800F0203L: return _T("SPAPI_E_NO_DRIVER_SELECTED"); 
    case 0x800F0204L: return _T("SPAPI_E_KEY_DOES_NOT_EXIST"); 
    case 0x800F0205L: return _T("SPAPI_E_INVALID_DEVINST_NAME"); 
    case 0x800F0206L: return _T("SPAPI_E_INVALID_CLASS"); 
    case 0x800F0207L: return _T("SPAPI_E_DEVINST_ALREADY_EXISTS"); 
    case 0x800F0208L: return _T("SPAPI_E_DEVINFO_NOT_REGISTERED"); 
    case 0x800F0209L: return _T("SPAPI_E_INVALID_REG_PROPERTY"); 
    case 0x800F020AL: return _T("SPAPI_E_NO_INF"); 
    case 0x800F020BL: return _T("SPAPI_E_NO_SUCH_DEVINST"); 
    case 0x800F020CL: return _T("SPAPI_E_CANT_LOAD_CLASS_ICON"); 
    case 0x800F020DL: return _T("SPAPI_E_INVALID_CLASS_INSTALLER"); 
    case 0x800F020EL: return _T("SPAPI_E_DI_DO_DEFAULT"); 
    case 0x800F020FL: return _T("SPAPI_E_DI_NOFILECOPY"); 
    case 0x800F0210L: return _T("SPAPI_E_INVALID_HWPROFILE"); 
    case 0x800F0211L: return _T("SPAPI_E_NO_DEVICE_SELECTED"); 
    case 0x800F0212L: return _T("SPAPI_E_DEVINFO_LIST_LOCKED"); 
    case 0x800F0213L: return _T("SPAPI_E_DEVINFO_DATA_LOCKED"); 
    case 0x800F0214L: return _T("SPAPI_E_DI_BAD_PATH"); 
    case 0x800F0215L: return _T("SPAPI_E_NO_CLASSINSTALL_PARAMS"); 
    case 0x800F0216L: return _T("SPAPI_E_FILEQUEUE_LOCKED"); 
    case 0x800F0217L: return _T("SPAPI_E_BAD_SERVICE_INSTALLSECT"); 
    case 0x800F0218L: return _T("SPAPI_E_NO_CLASS_DRIVER_LIST"); 
    case 0x800F0219L: return _T("SPAPI_E_NO_ASSOCIATED_SERVICE"); 
    case 0x800F021AL: return _T("SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE"); 
    case 0x800F021BL: return _T("SPAPI_E_DEVICE_INTERFACE_ACTIVE"); 
    case 0x800F021CL: return _T("SPAPI_E_DEVICE_INTERFACE_REMOVED"); 
    case 0x800F021DL: return _T("SPAPI_E_BAD_INTERFACE_INSTALLSECT"); 
    case 0x800F021EL: return _T("SPAPI_E_NO_SUCH_INTERFACE_CLASS"); 
    case 0x800F021FL: return _T("SPAPI_E_INVALID_REFERENCE_STRING"); 
    case 0x800F0220L: return _T("SPAPI_E_INVALID_MACHINENAME"); 
    case 0x800F0221L: return _T("SPAPI_E_REMOTE_COMM_FAILURE"); 
    case 0x800F0222L: return _T("SPAPI_E_MACHINE_UNAVAILABLE"); 
    case 0x800F0223L: return _T("SPAPI_E_NO_CONFIGMGR_SERVICES"); 
    case 0x800F0224L: return _T("SPAPI_E_INVALID_PROPPAGE_PROVIDER"); 
    case 0x800F0225L: return _T("SPAPI_E_NO_SUCH_DEVICE_INTERFACE"); 
    case 0x800F0226L: return _T("SPAPI_E_DI_POSTPROCESSING_REQUIRED"); 
    case 0x800F0227L: return _T("SPAPI_E_INVALID_COINSTALLER"); 
    case 0x800F0228L: return _T("SPAPI_E_NO_COMPAT_DRIVERS"); 
    case 0x800F0229L: return _T("SPAPI_E_NO_DEVICE_ICON"); 
    case 0x800F022AL: return _T("SPAPI_E_INVALID_INF_LOGCONFIG"); 
    case 0x800F022BL: return _T("SPAPI_E_DI_DONT_INSTALL"); 
    case 0x800F022CL: return _T("SPAPI_E_INVALID_FILTER_DRIVER"); 
    case 0x800F022DL: return _T("SPAPI_E_NON_WINDOWS_NT_DRIVER"); 
    case 0x800F022EL: return _T("SPAPI_E_NON_WINDOWS_DRIVER"); 
    case 0x800F022FL: return _T("SPAPI_E_NO_CATALOG_FOR_OEM_INF"); 
    case 0x800F0230L: return _T("SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE"); 
    case 0x800F0231L: return _T("SPAPI_E_NOT_DISABLEABLE"); 
    case 0x800F0232L: return _T("SPAPI_E_CANT_REMOVE_DEVINST"); 
    case 0x800F0233L: return _T("SPAPI_E_INVALID_TARGET"); 
    case 0x800F0234L: return _T("SPAPI_E_DRIVER_NONNATIVE"); 
    case 0x800F0235L: return _T("SPAPI_E_IN_WOW64"); 
    case 0x800F0236L: return _T("SPAPI_E_SET_SYSTEM_RESTORE_POINT"); 
    case 0x800F0237L: return _T("SPAPI_E_INCORRECTLY_COPIED_INF"); 
    case 0x800F0238L: return _T("SPAPI_E_SCE_DISABLED"); 
    case 0x800F0239L: return _T("SPAPI_E_UNKNOWN_EXCEPTION"); 
    case 0x800F023AL: return _T("SPAPI_E_PNP_REGISTRY_ERROR"); 
    case 0x800F023BL: return _T("SPAPI_E_REMOTE_REQUEST_UNSUPPORTED"); 
    case 0x800F023CL: return _T("SPAPI_E_NOT_AN_INSTALLED_OEM_INF"); 
    case 0x800F023DL: return _T("SPAPI_E_INF_IN_USE_BY_DEVICES"); 
    case 0x800F023EL: return _T("SPAPI_E_DI_FUNCTION_OBSOLETE"); 
    case 0x800F023FL: return _T("SPAPI_E_NO_AUTHENTICODE_CATALOG"); 
    case 0x800F0240L: return _T("SPAPI_E_AUTHENTICODE_DISALLOWED"); 
    case 0x800F0241L: return _T("SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER"); 
    case 0x800F0242L: return _T("SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED"); 
    case 0x800F0243L: return _T("SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED"); 
    case 0x800F0244L: return _T("SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH"); 
    case 0x800F0245L: return _T("SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE"); 
    case 0x800F0246L: return _T("SPAPI_E_DEVICE_INSTALLER_NOT_READY"); 
    case 0x800F0247L: return _T("SPAPI_E_DRIVER_STORE_ADD_FAILED"); 
    case 0x800F0248L: return _T("SPAPI_E_DEVICE_INSTALL_BLOCKED"); 
    case 0x800F0249L: return _T("SPAPI_E_DRIVER_INSTALL_BLOCKED"); 
    case 0x800F024AL: return _T("SPAPI_E_WRONG_INF_TYPE"); 
    case 0x800F024BL: return _T("SPAPI_E_FILE_HASH_NOT_IN_CATALOG"); 
    case 0x800F024CL: return _T("SPAPI_E_DRIVER_STORE_DELETE_FAILED"); 
    case 0x800F0300L: return _T("SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW"); 
    case 0x800F1000L: return _T("SPAPI_E_ERROR_NOT_INSTALLED"); 
    case 0x80100001L: return _T("SCARD_F_INTERNAL_ERROR"); 
    case 0x80100002L: return _T("SCARD_E_CANCELLED"); 
    case 0x80100003L: return _T("SCARD_E_INVALID_HANDLE"); 
    case 0x80100004L: return _T("SCARD_E_INVALID_PARAMETER"); 
    case 0x80100005L: return _T("SCARD_E_INVALID_TARGET"); 
    case 0x80100006L: return _T("SCARD_E_NO_MEMORY"); 
    case 0x80100007L: return _T("SCARD_F_WAITED_TOO_LONG"); 
    case 0x80100008L: return _T("SCARD_E_INSUFFICIENT_BUFFER"); 
    case 0x80100009L: return _T("SCARD_E_UNKNOWN_READER"); 
    case 0x8010000AL: return _T("SCARD_E_TIMEOUT"); 
    case 0x8010000BL: return _T("SCARD_E_SHARING_VIOLATION"); 
    case 0x8010000CL: return _T("SCARD_E_NO_SMARTCARD"); 
    case 0x8010000DL: return _T("SCARD_E_UNKNOWN_CARD"); 
    case 0x8010000EL: return _T("SCARD_E_CANT_DISPOSE"); 
    case 0x8010000FL: return _T("SCARD_E_PROTO_MISMATCH"); 
    case 0x80100010L: return _T("SCARD_E_NOT_READY"); 
    case 0x80100011L: return _T("SCARD_E_INVALID_VALUE"); 
    case 0x80100012L: return _T("SCARD_E_SYSTEM_CANCELLED"); 
    case 0x80100013L: return _T("SCARD_F_COMM_ERROR"); 
    case 0x80100014L: return _T("SCARD_F_UNKNOWN_ERROR"); 
    case 0x80100015L: return _T("SCARD_E_INVALID_ATR"); 
    case 0x80100016L: return _T("SCARD_E_NOT_TRANSACTED"); 
    case 0x80100017L: return _T("SCARD_E_READER_UNAVAILABLE"); 
    case 0x80100018L: return _T("SCARD_P_SHUTDOWN"); 
    case 0x80100019L: return _T("SCARD_E_PCI_TOO_SMALL"); 
    case 0x8010001AL: return _T("SCARD_E_READER_UNSUPPORTED"); 
    case 0x8010001BL: return _T("SCARD_E_DUPLICATE_READER"); 
    case 0x8010001CL: return _T("SCARD_E_CARD_UNSUPPORTED"); 
    case 0x8010001DL: return _T("SCARD_E_NO_SERVICE"); 
    case 0x8010001EL: return _T("SCARD_E_SERVICE_STOPPED"); 
    case 0x8010001FL: return _T("SCARD_E_UNEXPECTED"); 
    case 0x80100020L: return _T("SCARD_E_ICC_INSTALLATION"); 
    case 0x80100021L: return _T("SCARD_E_ICC_CREATEORDER"); 
    case 0x80100022L: return _T("SCARD_E_UNSUPPORTED_FEATURE"); 
    case 0x80100023L: return _T("SCARD_E_DIR_NOT_FOUND"); 
    case 0x80100024L: return _T("SCARD_E_FILE_NOT_FOUND"); 
    case 0x80100025L: return _T("SCARD_E_NO_DIR"); 
    case 0x80100026L: return _T("SCARD_E_NO_FILE"); 
    case 0x80100027L: return _T("SCARD_E_NO_ACCESS"); 
    case 0x80100028L: return _T("SCARD_E_WRITE_TOO_MANY"); 
    case 0x80100029L: return _T("SCARD_E_BAD_SEEK"); 
    case 0x8010002AL: return _T("SCARD_E_INVALID_CHV"); 
    case 0x8010002BL: return _T("SCARD_E_UNKNOWN_RES_MNG"); 
    case 0x8010002CL: return _T("SCARD_E_NO_SUCH_CERTIFICATE"); 
    case 0x8010002DL: return _T("SCARD_E_CERTIFICATE_UNAVAILABLE"); 
    case 0x8010002EL: return _T("SCARD_E_NO_READERS_AVAILABLE"); 
    case 0x8010002FL: return _T("SCARD_E_COMM_DATA_LOST"); 
    case 0x80100030L: return _T("SCARD_E_NO_KEY_CONTAINER"); 
    case 0x80100031L: return _T("SCARD_E_SERVER_TOO_BUSY"); 
    case 0x80100032L: return _T("SCARD_E_PIN_CACHE_EXPIRED"); 
    case 0x80100033L: return _T("SCARD_E_NO_PIN_CACHE"); 
    case 0x80100034L: return _T("SCARD_E_READ_ONLY_CARD"); 
    case 0x80100065L: return _T("SCARD_W_UNSUPPORTED_CARD"); 
    case 0x80100066L: return _T("SCARD_W_UNRESPONSIVE_CARD"); 
    case 0x80100067L: return _T("SCARD_W_UNPOWERED_CARD"); 
    case 0x80100068L: return _T("SCARD_W_RESET_CARD"); 
    case 0x80100069L: return _T("SCARD_W_REMOVED_CARD"); 
    case 0x8010006AL: return _T("SCARD_W_SECURITY_VIOLATION"); 
    case 0x8010006BL: return _T("SCARD_W_WRONG_CHV"); 
    case 0x8010006CL: return _T("SCARD_W_CHV_BLOCKED"); 
    case 0x8010006DL: return _T("SCARD_W_EOF"); 
    case 0x8010006EL: return _T("SCARD_W_CANCELLED_BY_USER"); 
    case 0x8010006FL: return _T("SCARD_W_CARD_NOT_AUTHENTICATED"); 
    case 0x80100070L: return _T("SCARD_W_CACHE_ITEM_NOT_FOUND"); 
    case 0x80100071L: return _T("SCARD_W_CACHE_ITEM_STALE"); 
    case 0x80100072L: return _T("SCARD_W_CACHE_ITEM_TOO_BIG"); 
    case 0x80110401L: return _T("COMADMIN_E_OBJECTERRORS"); 
    case 0x80110402L: return _T("COMADMIN_E_OBJECTINVALID"); 
    case 0x80110403L: return _T("COMADMIN_E_KEYMISSING"); 
    case 0x80110404L: return _T("COMADMIN_E_ALREADYINSTALLED"); 
    case 0x80110407L: return _T("COMADMIN_E_APP_FILE_WRITEFAIL"); 
    case 0x80110408L: return _T("COMADMIN_E_APP_FILE_READFAIL"); 
    case 0x80110409L: return _T("COMADMIN_E_APP_FILE_VERSION"); 
    case 0x8011040AL: return _T("COMADMIN_E_BADPATH"); 
    case 0x8011040BL: return _T("COMADMIN_E_APPLICATIONEXISTS"); 
    case 0x8011040CL: return _T("COMADMIN_E_ROLEEXISTS"); 
    case 0x8011040DL: return _T("COMADMIN_E_CANTCOPYFILE"); 
    case 0x8011040FL: return _T("COMADMIN_E_NOUSER"); 
    case 0x80110410L: return _T("COMADMIN_E_INVALIDUSERIDS"); 
    case 0x80110411L: return _T("COMADMIN_E_NOREGISTRYCLSID"); 
    case 0x80110412L: return _T("COMADMIN_E_BADREGISTRYPROGID"); 
    case 0x80110413L: return _T("COMADMIN_E_AUTHENTICATIONLEVEL"); 
    case 0x80110414L: return _T("COMADMIN_E_USERPASSWDNOTVALID"); 
    case 0x80110418L: return _T("COMADMIN_E_CLSIDORIIDMISMATCH"); 
    case 0x80110419L: return _T("COMADMIN_E_REMOTEINTERFACE"); 
    case 0x8011041AL: return _T("COMADMIN_E_DLLREGISTERSERVER"); 
    case 0x8011041BL: return _T("COMADMIN_E_NOSERVERSHARE"); 
    case 0x8011041DL: return _T("COMADMIN_E_DLLLOADFAILED"); 
    case 0x8011041EL: return _T("COMADMIN_E_BADREGISTRYLIBID"); 
    case 0x8011041FL: return _T("COMADMIN_E_APPDIRNOTFOUND"); 
    case 0x80110423L: return _T("COMADMIN_E_REGISTRARFAILED"); 
    case 0x80110424L: return _T("COMADMIN_E_COMPFILE_DOESNOTEXIST"); 
    case 0x80110425L: return _T("COMADMIN_E_COMPFILE_LOADDLLFAIL"); 
    case 0x80110426L: return _T("COMADMIN_E_COMPFILE_GETCLASSOBJ"); 
    case 0x80110427L: return _T("COMADMIN_E_COMPFILE_CLASSNOTAVAIL"); 
    case 0x80110428L: return _T("COMADMIN_E_COMPFILE_BADTLB"); 
    case 0x80110429L: return _T("COMADMIN_E_COMPFILE_NOTINSTALLABLE"); 
    case 0x8011042AL: return _T("COMADMIN_E_NOTCHANGEABLE"); 
    case 0x8011042BL: return _T("COMADMIN_E_NOTDELETEABLE"); 
    case 0x8011042CL: return _T("COMADMIN_E_SESSION"); 
    case 0x8011042DL: return _T("COMADMIN_E_COMP_MOVE_LOCKED"); 
    case 0x8011042EL: return _T("COMADMIN_E_COMP_MOVE_BAD_DEST"); 
    case 0x80110430L: return _T("COMADMIN_E_REGISTERTLB"); 
    case 0x80110433L: return _T("COMADMIN_E_SYSTEMAPP"); 
    case 0x80110434L: return _T("COMADMIN_E_COMPFILE_NOREGISTRAR"); 
    case 0x80110435L: return _T("COMADMIN_E_COREQCOMPINSTALLED"); 
    case 0x80110436L: return _T("COMADMIN_E_SERVICENOTINSTALLED"); 
    case 0x80110437L: return _T("COMADMIN_E_PROPERTYSAVEFAILED"); 
    case 0x80110438L: return _T("COMADMIN_E_OBJECTEXISTS"); 
    case 0x80110439L: return _T("COMADMIN_E_COMPONENTEXISTS"); 
    case 0x8011043BL: return _T("COMADMIN_E_REGFILE_CORRUPT"); 
    case 0x8011043CL: return _T("COMADMIN_E_PROPERTY_OVERFLOW"); 
    case 0x8011043EL: return _T("COMADMIN_E_NOTINREGISTRY"); 
    case 0x8011043FL: return _T("COMADMIN_E_OBJECTNOTPOOLABLE"); 
    case 0x80110446L: return _T("COMADMIN_E_APPLID_MATCHES_CLSID"); 
    case 0x80110447L: return _T("COMADMIN_E_ROLE_DOES_NOT_EXIST"); 
    case 0x80110448L: return _T("COMADMIN_E_START_APP_NEEDS_COMPONENTS"); 
    case 0x80110449L: return _T("COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM"); 
    case 0x8011044AL: return _T("COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY"); 
    case 0x8011044BL: return _T("COMADMIN_E_CAN_NOT_START_APP"); 
    case 0x8011044CL: return _T("COMADMIN_E_CAN_NOT_EXPORT_SYS_APP"); 
    case 0x8011044DL: return _T("COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT"); 
    case 0x8011044EL: return _T("COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER"); 
    case 0x8011044FL: return _T("COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE"); 
    case 0x80110450L: return _T("COMADMIN_E_BASE_PARTITION_ONLY"); 
    case 0x80110451L: return _T("COMADMIN_E_START_APP_DISABLED"); 
    case 0x80110457L: return _T("COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME"); 
    case 0x80110458L: return _T("COMADMIN_E_CAT_INVALID_PARTITION_NAME"); 
    case 0x80110459L: return _T("COMADMIN_E_CAT_PARTITION_IN_USE"); 
    case 0x8011045AL: return _T("COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES"); 
    case 0x8011045BL: return _T("COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED"); 
    case 0x8011045CL: return _T("COMADMIN_E_AMBIGUOUS_APPLICATION_NAME"); 
    case 0x8011045DL: return _T("COMADMIN_E_AMBIGUOUS_PARTITION_NAME"); 
    case 0x80110472L: return _T("COMADMIN_E_REGDB_NOTINITIALIZED"); 
    case 0x80110473L: return _T("COMADMIN_E_REGDB_NOTOPEN"); 
    case 0x80110474L: return _T("COMADMIN_E_REGDB_SYSTEMERR"); 
    case 0x80110475L: return _T("COMADMIN_E_REGDB_ALREADYRUNNING"); 
    case 0x80110480L: return _T("COMADMIN_E_MIG_VERSIONNOTSUPPORTED"); 
    case 0x80110481L: return _T("COMADMIN_E_MIG_SCHEMANOTFOUND"); 
    case 0x80110482L: return _T("COMADMIN_E_CAT_BITNESSMISMATCH"); 
    case 0x80110483L: return _T("COMADMIN_E_CAT_UNACCEPTABLEBITNESS"); 
    case 0x80110484L: return _T("COMADMIN_E_CAT_WRONGAPPBITNESS"); 
    case 0x80110485L: return _T("COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED"); 
    case 0x80110486L: return _T("COMADMIN_E_CAT_SERVERFAULT"); 
    case 0x80110600L: return _T("COMQC_E_APPLICATION_NOT_QUEUED"); 
    case 0x80110601L: return _T("COMQC_E_NO_QUEUEABLE_INTERFACES"); 
    case 0x80110602L: return _T("COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE"); 
    case 0x80110603L: return _T("COMQC_E_NO_IPERSISTSTREAM"); 
    case 0x80110604L: return _T("COMQC_E_BAD_MESSAGE"); 
    case 0x80110605L: return _T("COMQC_E_UNAUTHENTICATED"); 
    case 0x80110606L: return _T("COMQC_E_UNTRUSTED_ENQUEUER"); 
    case 0x80110701L: return _T("MSDTC_E_DUPLICATE_RESOURCE"); 
    case 0x80110808L: return _T("COMADMIN_E_OBJECT_PARENT_MISSING"); 
    case 0x80110809L: return _T("COMADMIN_E_OBJECT_DOES_NOT_EXIST"); 
    case 0x8011080AL: return _T("COMADMIN_E_APP_NOT_RUNNING"); 
    case 0x8011080BL: return _T("COMADMIN_E_INVALID_PARTITION"); 
    case 0x8011080DL: return _T("COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE"); 
    case 0x8011080EL: return _T("COMADMIN_E_USER_IN_SET"); 
    case 0x8011080FL: return _T("COMADMIN_E_CANTRECYCLELIBRARYAPPS"); 
    case 0x80110811L: return _T("COMADMIN_E_CANTRECYCLESERVICEAPPS"); 
    case 0x80110812L: return _T("COMADMIN_E_PROCESSALREADYRECYCLED"); 
    case 0x80110813L: return _T("COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED"); 
    case 0x80110814L: return _T("COMADMIN_E_CANTMAKEINPROCSERVICE"); 
    case 0x80110815L: return _T("COMADMIN_E_PROGIDINUSEBYCLSID"); 
    case 0x80110816L: return _T("COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET"); 
    case 0x80110817L: return _T("COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED"); 
    case 0x80110818L: return _T("COMADMIN_E_PARTITION_ACCESSDENIED"); 
    case 0x80110819L: return _T("COMADMIN_E_PARTITION_MSI_ONLY"); 
    case 0x8011081AL: return _T("COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT"); 
    case 0x8011081BL: return _T("COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS"); 
    case 0x8011081CL: return _T("COMADMIN_E_COMP_MOVE_SOURCE"); 
    case 0x8011081DL: return _T("COMADMIN_E_COMP_MOVE_DEST"); 
    case 0x8011081EL: return _T("COMADMIN_E_COMP_MOVE_PRIVATE"); 
    case 0x8011081FL: return _T("COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET"); 
    case 0x80110820L: return _T("COMADMIN_E_CANNOT_ALIAS_EVENTCLASS"); 
    case 0x80110821L: return _T("COMADMIN_E_PRIVATE_ACCESSDENIED"); 
    case 0x80110822L: return _T("COMADMIN_E_SAFERINVALID"); 
    case 0x80110823L: return _T("COMADMIN_E_REGISTRY_ACCESSDENIED"); 
    case 0x80110824L: return _T("COMADMIN_E_PARTITIONS_DISABLED"); 
    case 0x001F0001L: return _T("ERROR_FLT_IO_COMPLETE"); 
    case 0x801F0001L: return _T("ERROR_FLT_NO_HANDLER_DEFINED"); 
    case 0x801F0002L: return _T("ERROR_FLT_CONTEXT_ALREADY_DEFINED"); 
    case 0x801F0003L: return _T("ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST"); 
    case 0x801F0004L: return _T("ERROR_FLT_DISALLOW_FAST_IO"); 
    case 0x801F0005L: return _T("ERROR_FLT_INVALID_NAME_REQUEST"); 
    case 0x801F0006L: return _T("ERROR_FLT_NOT_SAFE_TO_POST_OPERATION"); 
    case 0x801F0007L: return _T("ERROR_FLT_NOT_INITIALIZED"); 
    case 0x801F0008L: return _T("ERROR_FLT_FILTER_NOT_READY"); 
    case 0x801F0009L: return _T("ERROR_FLT_POST_OPERATION_CLEANUP"); 
    case 0x801F000AL: return _T("ERROR_FLT_INTERNAL_ERROR"); 
    case 0x801F000BL: return _T("ERROR_FLT_DELETING_OBJECT"); 
    case 0x801F000CL: return _T("ERROR_FLT_MUST_BE_NONPAGED_POOL"); 
    case 0x801F000DL: return _T("ERROR_FLT_DUPLICATE_ENTRY"); 
    case 0x801F000EL: return _T("ERROR_FLT_CBDQ_DISABLED"); 
    case 0x801F000FL: return _T("ERROR_FLT_DO_NOT_ATTACH"); 
    case 0x801F0010L: return _T("ERROR_FLT_DO_NOT_DETACH"); 
    case 0x801F0011L: return _T("ERROR_FLT_INSTANCE_ALTITUDE_COLLISION"); 
    case 0x801F0012L: return _T("ERROR_FLT_INSTANCE_NAME_COLLISION"); 
    case 0x801F0013L: return _T("ERROR_FLT_FILTER_NOT_FOUND"); 
    case 0x801F0014L: return _T("ERROR_FLT_VOLUME_NOT_FOUND"); 
    case 0x801F0015L: return _T("ERROR_FLT_INSTANCE_NOT_FOUND"); 
    case 0x801F0016L: return _T("ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND"); 
    case 0x801F0017L: return _T("ERROR_FLT_INVALID_CONTEXT_REGISTRATION"); 
    case 0x801F0018L: return _T("ERROR_FLT_NAME_CACHE_MISS"); 
    case 0x801F0019L: return _T("ERROR_FLT_NO_DEVICE_OBJECT"); 
    case 0x801F001AL: return _T("ERROR_FLT_VOLUME_ALREADY_MOUNTED"); 
    case 0x801F001BL: return _T("ERROR_FLT_ALREADY_ENLISTED"); 
    case 0x801F001CL: return _T("ERROR_FLT_CONTEXT_ALREADY_LINKED"); 
    case 0x801F0020L: return _T("ERROR_FLT_NO_WAITER_FOR_REPLY"); 
    case 0x80260001L: return _T("ERROR_HUNG_DISPLAY_DRIVER_THREAD"); 
    case 0x80263001L: return _T("DWM_E_COMPOSITIONDISABLED"); 
    case 0x80263002L: return _T("DWM_E_REMOTING_NOT_SUPPORTED"); 
    case 0x80263003L: return _T("DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE"); 
    case 0x80263004L: return _T("DWM_E_NOT_QUEUING_PRESENTS"); 
    case 0x80263005L: return _T("DWM_E_ADAPTER_NOT_FOUND"); 
    case 0x00263005L: return _T("DWM_S_GDI_REDIRECTION_SURFACE"); 
    case 0x00261001L: return _T("ERROR_MONITOR_NO_DESCRIPTOR"); 
    case 0x00261002L: return _T("ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT"); 
    case 0xC0261003L: return _T("ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM"); 
    case 0xC0261004L: return _T("ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK"); 
    case 0xC0261005L: return _T("ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED"); 
    case 0xC0261006L: return _T("ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK"); 
    case 0xC0261007L: return _T("ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK"); 
    case 0xC0261008L: return _T("ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA"); 
    case 0xC0261009L: return _T("ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK"); 
    case 0xC026100AL: return _T("ERROR_MONITOR_INVALID_MANUFACTURE_DATE"); 
    case 0xC0262000L: return _T("ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER"); 
    case 0xC0262001L: return _T("ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER"); 
    case 0xC0262002L: return _T("ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER"); 
    case 0xC0262003L: return _T("ERROR_GRAPHICS_ADAPTER_WAS_RESET"); 
    case 0xC0262004L: return _T("ERROR_GRAPHICS_INVALID_DRIVER_MODEL"); 
    case 0xC0262005L: return _T("ERROR_GRAPHICS_PRESENT_MODE_CHANGED"); 
    case 0xC0262006L: return _T("ERROR_GRAPHICS_PRESENT_OCCLUDED"); 
    case 0xC0262007L: return _T("ERROR_GRAPHICS_PRESENT_DENIED"); 
    case 0xC0262008L: return _T("ERROR_GRAPHICS_CANNOTCOLORCONVERT"); 
    case 0xC0262009L: return _T("ERROR_GRAPHICS_DRIVER_MISMATCH"); 
    case 0x4026200AL: return _T("ERROR_GRAPHICS_PARTIAL_DATA_POPULATED"); 
    case 0xC026200BL: return _T("ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED"); 
    case 0xC026200CL: return _T("ERROR_GRAPHICS_PRESENT_UNOCCLUDED"); 
    case 0xC0262100L: return _T("ERROR_GRAPHICS_NO_VIDEO_MEMORY"); 
    case 0xC0262101L: return _T("ERROR_GRAPHICS_CANT_LOCK_MEMORY"); 
    case 0xC0262102L: return _T("ERROR_GRAPHICS_ALLOCATION_BUSY"); 
    case 0xC0262103L: return _T("ERROR_GRAPHICS_TOO_MANY_REFERENCES"); 
    case 0xC0262104L: return _T("ERROR_GRAPHICS_TRY_AGAIN_LATER"); 
    case 0xC0262105L: return _T("ERROR_GRAPHICS_TRY_AGAIN_NOW"); 
    case 0xC0262106L: return _T("ERROR_GRAPHICS_ALLOCATION_INVALID"); 
    case 0xC0262107L: return _T("ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE"); 
    case 0xC0262108L: return _T("ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED"); 
    case 0xC0262109L: return _T("ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION"); 
    case 0xC0262110L: return _T("ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE"); 
    case 0xC0262111L: return _T("ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION"); 
    case 0xC0262112L: return _T("ERROR_GRAPHICS_ALLOCATION_CLOSED"); 
    case 0xC0262113L: return _T("ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE"); 
    case 0xC0262114L: return _T("ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE"); 
    case 0xC0262115L: return _T("ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE"); 
    case 0xC0262116L: return _T("ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST"); 
    case 0xC0262200L: return _T("ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE"); 
    case 0xC0262300L: return _T("ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY"); 
    case 0xC0262301L: return _T("ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED"); 
    case 0xC0262302L: return _T("ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED"); 
    case 0xC0262303L: return _T("ERROR_GRAPHICS_INVALID_VIDPN"); 
    case 0xC0262304L: return _T("ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE"); 
    case 0xC0262305L: return _T("ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET"); 
    case 0xC0262306L: return _T("ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED"); 
    case 0x00262307L: return _T("ERROR_GRAPHICS_MODE_NOT_PINNED"); 
    case 0xC0262308L: return _T("ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET"); 
    case 0xC0262309L: return _T("ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET"); 
    case 0xC026230AL: return _T("ERROR_GRAPHICS_INVALID_FREQUENCY"); 
    case 0xC026230BL: return _T("ERROR_GRAPHICS_INVALID_ACTIVE_REGION"); 
    case 0xC026230CL: return _T("ERROR_GRAPHICS_INVALID_TOTAL_REGION"); 
    case 0xC0262310L: return _T("ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE"); 
    case 0xC0262311L: return _T("ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE"); 
    case 0xC0262312L: return _T("ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET"); 
    case 0xC0262313L: return _T("ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY"); 
    case 0xC0262314L: return _T("ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET"); 
    case 0xC0262315L: return _T("ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET"); 
    case 0xC0262316L: return _T("ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET"); 
    case 0xC0262317L: return _T("ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET"); 
    case 0xC0262318L: return _T("ERROR_GRAPHICS_TARGET_ALREADY_IN_SET"); 
    case 0xC0262319L: return _T("ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH"); 
    case 0xC026231AL: return _T("ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY"); 
    case 0xC026231BL: return _T("ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET"); 
    case 0xC026231CL: return _T("ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE"); 
    case 0xC026231DL: return _T("ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET"); 
    case 0x0026231EL: return _T("ERROR_GRAPHICS_NO_PREFERRED_MODE"); 
    case 0xC026231FL: return _T("ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET"); 
    case 0xC0262320L: return _T("ERROR_GRAPHICS_STALE_MODESET"); 
    case 0xC0262321L: return _T("ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET"); 
    case 0xC0262322L: return _T("ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE"); 
    case 0xC0262323L: return _T("ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN"); 
    case 0xC0262324L: return _T("ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE"); 
    case 0xC0262325L: return _T("ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION"); 
    case 0xC0262326L: return _T("ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES"); 
    case 0xC0262327L: return _T("ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY"); 
    case 0xC0262328L: return _T("ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE"); 
    case 0xC0262329L: return _T("ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET"); 
    case 0xC026232AL: return _T("ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET"); 
    case 0xC026232BL: return _T("ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR"); 
    case 0xC026232CL: return _T("ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET"); 
    case 0xC026232DL: return _T("ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET"); 
    case 0xC026232EL: return _T("ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE"); 
    case 0xC026232FL: return _T("ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE"); 
    case 0xC0262330L: return _T("ERROR_GRAPHICS_RESOURCES_NOT_RELATED"); 
    case 0xC0262331L: return _T("ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE"); 
    case 0xC0262332L: return _T("ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE"); 
    case 0xC0262333L: return _T("ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET"); 
    case 0xC0262334L: return _T("ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER"); 
    case 0xC0262335L: return _T("ERROR_GRAPHICS_NO_VIDPNMGR"); 
    case 0xC0262336L: return _T("ERROR_GRAPHICS_NO_ACTIVE_VIDPN"); 
    case 0xC0262337L: return _T("ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY"); 
    case 0xC0262338L: return _T("ERROR_GRAPHICS_MONITOR_NOT_CONNECTED"); 
    case 0xC0262339L: return _T("ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY"); 
    case 0xC026233AL: return _T("ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE"); 
    case 0xC026233BL: return _T("ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE"); 
    case 0xC026233CL: return _T("ERROR_GRAPHICS_INVALID_STRIDE"); 
    case 0xC026233DL: return _T("ERROR_GRAPHICS_INVALID_PIXELFORMAT"); 
    case 0xC026233EL: return _T("ERROR_GRAPHICS_INVALID_COLORBASIS"); 
    case 0xC026233FL: return _T("ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE"); 
    case 0xC0262340L: return _T("ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY"); 
    case 0xC0262341L: return _T("ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT"); 
    case 0xC0262342L: return _T("ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE"); 
    case 0xC0262343L: return _T("ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN"); 
    case 0xC0262344L: return _T("ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL"); 
    case 0xC0262345L: return _T("ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION"); 
    case 0xC0262346L: return _T("ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED"); 
    case 0xC0262347L: return _T("ERROR_GRAPHICS_INVALID_GAMMA_RAMP"); 
    case 0xC0262348L: return _T("ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED"); 
    case 0xC0262349L: return _T("ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED"); 
    case 0xC026234AL: return _T("ERROR_GRAPHICS_MODE_NOT_IN_MODESET"); 
    case 0x0026234BL: return _T("ERROR_GRAPHICS_DATASET_IS_EMPTY"); 
    case 0x0026234CL: return _T("ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET"); 
    case 0xC026234DL: return _T("ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON"); 
    case 0xC026234EL: return _T("ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE"); 
    case 0xC026234FL: return _T("ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE"); 
    case 0xC0262350L: return _T("ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS"); 
    case 0x00262351L: return _T("ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED"); 
    case 0xC0262352L: return _T("ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING"); 
    case 0xC0262353L: return _T("ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED"); 
    case 0xC0262354L: return _T("ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS"); 
    case 0xC0262355L: return _T("ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT"); 
    case 0xC0262356L: return _T("ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM"); 
    case 0xC0262357L: return _T("ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN"); 
    case 0xC0262358L: return _T("ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT"); 
    case 0xC0262359L: return _T("ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED"); 
    case 0xC026235AL: return _T("ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION"); 
    case 0xC026235BL: return _T("ERROR_GRAPHICS_INVALID_CLIENT_TYPE"); 
    case 0xC026235CL: return _T("ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET"); 
    case 0xC0262400L: return _T("ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED"); 
    case 0xC0262401L: return _T("ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED"); 
    case 0x4026242FL: return _T("ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS"); 
    case 0xC0262430L: return _T("ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER"); 
    case 0xC0262431L: return _T("ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED"); 
    case 0xC0262432L: return _T("ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED"); 
    case 0xC0262433L: return _T("ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY"); 
    case 0xC0262434L: return _T("ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED"); 
    case 0xC0262435L: return _T("ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON"); 
    case 0xC0262436L: return _T("ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE"); 
    case 0x40262437L: return _T("ERROR_GRAPHICS_LEADLINK_START_DEFERRED"); 
    case 0xC0262438L: return _T("ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER"); 
    case 0x40262439L: return _T("ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY"); 
    case 0x4026243AL: return _T("ERROR_GRAPHICS_START_DEFERRED"); 
    case 0xC026243BL: return _T("ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED"); 
    case 0xC0262500L: return _T("ERROR_GRAPHICS_OPM_NOT_SUPPORTED"); 
    case 0xC0262501L: return _T("ERROR_GRAPHICS_COPP_NOT_SUPPORTED"); 
    case 0xC0262502L: return _T("ERROR_GRAPHICS_UAB_NOT_SUPPORTED"); 
    case 0xC0262503L: return _T("ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS"); 
    case 0xC0262505L: return _T("ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST"); 
    case 0xC026250BL: return _T("ERROR_GRAPHICS_OPM_INTERNAL_ERROR"); 
    case 0xC026250CL: return _T("ERROR_GRAPHICS_OPM_INVALID_HANDLE"); 
    case 0xC026250EL: return _T("ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH"); 
    case 0xC026250FL: return _T("ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED"); 
    case 0xC0262510L: return _T("ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED"); 
    case 0xC0262511L: return _T("ERROR_GRAPHICS_PVP_HFS_FAILED"); 
    case 0xC0262512L: return _T("ERROR_GRAPHICS_OPM_INVALID_SRM"); 
    case 0xC0262513L: return _T("ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP"); 
    case 0xC0262514L: return _T("ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP"); 
    case 0xC0262515L: return _T("ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA"); 
    case 0xC0262516L: return _T("ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET"); 
    case 0xC0262517L: return _T("ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH"); 
    case 0xC0262518L: return _T("ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE"); 
    case 0xC026251AL: return _T("ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS"); 
    case 0xC026251BL: return _T("ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS"); 
    case 0xC026251CL: return _T("ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS"); 
    case 0xC026251DL: return _T("ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST"); 
    case 0xC026251EL: return _T("ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR"); 
    case 0xC026251FL: return _T("ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS"); 
    case 0xC0262520L: return _T("ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED"); 
    case 0xC0262521L: return _T("ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST"); 
    case 0xC0262580L: return _T("ERROR_GRAPHICS_I2C_NOT_SUPPORTED"); 
    case 0xC0262581L: return _T("ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST"); 
    case 0xC0262582L: return _T("ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA"); 
    case 0xC0262583L: return _T("ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA"); 
    case 0xC0262584L: return _T("ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED"); 
    case 0xC0262585L: return _T("ERROR_GRAPHICS_DDCCI_INVALID_DATA"); 
    case 0xC0262586L: return _T("ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE"); 
    case 0xC0262587L: return _T("ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING"); 
    case 0xC0262588L: return _T("ERROR_GRAPHICS_MCA_INTERNAL_ERROR"); 
    case 0xC0262589L: return _T("ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND"); 
    case 0xC026258AL: return _T("ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH"); 
    case 0xC026258BL: return _T("ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM"); 
    case 0xC026258CL: return _T("ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE"); 
    case 0xC026258DL: return _T("ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS"); 
    case 0xC02625D8L: return _T("ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE"); 
    case 0xC02625D9L: return _T("ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION"); 
    case 0xC02625DAL: return _T("ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION"); 
    case 0xC02625DBL: return _T("ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH"); 
    case 0xC02625DCL: return _T("ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION"); 
    case 0xC02625DEL: return _T("ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED"); 
    case 0xC02625DFL: return _T("ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE"); 
    case 0xC02625E0L: return _T("ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED"); 
    case 0xC02625E1L: return _T("ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME"); 
    case 0xC02625E2L: return _T("ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP"); 
    case 0xC02625E3L: return _T("ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED"); 
    case 0xC02625E4L: return _T("ERROR_GRAPHICS_INVALID_POINTER"); 
    case 0xC02625E5L: return _T("ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE"); 
    case 0xC02625E6L: return _T("ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL"); 
    case 0xC02625E7L: return _T("ERROR_GRAPHICS_INTERNAL_ERROR"); 
    case 0xC02605E8L: return _T("ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS"); 
    case 0x80280000L: return _T("TPM_E_ERROR_MASK"); 
    case 0x80280001L: return _T("TPM_E_AUTHFAIL"); 
    case 0x80280002L: return _T("TPM_E_BADINDEX"); 
    case 0x80280003L: return _T("TPM_E_BAD_PARAMETER"); 
    case 0x80280004L: return _T("TPM_E_AUDITFAILURE"); 
    case 0x80280005L: return _T("TPM_E_CLEAR_DISABLED"); 
    case 0x80280006L: return _T("TPM_E_DEACTIVATED"); 
    case 0x80280007L: return _T("TPM_E_DISABLED"); 
    case 0x80280008L: return _T("TPM_E_DISABLED_CMD"); 
    case 0x80280009L: return _T("TPM_E_FAIL"); 
    case 0x8028000AL: return _T("TPM_E_BAD_ORDINAL"); 
    case 0x8028000BL: return _T("TPM_E_INSTALL_DISABLED"); 
    case 0x8028000CL: return _T("TPM_E_INVALID_KEYHANDLE"); 
    case 0x8028000DL: return _T("TPM_E_KEYNOTFOUND"); 
    case 0x8028000EL: return _T("TPM_E_INAPPROPRIATE_ENC"); 
    case 0x8028000FL: return _T("TPM_E_MIGRATEFAIL"); 
    case 0x80280010L: return _T("TPM_E_INVALID_PCR_INFO"); 
    case 0x80280011L: return _T("TPM_E_NOSPACE"); 
    case 0x80280012L: return _T("TPM_E_NOSRK"); 
    case 0x80280013L: return _T("TPM_E_NOTSEALED_BLOB"); 
    case 0x80280014L: return _T("TPM_E_OWNER_SET"); 
    case 0x80280015L: return _T("TPM_E_RESOURCES"); 
    case 0x80280016L: return _T("TPM_E_SHORTRANDOM"); 
    case 0x80280017L: return _T("TPM_E_SIZE"); 
    case 0x80280018L: return _T("TPM_E_WRONGPCRVAL"); 
    case 0x80280019L: return _T("TPM_E_BAD_PARAM_SIZE"); 
    case 0x8028001AL: return _T("TPM_E_SHA_THREAD"); 
    case 0x8028001BL: return _T("TPM_E_SHA_ERROR"); 
    case 0x8028001CL: return _T("TPM_E_FAILEDSELFTEST"); 
    case 0x8028001DL: return _T("TPM_E_AUTH2FAIL"); 
    case 0x8028001EL: return _T("TPM_E_BADTAG"); 
    case 0x8028001FL: return _T("TPM_E_IOERROR"); 
    case 0x80280020L: return _T("TPM_E_ENCRYPT_ERROR"); 
    case 0x80280021L: return _T("TPM_E_DECRYPT_ERROR"); 
    case 0x80280022L: return _T("TPM_E_INVALID_AUTHHANDLE"); 
    case 0x80280023L: return _T("TPM_E_NO_ENDORSEMENT"); 
    case 0x80280024L: return _T("TPM_E_INVALID_KEYUSAGE"); 
    case 0x80280025L: return _T("TPM_E_WRONG_ENTITYTYPE"); 
    case 0x80280026L: return _T("TPM_E_INVALID_POSTINIT"); 
    case 0x80280027L: return _T("TPM_E_INAPPROPRIATE_SIG"); 
    case 0x80280028L: return _T("TPM_E_BAD_KEY_PROPERTY"); 
    case 0x80280029L: return _T("TPM_E_BAD_MIGRATION"); 
    case 0x8028002AL: return _T("TPM_E_BAD_SCHEME"); 
    case 0x8028002BL: return _T("TPM_E_BAD_DATASIZE"); 
    case 0x8028002CL: return _T("TPM_E_BAD_MODE"); 
    case 0x8028002DL: return _T("TPM_E_BAD_PRESENCE"); 
    case 0x8028002EL: return _T("TPM_E_BAD_VERSION"); 
    case 0x8028002FL: return _T("TPM_E_NO_WRAP_TRANSPORT"); 
    case 0x80280030L: return _T("TPM_E_AUDITFAIL_UNSUCCESSFUL"); 
    case 0x80280031L: return _T("TPM_E_AUDITFAIL_SUCCESSFUL"); 
    case 0x80280032L: return _T("TPM_E_NOTRESETABLE"); 
    case 0x80280033L: return _T("TPM_E_NOTLOCAL"); 
    case 0x80280034L: return _T("TPM_E_BAD_TYPE"); 
    case 0x80280035L: return _T("TPM_E_INVALID_RESOURCE"); 
    case 0x80280036L: return _T("TPM_E_NOTFIPS"); 
    case 0x80280037L: return _T("TPM_E_INVALID_FAMILY"); 
    case 0x80280038L: return _T("TPM_E_NO_NV_PERMISSION"); 
    case 0x80280039L: return _T("TPM_E_REQUIRES_SIGN"); 
    case 0x8028003AL: return _T("TPM_E_KEY_NOTSUPPORTED"); 
    case 0x8028003BL: return _T("TPM_E_AUTH_CONFLICT"); 
    case 0x8028003CL: return _T("TPM_E_AREA_LOCKED"); 
    case 0x8028003DL: return _T("TPM_E_BAD_LOCALITY"); 
    case 0x8028003EL: return _T("TPM_E_READ_ONLY"); 
    case 0x8028003FL: return _T("TPM_E_PER_NOWRITE"); 
    case 0x80280040L: return _T("TPM_E_FAMILYCOUNT"); 
    case 0x80280041L: return _T("TPM_E_WRITE_LOCKED"); 
    case 0x80280042L: return _T("TPM_E_BAD_ATTRIBUTES"); 
    case 0x80280043L: return _T("TPM_E_INVALID_STRUCTURE"); 
    case 0x80280044L: return _T("TPM_E_KEY_OWNER_CONTROL"); 
    case 0x80280045L: return _T("TPM_E_BAD_COUNTER"); 
    case 0x80280046L: return _T("TPM_E_NOT_FULLWRITE"); 
    case 0x80280047L: return _T("TPM_E_CONTEXT_GAP"); 
    case 0x80280048L: return _T("TPM_E_MAXNVWRITES"); 
    case 0x80280049L: return _T("TPM_E_NOOPERATOR"); 
    case 0x8028004AL: return _T("TPM_E_RESOURCEMISSING"); 
    case 0x8028004BL: return _T("TPM_E_DELEGATE_LOCK"); 
    case 0x8028004CL: return _T("TPM_E_DELEGATE_FAMILY"); 
    case 0x8028004DL: return _T("TPM_E_DELEGATE_ADMIN"); 
    case 0x8028004EL: return _T("TPM_E_TRANSPORT_NOTEXCLUSIVE"); 
    case 0x8028004FL: return _T("TPM_E_OWNER_CONTROL"); 
    case 0x80280050L: return _T("TPM_E_DAA_RESOURCES"); 
    case 0x80280051L: return _T("TPM_E_DAA_INPUT_DATA0"); 
    case 0x80280052L: return _T("TPM_E_DAA_INPUT_DATA1"); 
    case 0x80280053L: return _T("TPM_E_DAA_ISSUER_SETTINGS"); 
    case 0x80280054L: return _T("TPM_E_DAA_TPM_SETTINGS"); 
    case 0x80280055L: return _T("TPM_E_DAA_STAGE"); 
    case 0x80280056L: return _T("TPM_E_DAA_ISSUER_VALIDITY"); 
    case 0x80280057L: return _T("TPM_E_DAA_WRONG_W"); 
    case 0x80280058L: return _T("TPM_E_BAD_HANDLE"); 
    case 0x80280059L: return _T("TPM_E_BAD_DELEGATE"); 
    case 0x8028005AL: return _T("TPM_E_BADCONTEXT"); 
    case 0x8028005BL: return _T("TPM_E_TOOMANYCONTEXTS"); 
    case 0x8028005CL: return _T("TPM_E_MA_TICKET_SIGNATURE"); 
    case 0x8028005DL: return _T("TPM_E_MA_DESTINATION"); 
    case 0x8028005EL: return _T("TPM_E_MA_SOURCE"); 
    case 0x8028005FL: return _T("TPM_E_MA_AUTHORITY"); 
    case 0x80280061L: return _T("TPM_E_PERMANENTEK"); 
    case 0x80280062L: return _T("TPM_E_BAD_SIGNATURE"); 
    case 0x80280063L: return _T("TPM_E_NOCONTEXTSPACE"); 
    case 0x80280400L: return _T("TPM_E_COMMAND_BLOCKED"); 
    case 0x80280401L: return _T("TPM_E_INVALID_HANDLE"); 
    case 0x80280402L: return _T("TPM_E_DUPLICATE_VHANDLE"); 
    case 0x80280403L: return _T("TPM_E_EMBEDDED_COMMAND_BLOCKED"); 
    case 0x80280404L: return _T("TPM_E_EMBEDDED_COMMAND_UNSUPPORTED"); 
    case 0x80280800L: return _T("TPM_E_RETRY"); 
    case 0x80280801L: return _T("TPM_E_NEEDS_SELFTEST"); 
    case 0x80280802L: return _T("TPM_E_DOING_SELFTEST"); 
    case 0x80280803L: return _T("TPM_E_DEFEND_LOCK_RUNNING"); 
    case 0x80284001L: return _T("TBS_E_INTERNAL_ERROR"); 
    case 0x80284002L: return _T("TBS_E_BAD_PARAMETER"); 
    case 0x80284003L: return _T("TBS_E_INVALID_OUTPUT_POINTER"); 
    case 0x80284004L: return _T("TBS_E_INVALID_CONTEXT"); 
    case 0x80284005L: return _T("TBS_E_INSUFFICIENT_BUFFER"); 
    case 0x80284006L: return _T("TBS_E_IOERROR"); 
    case 0x80284007L: return _T("TBS_E_INVALID_CONTEXT_PARAM"); 
    case 0x80284008L: return _T("TBS_E_SERVICE_NOT_RUNNING"); 
    case 0x80284009L: return _T("TBS_E_TOO_MANY_TBS_CONTEXTS"); 
    case 0x8028400AL: return _T("TBS_E_TOO_MANY_RESOURCES"); 
    case 0x8028400BL: return _T("TBS_E_SERVICE_START_PENDING"); 
    case 0x8028400CL: return _T("TBS_E_PPI_NOT_SUPPORTED"); 
    case 0x8028400DL: return _T("TBS_E_COMMAND_CANCELED"); 
    case 0x8028400EL: return _T("TBS_E_BUFFER_TOO_LARGE"); 
    case 0x8028400FL: return _T("TBS_E_TPM_NOT_FOUND"); 
    case 0x80284010L: return _T("TBS_E_SERVICE_DISABLED"); 
    case 0x80284011L: return _T("TBS_E_NO_EVENT_LOG"); 
    case 0x80290100L: return _T("TPMAPI_E_INVALID_STATE"); 
    case 0x80290101L: return _T("TPMAPI_E_NOT_ENOUGH_DATA"); 
    case 0x80290102L: return _T("TPMAPI_E_TOO_MUCH_DATA"); 
    case 0x80290103L: return _T("TPMAPI_E_INVALID_OUTPUT_POINTER"); 
    case 0x80290104L: return _T("TPMAPI_E_INVALID_PARAMETER"); 
    case 0x80290105L: return _T("TPMAPI_E_OUT_OF_MEMORY"); 
    case 0x80290106L: return _T("TPMAPI_E_BUFFER_TOO_SMALL"); 
    case 0x80290107L: return _T("TPMAPI_E_INTERNAL_ERROR"); 
    case 0x80290108L: return _T("TPMAPI_E_ACCESS_DENIED"); 
    case 0x80290109L: return _T("TPMAPI_E_AUTHORIZATION_FAILED"); 
    case 0x8029010AL: return _T("TPMAPI_E_INVALID_CONTEXT_HANDLE"); 
    case 0x8029010BL: return _T("TPMAPI_E_TBS_COMMUNICATION_ERROR"); 
    case 0x8029010CL: return _T("TPMAPI_E_TPM_COMMAND_ERROR"); 
    case 0x8029010DL: return _T("TPMAPI_E_MESSAGE_TOO_LARGE"); 
    case 0x8029010EL: return _T("TPMAPI_E_INVALID_ENCODING"); 
    case 0x8029010FL: return _T("TPMAPI_E_INVALID_KEY_SIZE"); 
    case 0x80290110L: return _T("TPMAPI_E_ENCRYPTION_FAILED"); 
    case 0x80290111L: return _T("TPMAPI_E_INVALID_KEY_PARAMS"); 
    case 0x80290112L: return _T("TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB"); 
    case 0x80290113L: return _T("TPMAPI_E_INVALID_PCR_INDEX"); 
    case 0x80290114L: return _T("TPMAPI_E_INVALID_DELEGATE_BLOB"); 
    case 0x80290115L: return _T("TPMAPI_E_INVALID_CONTEXT_PARAMS"); 
    case 0x80290116L: return _T("TPMAPI_E_INVALID_KEY_BLOB"); 
    case 0x80290117L: return _T("TPMAPI_E_INVALID_PCR_DATA"); 
    case 0x80290118L: return _T("TPMAPI_E_INVALID_OWNER_AUTH"); 
    case 0x80290119L: return _T("TPMAPI_E_FIPS_RNG_CHECK_FAILED"); 
    case 0x8029011AL: return _T("TPMAPI_E_EMPTY_TCG_LOG"); 
    case 0x8029011BL: return _T("TPMAPI_E_INVALID_TCG_LOG_ENTRY"); 
    case 0x8029011CL: return _T("TPMAPI_E_TCG_SEPARATOR_ABSENT"); 
    case 0x8029011DL: return _T("TPMAPI_E_TCG_INVALID_DIGEST_ENTRY"); 
    case 0x80290200L: return _T("TBSIMP_E_BUFFER_TOO_SMALL"); 
    case 0x80290201L: return _T("TBSIMP_E_CLEANUP_FAILED"); 
    case 0x80290202L: return _T("TBSIMP_E_INVALID_CONTEXT_HANDLE"); 
    case 0x80290203L: return _T("TBSIMP_E_INVALID_CONTEXT_PARAM"); 
    case 0x80290204L: return _T("TBSIMP_E_TPM_ERROR"); 
    case 0x80290205L: return _T("TBSIMP_E_HASH_BAD_KEY"); 
    case 0x80290206L: return _T("TBSIMP_E_DUPLICATE_VHANDLE"); 
    case 0x80290207L: return _T("TBSIMP_E_INVALID_OUTPUT_POINTER"); 
    case 0x80290208L: return _T("TBSIMP_E_INVALID_PARAMETER"); 
    case 0x80290209L: return _T("TBSIMP_E_RPC_INIT_FAILED"); 
    case 0x8029020AL: return _T("TBSIMP_E_SCHEDULER_NOT_RUNNING"); 
    case 0x8029020BL: return _T("TBSIMP_E_COMMAND_CANCELED"); 
    case 0x8029020CL: return _T("TBSIMP_E_OUT_OF_MEMORY"); 
    case 0x8029020DL: return _T("TBSIMP_E_LIST_NO_MORE_ITEMS"); 
    case 0x8029020EL: return _T("TBSIMP_E_LIST_NOT_FOUND"); 
    case 0x8029020FL: return _T("TBSIMP_E_NOT_ENOUGH_SPACE"); 
    case 0x80290210L: return _T("TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS"); 
    case 0x80290211L: return _T("TBSIMP_E_COMMAND_FAILED"); 
    case 0x80290212L: return _T("TBSIMP_E_UNKNOWN_ORDINAL"); 
    case 0x80290213L: return _T("TBSIMP_E_RESOURCE_EXPIRED"); 
    case 0x80290214L: return _T("TBSIMP_E_INVALID_RESOURCE"); 
    case 0x80290215L: return _T("TBSIMP_E_NOTHING_TO_UNLOAD"); 
    case 0x80290216L: return _T("TBSIMP_E_HASH_TABLE_FULL"); 
    case 0x80290217L: return _T("TBSIMP_E_TOO_MANY_TBS_CONTEXTS"); 
    case 0x80290218L: return _T("TBSIMP_E_TOO_MANY_RESOURCES"); 
    case 0x80290219L: return _T("TBSIMP_E_PPI_NOT_SUPPORTED"); 
    case 0x8029021AL: return _T("TBSIMP_E_TPM_INCOMPATIBLE"); 
    case 0x8029021BL: return _T("TBSIMP_E_NO_EVENT_LOG"); 
    case 0x80290300L: return _T("TPM_E_PPI_ACPI_FAILURE"); 
    case 0x80290301L: return _T("TPM_E_PPI_USER_ABORT"); 
    case 0x80290302L: return _T("TPM_E_PPI_BIOS_FAILURE"); 
    case 0x80290303L: return _T("TPM_E_PPI_NOT_SUPPORTED"); 
    case 0x80300002L: return _T("PLA_E_DCS_NOT_FOUND"); 
    case 0x803000AAL: return _T("PLA_E_DCS_IN_USE"); 
    case 0x80300045L: return _T("PLA_E_TOO_MANY_FOLDERS"); 
    case 0x80300070L: return _T("PLA_E_NO_MIN_DISK"); 
    case 0x803000B7L: return _T("PLA_E_DCS_ALREADY_EXISTS"); 
    case 0x00300100L: return _T("PLA_S_PROPERTY_IGNORED"); 
    case 0x80300101L: return _T("PLA_E_PROPERTY_CONFLICT"); 
    case 0x80300102L: return _T("PLA_E_DCS_SINGLETON_REQUIRED"); 
    case 0x80300103L: return _T("PLA_E_CREDENTIALS_REQUIRED"); 
    case 0x80300104L: return _T("PLA_E_DCS_NOT_RUNNING"); 
    case 0x80300105L: return _T("PLA_E_CONFLICT_INCL_EXCL_API"); 
    case 0x80300106L: return _T("PLA_E_NETWORK_EXE_NOT_VALID"); 
    case 0x80300107L: return _T("PLA_E_EXE_ALREADY_CONFIGURED"); 
    case 0x80300108L: return _T("PLA_E_EXE_PATH_NOT_VALID"); 
    case 0x80300109L: return _T("PLA_E_DC_ALREADY_EXISTS"); 
    case 0x8030010AL: return _T("PLA_E_DCS_START_WAIT_TIMEOUT"); 
    case 0x8030010BL: return _T("PLA_E_DC_START_WAIT_TIMEOUT"); 
    case 0x8030010CL: return _T("PLA_E_REPORT_WAIT_TIMEOUT"); 
    case 0x8030010DL: return _T("PLA_E_NO_DUPLICATES"); 
    case 0x8030010EL: return _T("PLA_E_EXE_FULL_PATH_REQUIRED"); 
    case 0x8030010FL: return _T("PLA_E_INVALID_SESSION_NAME"); 
    case 0x80300110L: return _T("PLA_E_PLA_CHANNEL_NOT_ENABLED"); 
    case 0x80300111L: return _T("PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED"); 
    case 0x80300112L: return _T("PLA_E_RULES_MANAGER_FAILED"); 
    case 0x80300113L: return _T("PLA_E_CABAPI_FAILURE"); 
    case 0x80310000L: return _T("FVE_E_LOCKED_VOLUME"); 
    case 0x80310001L: return _T("FVE_E_NOT_ENCRYPTED"); 
    case 0x80310002L: return _T("FVE_E_NO_TPM_BIOS"); 
    case 0x80310003L: return _T("FVE_E_NO_MBR_METRIC"); 
    case 0x80310004L: return _T("FVE_E_NO_BOOTSECTOR_METRIC"); 
    case 0x80310005L: return _T("FVE_E_NO_BOOTMGR_METRIC"); 
    case 0x80310006L: return _T("FVE_E_WRONG_BOOTMGR"); 
    case 0x80310007L: return _T("FVE_E_SECURE_KEY_REQUIRED"); 
    case 0x80310008L: return _T("FVE_E_NOT_ACTIVATED"); 
    case 0x80310009L: return _T("FVE_E_ACTION_NOT_ALLOWED"); 
    case 0x8031000AL: return _T("FVE_E_AD_SCHEMA_NOT_INSTALLED"); 
    case 0x8031000BL: return _T("FVE_E_AD_INVALID_DATATYPE"); 
    case 0x8031000CL: return _T("FVE_E_AD_INVALID_DATASIZE"); 
    case 0x8031000DL: return _T("FVE_E_AD_NO_VALUES"); 
    case 0x8031000EL: return _T("FVE_E_AD_ATTR_NOT_SET"); 
    case 0x8031000FL: return _T("FVE_E_AD_GUID_NOT_FOUND"); 
    case 0x80310010L: return _T("FVE_E_BAD_INFORMATION"); 
    case 0x80310011L: return _T("FVE_E_TOO_SMALL"); 
    case 0x80310012L: return _T("FVE_E_SYSTEM_VOLUME"); 
    case 0x80310013L: return _T("FVE_E_FAILED_WRONG_FS"); 
    case 0x80310014L: return _T("FVE_E_BAD_PARTITION_SIZE"); 
    case 0x80310015L: return _T("FVE_E_NOT_SUPPORTED"); 
    case 0x80310016L: return _T("FVE_E_BAD_DATA"); 
    case 0x80310017L: return _T("FVE_E_VOLUME_NOT_BOUND"); 
    case 0x80310018L: return _T("FVE_E_TPM_NOT_OWNED"); 
    case 0x80310019L: return _T("FVE_E_NOT_DATA_VOLUME"); 
    case 0x8031001AL: return _T("FVE_E_AD_INSUFFICIENT_BUFFER"); 
    case 0x8031001BL: return _T("FVE_E_CONV_READ"); 
    case 0x8031001CL: return _T("FVE_E_CONV_WRITE"); 
    case 0x8031001DL: return _T("FVE_E_KEY_REQUIRED"); 
    case 0x8031001EL: return _T("FVE_E_CLUSTERING_NOT_SUPPORTED"); 
    case 0x8031001FL: return _T("FVE_E_VOLUME_BOUND_ALREADY"); 
    case 0x80310020L: return _T("FVE_E_OS_NOT_PROTECTED"); 
    case 0x80310021L: return _T("FVE_E_PROTECTION_DISABLED"); 
    case 0x80310022L: return _T("FVE_E_RECOVERY_KEY_REQUIRED"); 
    case 0x80310023L: return _T("FVE_E_FOREIGN_VOLUME"); 
    case 0x80310024L: return _T("FVE_E_OVERLAPPED_UPDATE"); 
    case 0x80310025L: return _T("FVE_E_TPM_SRK_AUTH_NOT_ZERO"); 
    case 0x80310026L: return _T("FVE_E_FAILED_SECTOR_SIZE"); 
    case 0x80310027L: return _T("FVE_E_FAILED_AUTHENTICATION"); 
    case 0x80310028L: return _T("FVE_E_NOT_OS_VOLUME"); 
    case 0x80310029L: return _T("FVE_E_AUTOUNLOCK_ENABLED"); 
    case 0x8031002AL: return _T("FVE_E_WRONG_BOOTSECTOR"); 
    case 0x8031002BL: return _T("FVE_E_WRONG_SYSTEM_FS"); 
    case 0x8031002CL: return _T("FVE_E_POLICY_PASSWORD_REQUIRED"); 
    case 0x8031002DL: return _T("FVE_E_CANNOT_SET_FVEK_ENCRYPTED"); 
    case 0x8031002EL: return _T("FVE_E_CANNOT_ENCRYPT_NO_KEY"); 
    case 0x80310030L: return _T("FVE_E_BOOTABLE_CDDVD"); 
    case 0x80310031L: return _T("FVE_E_PROTECTOR_EXISTS"); 
    case 0x80310032L: return _T("FVE_E_RELATIVE_PATH"); 
    case 0x80310033L: return _T("FVE_E_PROTECTOR_NOT_FOUND"); 
    case 0x80310034L: return _T("FVE_E_INVALID_KEY_FORMAT"); 
    case 0x80310035L: return _T("FVE_E_INVALID_PASSWORD_FORMAT"); 
    case 0x80310036L: return _T("FVE_E_FIPS_RNG_CHECK_FAILED"); 
    case 0x80310037L: return _T("FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD"); 
    case 0x80310038L: return _T("FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT"); 
    case 0x80310039L: return _T("FVE_E_NOT_DECRYPTED"); 
    case 0x8031003AL: return _T("FVE_E_INVALID_PROTECTOR_TYPE"); 
    case 0x8031003BL: return _T("FVE_E_NO_PROTECTORS_TO_TEST"); 
    case 0x8031003CL: return _T("FVE_E_KEYFILE_NOT_FOUND"); 
    case 0x8031003DL: return _T("FVE_E_KEYFILE_INVALID"); 
    case 0x8031003EL: return _T("FVE_E_KEYFILE_NO_VMK"); 
    case 0x8031003FL: return _T("FVE_E_TPM_DISABLED"); 
    case 0x80310040L: return _T("FVE_E_NOT_ALLOWED_IN_SAFE_MODE"); 
    case 0x80310041L: return _T("FVE_E_TPM_INVALID_PCR"); 
    case 0x80310042L: return _T("FVE_E_TPM_NO_VMK"); 
    case 0x80310043L: return _T("FVE_E_PIN_INVALID"); 
    case 0x80310044L: return _T("FVE_E_AUTH_INVALID_APPLICATION"); 
    case 0x80310045L: return _T("FVE_E_AUTH_INVALID_CONFIG"); 
    case 0x80310046L: return _T("FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED"); 
    case 0x80310047L: return _T("FVE_E_FS_NOT_EXTENDED"); 
    case 0x80310048L: return _T("FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED"); 
    case 0x80310049L: return _T("FVE_E_NO_LICENSE"); 
    case 0x8031004AL: return _T("FVE_E_NOT_ON_STACK"); 
    case 0x8031004BL: return _T("FVE_E_FS_MOUNTED"); 
    case 0x8031004CL: return _T("FVE_E_TOKEN_NOT_IMPERSONATED"); 
    case 0x8031004DL: return _T("FVE_E_DRY_RUN_FAILED"); 
    case 0x8031004EL: return _T("FVE_E_REBOOT_REQUIRED"); 
    case 0x8031004FL: return _T("FVE_E_DEBUGGER_ENABLED"); 
    case 0x80310050L: return _T("FVE_E_RAW_ACCESS"); 
    case 0x80310051L: return _T("FVE_E_RAW_BLOCKED"); 
    case 0x80310052L: return _T("FVE_E_BCD_APPLICATIONS_PATH_INCORRECT"); 
    case 0x80310053L: return _T("FVE_E_NOT_ALLOWED_IN_VERSION"); 
    case 0x80310054L: return _T("FVE_E_NO_AUTOUNLOCK_MASTER_KEY"); 
    case 0x80310055L: return _T("FVE_E_MOR_FAILED"); 
    case 0x80310056L: return _T("FVE_E_HIDDEN_VOLUME"); 
    case 0x80310057L: return _T("FVE_E_TRANSIENT_STATE"); 
    case 0x80310058L: return _T("FVE_E_PUBKEY_NOT_ALLOWED"); 
    case 0x80310059L: return _T("FVE_E_VOLUME_HANDLE_OPEN"); 
    case 0x8031005AL: return _T("FVE_E_NO_FEATURE_LICENSE"); 
    case 0x8031005BL: return _T("FVE_E_INVALID_STARTUP_OPTIONS"); 
    case 0x8031005CL: return _T("FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED"); 
    case 0x8031005DL: return _T("FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED"); 
    case 0x8031005EL: return _T("FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED"); 
    case 0x8031005FL: return _T("FVE_E_POLICY_RECOVERY_KEY_REQUIRED"); 
    case 0x80310060L: return _T("FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED"); 
    case 0x80310061L: return _T("FVE_E_POLICY_STARTUP_PIN_REQUIRED"); 
    case 0x80310062L: return _T("FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED"); 
    case 0x80310063L: return _T("FVE_E_POLICY_STARTUP_KEY_REQUIRED"); 
    case 0x80310064L: return _T("FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED"); 
    case 0x80310065L: return _T("FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED"); 
    case 0x80310066L: return _T("FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED"); 
    case 0x80310067L: return _T("FVE_E_POLICY_STARTUP_TPM_REQUIRED"); 
    case 0x80310068L: return _T("FVE_E_POLICY_INVALID_PIN_LENGTH"); 
    case 0x80310069L: return _T("FVE_E_KEY_PROTECTOR_NOT_SUPPORTED"); 
    case 0x8031006AL: return _T("FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED"); 
    case 0x8031006BL: return _T("FVE_E_POLICY_PASSPHRASE_REQUIRED"); 
    case 0x8031006CL: return _T("FVE_E_FIPS_PREVENTS_PASSPHRASE"); 
    case 0x8031006DL: return _T("FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED"); 
    case 0x8031006EL: return _T("FVE_E_INVALID_BITLOCKER_OID"); 
    case 0x8031006FL: return _T("FVE_E_VOLUME_TOO_SMALL"); 
    case 0x80310070L: return _T("FVE_E_DV_NOT_SUPPORTED_ON_FS"); 
    case 0x80310071L: return _T("FVE_E_DV_NOT_ALLOWED_BY_GP"); 
    case 0x80310072L: return _T("FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED"); 
    case 0x80310073L: return _T("FVE_E_POLICY_USER_CERTIFICATE_REQUIRED"); 
    case 0x80310074L: return _T("FVE_E_POLICY_USER_CERT_MUST_BE_HW"); 
    case 0x80310075L: return _T("FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED"); 
    case 0x80310076L: return _T("FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED"); 
    case 0x80310077L: return _T("FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED"); 
    case 0x80310078L: return _T("FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED"); 
    case 0x80310079L: return _T("FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED"); 
    case 0x80310080L: return _T("FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH"); 
    case 0x80310081L: return _T("FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE"); 
    case 0x80310082L: return _T("FVE_E_RECOVERY_PARTITION"); 
    case 0x80310083L: return _T("FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON"); 
    case 0x80310084L: return _T("FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON"); 
    case 0x80310085L: return _T("FVE_E_NON_BITLOCKER_OID"); 
    case 0x80310086L: return _T("FVE_E_POLICY_PROHIBITS_SELFSIGNED"); 
    case 0x80310087L: return _T("FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED"); 
    case 0x80310088L: return _T("FVE_E_CONV_RECOVERY_FAILED"); 
    case 0x80310089L: return _T("FVE_E_VIRTUALIZED_SPACE_TOO_BIG"); 
    case 0x80310090L: return _T("FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON"); 
    case 0x80310091L: return _T("FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON"); 
    case 0x80310092L: return _T("FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON"); 
    case 0x80310093L: return _T("FVE_E_NON_BITLOCKER_KU"); 
    case 0x80310094L: return _T("FVE_E_PRIVATEKEY_AUTH_FAILED"); 
    case 0x80310095L: return _T("FVE_E_REMOVAL_OF_DRA_FAILED"); 
    case 0x80310096L: return _T("FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME"); 
    case 0x80310097L: return _T("FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME"); 
    case 0x80310098L: return _T("FVE_E_FIPS_HASH_KDF_NOT_ALLOWED"); 
    case 0x80310099L: return _T("FVE_E_ENH_PIN_INVALID"); 
    case 0x8031009AL: return _T("FVE_E_INVALID_PIN_CHARS"); 
    case 0x8031009BL: return _T("FVE_E_INVALID_DATUM_TYPE"); 
    case 0x80320001L: return _T("FWP_E_CALLOUT_NOT_FOUND"); 
    case 0x80320002L: return _T("FWP_E_CONDITION_NOT_FOUND"); 
    case 0x80320003L: return _T("FWP_E_FILTER_NOT_FOUND"); 
    case 0x80320004L: return _T("FWP_E_LAYER_NOT_FOUND"); 
    case 0x80320005L: return _T("FWP_E_PROVIDER_NOT_FOUND"); 
    case 0x80320006L: return _T("FWP_E_PROVIDER_CONTEXT_NOT_FOUND"); 
    case 0x80320007L: return _T("FWP_E_SUBLAYER_NOT_FOUND"); 
    case 0x80320008L: return _T("FWP_E_NOT_FOUND"); 
    case 0x80320009L: return _T("FWP_E_ALREADY_EXISTS"); 
    case 0x8032000AL: return _T("FWP_E_IN_USE"); 
    case 0x8032000BL: return _T("FWP_E_DYNAMIC_SESSION_IN_PROGRESS"); 
    case 0x8032000CL: return _T("FWP_E_WRONG_SESSION"); 
    case 0x8032000DL: return _T("FWP_E_NO_TXN_IN_PROGRESS"); 
    case 0x8032000EL: return _T("FWP_E_TXN_IN_PROGRESS"); 
    case 0x8032000FL: return _T("FWP_E_TXN_ABORTED"); 
    case 0x80320010L: return _T("FWP_E_SESSION_ABORTED"); 
    case 0x80320011L: return _T("FWP_E_INCOMPATIBLE_TXN"); 
    case 0x80320012L: return _T("FWP_E_TIMEOUT"); 
    case 0x80320013L: return _T("FWP_E_NET_EVENTS_DISABLED"); 
    case 0x80320014L: return _T("FWP_E_INCOMPATIBLE_LAYER"); 
    case 0x80320015L: return _T("FWP_E_KM_CLIENTS_ONLY"); 
    case 0x80320016L: return _T("FWP_E_LIFETIME_MISMATCH"); 
    case 0x80320017L: return _T("FWP_E_BUILTIN_OBJECT"); 
    case 0x80320018L: return _T("FWP_E_TOO_MANY_CALLOUTS"); 
    case 0x80320019L: return _T("FWP_E_NOTIFICATION_DROPPED"); 
    case 0x8032001AL: return _T("FWP_E_TRAFFIC_MISMATCH"); 
    case 0x8032001BL: return _T("FWP_E_INCOMPATIBLE_SA_STATE"); 
    case 0x8032001CL: return _T("FWP_E_NULL_POINTER"); 
    case 0x8032001DL: return _T("FWP_E_INVALID_ENUMERATOR"); 
    case 0x8032001EL: return _T("FWP_E_INVALID_FLAGS"); 
    case 0x8032001FL: return _T("FWP_E_INVALID_NET_MASK"); 
    case 0x80320020L: return _T("FWP_E_INVALID_RANGE"); 
    case 0x80320021L: return _T("FWP_E_INVALID_INTERVAL"); 
    case 0x80320022L: return _T("FWP_E_ZERO_LENGTH_ARRAY"); 
    case 0x80320023L: return _T("FWP_E_NULL_DISPLAY_NAME"); 
    case 0x80320024L: return _T("FWP_E_INVALID_ACTION_TYPE"); 
    case 0x80320025L: return _T("FWP_E_INVALID_WEIGHT"); 
    case 0x80320026L: return _T("FWP_E_MATCH_TYPE_MISMATCH"); 
    case 0x80320027L: return _T("FWP_E_TYPE_MISMATCH"); 
    case 0x80320028L: return _T("FWP_E_OUT_OF_BOUNDS"); 
    case 0x80320029L: return _T("FWP_E_RESERVED"); 
    case 0x8032002AL: return _T("FWP_E_DUPLICATE_CONDITION"); 
    case 0x8032002BL: return _T("FWP_E_DUPLICATE_KEYMOD"); 
    case 0x8032002CL: return _T("FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER"); 
    case 0x8032002DL: return _T("FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER"); 
    case 0x8032002EL: return _T("FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER"); 
    case 0x8032002FL: return _T("FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT"); 
    case 0x80320030L: return _T("FWP_E_INCOMPATIBLE_AUTH_METHOD"); 
    case 0x80320031L: return _T("FWP_E_INCOMPATIBLE_DH_GROUP"); 
    case 0x80320032L: return _T("FWP_E_EM_NOT_SUPPORTED"); 
    case 0x80320033L: return _T("FWP_E_NEVER_MATCH"); 
    case 0x80320034L: return _T("FWP_E_PROVIDER_CONTEXT_MISMATCH"); 
    case 0x80320035L: return _T("FWP_E_INVALID_PARAMETER"); 
    case 0x80320036L: return _T("FWP_E_TOO_MANY_SUBLAYERS"); 
    case 0x80320037L: return _T("FWP_E_CALLOUT_NOTIFICATION_FAILED"); 
    case 0x80320038L: return _T("FWP_E_INVALID_AUTH_TRANSFORM"); 
    case 0x80320039L: return _T("FWP_E_INVALID_CIPHER_TRANSFORM"); 
    case 0x80320104L: return _T("FWP_E_DROP_NOICMP"); 
    case 0x8032003AL: return _T("FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM"); 
    case 0x8032003BL: return _T("FWP_E_INVALID_TRANSFORM_COMBINATION"); 
    case 0x8032003CL: return _T("FWP_E_DUPLICATE_AUTH_METHOD"); 
    case 0x003D0000L: return _T("WS_S_ASYNC"); 
    case 0x003D0001L: return _T("WS_S_END"); 
    case 0x803D0000L: return _T("WS_E_INVALID_FORMAT"); 
    case 0x803D0001L: return _T("WS_E_OBJECT_FAULTED"); 
    case 0x803D0002L: return _T("WS_E_NUMERIC_OVERFLOW"); 
    case 0x803D0003L: return _T("WS_E_INVALID_OPERATION"); 
    case 0x803D0004L: return _T("WS_E_OPERATION_ABORTED"); 
    case 0x803D0005L: return _T("WS_E_ENDPOINT_ACCESS_DENIED"); 
    case 0x803D0006L: return _T("WS_E_OPERATION_TIMED_OUT"); 
    case 0x803D0007L: return _T("WS_E_OPERATION_ABANDONED"); 
    case 0x803D0008L: return _T("WS_E_QUOTA_EXCEEDED"); 
    case 0x803D0009L: return _T("WS_E_NO_TRANSLATION_AVAILABLE"); 
    case 0x803D000AL: return _T("WS_E_SECURITY_VERIFICATION_FAILURE"); 
    case 0x803D000BL: return _T("WS_E_ADDRESS_IN_USE"); 
    case 0x803D000CL: return _T("WS_E_ADDRESS_NOT_AVAILABLE"); 
    case 0x803D000DL: return _T("WS_E_ENDPOINT_NOT_FOUND"); 
    case 0x803D000EL: return _T("WS_E_ENDPOINT_NOT_AVAILABLE"); 
    case 0x803D000FL: return _T("WS_E_ENDPOINT_FAILURE"); 
    case 0x803D0010L: return _T("WS_E_ENDPOINT_UNREACHABLE"); 
    case 0x803D0011L: return _T("WS_E_ENDPOINT_ACTION_NOT_SUPPORTED"); 
    case 0x803D0012L: return _T("WS_E_ENDPOINT_TOO_BUSY"); 
    case 0x803D0013L: return _T("WS_E_ENDPOINT_FAULT_RECEIVED"); 
    case 0x803D0014L: return _T("WS_E_ENDPOINT_DISCONNECTED"); 
    case 0x803D0015L: return _T("WS_E_PROXY_FAILURE"); 
    case 0x803D0016L: return _T("WS_E_PROXY_ACCESS_DENIED"); 
    case 0x803D0017L: return _T("WS_E_NOT_SUPPORTED"); 
    case 0x803D0018L: return _T("WS_E_PROXY_REQUIRES_BASIC_AUTH"); 
    case 0x803D0019L: return _T("WS_E_PROXY_REQUIRES_DIGEST_AUTH"); 
    case 0x803D001AL: return _T("WS_E_PROXY_REQUIRES_NTLM_AUTH"); 
    case 0x803D001BL: return _T("WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH"); 
    case 0x803D001CL: return _T("WS_E_SERVER_REQUIRES_BASIC_AUTH"); 
    case 0x803D001DL: return _T("WS_E_SERVER_REQUIRES_DIGEST_AUTH"); 
    case 0x803D001EL: return _T("WS_E_SERVER_REQUIRES_NTLM_AUTH"); 
    case 0x803D001FL: return _T("WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH"); 
    case 0x803D0020L: return _T("WS_E_INVALID_ENDPOINT_URL"); 
    case 0x803D0021L: return _T("WS_E_OTHER"); 
    case 0x803D0022L: return _T("WS_E_SECURITY_TOKEN_EXPIRED"); 
    case 0x803D0023L: return _T("WS_E_SECURITY_SYSTEM_FAILURE"); 
    case 0x80340002L: return _T("ERROR_NDIS_INTERFACE_CLOSING"); 
    case 0x80340004L: return _T("ERROR_NDIS_BAD_VERSION"); 
    case 0x80340005L: return _T("ERROR_NDIS_BAD_CHARACTERISTICS"); 
    case 0x80340006L: return _T("ERROR_NDIS_ADAPTER_NOT_FOUND"); 
    case 0x80340007L: return _T("ERROR_NDIS_OPEN_FAILED"); 
    case 0x80340008L: return _T("ERROR_NDIS_DEVICE_FAILED"); 
    case 0x80340009L: return _T("ERROR_NDIS_MULTICAST_FULL"); 
    case 0x8034000AL: return _T("ERROR_NDIS_MULTICAST_EXISTS"); 
    case 0x8034000BL: return _T("ERROR_NDIS_MULTICAST_NOT_FOUND"); 
    case 0x8034000CL: return _T("ERROR_NDIS_REQUEST_ABORTED"); 
    case 0x8034000DL: return _T("ERROR_NDIS_RESET_IN_PROGRESS"); 
    case 0x803400BBL: return _T("ERROR_NDIS_NOT_SUPPORTED"); 
    case 0x8034000FL: return _T("ERROR_NDIS_INVALID_PACKET"); 
    case 0x80340011L: return _T("ERROR_NDIS_ADAPTER_NOT_READY"); 
    case 0x80340014L: return _T("ERROR_NDIS_INVALID_LENGTH"); 
    case 0x80340015L: return _T("ERROR_NDIS_INVALID_DATA"); 
    case 0x80340016L: return _T("ERROR_NDIS_BUFFER_TOO_SHORT"); 
    case 0x80340017L: return _T("ERROR_NDIS_INVALID_OID"); 
    case 0x80340018L: return _T("ERROR_NDIS_ADAPTER_REMOVED"); 
    case 0x80340019L: return _T("ERROR_NDIS_UNSUPPORTED_MEDIA"); 
    case 0x8034001AL: return _T("ERROR_NDIS_GROUP_ADDRESS_IN_USE"); 
    case 0x8034001BL: return _T("ERROR_NDIS_FILE_NOT_FOUND"); 
    case 0x8034001CL: return _T("ERROR_NDIS_ERROR_READING_FILE"); 
    case 0x8034001DL: return _T("ERROR_NDIS_ALREADY_MAPPED"); 
    case 0x8034001EL: return _T("ERROR_NDIS_RESOURCE_CONFLICT"); 
    case 0x8034001FL: return _T("ERROR_NDIS_MEDIA_DISCONNECTED"); 
    case 0x80340022L: return _T("ERROR_NDIS_INVALID_ADDRESS"); 
    case 0x80340010L: return _T("ERROR_NDIS_INVALID_DEVICE_REQUEST"); 
    case 0x8034002AL: return _T("ERROR_NDIS_PAUSED"); 
    case 0x8034002BL: return _T("ERROR_NDIS_INTERFACE_NOT_FOUND"); 
    case 0x8034002CL: return _T("ERROR_NDIS_UNSUPPORTED_REVISION"); 
    case 0x8034002DL: return _T("ERROR_NDIS_INVALID_PORT"); 
    case 0x8034002EL: return _T("ERROR_NDIS_INVALID_PORT_STATE"); 
    case 0x8034002FL: return _T("ERROR_NDIS_LOW_POWER_STATE"); 
    case 0x80342000L: return _T("ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED"); 
    case 0x80342001L: return _T("ERROR_NDIS_DOT11_MEDIA_IN_USE"); 
    case 0x80342002L: return _T("ERROR_NDIS_DOT11_POWER_STATE_INVALID"); 
    case 0x80342003L: return _T("ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL"); 
    case 0x80342004L: return _T("ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL"); 
    case 0x00340001L: return _T("ERROR_NDIS_INDICATION_REQUIRED"); 
    case 0xC034100FL: return _T("ERROR_NDIS_OFFLOAD_POLICY"); 
    case 0xC0341012L: return _T("ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED"); 
    case 0xC0341013L: return _T("ERROR_NDIS_OFFLOAD_PATH_REJECTED"); 
    case 0xC0350002L: return _T("ERROR_HV_INVALID_HYPERCALL_CODE"); 
    case 0xC0350003L: return _T("ERROR_HV_INVALID_HYPERCALL_INPUT"); 
    case 0xC0350004L: return _T("ERROR_HV_INVALID_ALIGNMENT"); 
    case 0xC0350005L: return _T("ERROR_HV_INVALID_PARAMETER"); 
    case 0xC0350006L: return _T("ERROR_HV_ACCESS_DENIED"); 
    case 0xC0350007L: return _T("ERROR_HV_INVALID_PARTITION_STATE"); 
    case 0xC0350008L: return _T("ERROR_HV_OPERATION_DENIED"); 
    case 0xC0350009L: return _T("ERROR_HV_UNKNOWN_PROPERTY"); 
    case 0xC035000AL: return _T("ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE"); 
    case 0xC035000BL: return _T("ERROR_HV_INSUFFICIENT_MEMORY"); 
    case 0xC035000CL: return _T("ERROR_HV_PARTITION_TOO_DEEP"); 
    case 0xC035000DL: return _T("ERROR_HV_INVALID_PARTITION_ID"); 
    case 0xC035000EL: return _T("ERROR_HV_INVALID_VP_INDEX"); 
    case 0xC0350011L: return _T("ERROR_HV_INVALID_PORT_ID"); 
    case 0xC0350012L: return _T("ERROR_HV_INVALID_CONNECTION_ID"); 
    case 0xC0350013L: return _T("ERROR_HV_INSUFFICIENT_BUFFERS"); 
    case 0xC0350014L: return _T("ERROR_HV_NOT_ACKNOWLEDGED"); 
    case 0xC0350016L: return _T("ERROR_HV_ACKNOWLEDGED"); 
    case 0xC0350017L: return _T("ERROR_HV_INVALID_SAVE_RESTORE_STATE"); 
    case 0xC0350018L: return _T("ERROR_HV_INVALID_SYNIC_STATE"); 
    case 0xC0350019L: return _T("ERROR_HV_OBJECT_IN_USE"); 
    case 0xC035001AL: return _T("ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO"); 
    case 0xC035001BL: return _T("ERROR_HV_NO_DATA"); 
    case 0xC035001CL: return _T("ERROR_HV_INACTIVE"); 
    case 0xC035001DL: return _T("ERROR_HV_NO_RESOURCES"); 
    case 0xC035001EL: return _T("ERROR_HV_FEATURE_UNAVAILABLE"); 
    case 0xC0351000L: return _T("ERROR_HV_NOT_PRESENT"); 
    case 0xC0370001L: return _T("ERROR_VID_DUPLICATE_HANDLER"); 
    case 0xC0370002L: return _T("ERROR_VID_TOO_MANY_HANDLERS"); 
    case 0xC0370003L: return _T("ERROR_VID_QUEUE_FULL"); 
    case 0xC0370004L: return _T("ERROR_VID_HANDLER_NOT_PRESENT"); 
    case 0xC0370005L: return _T("ERROR_VID_INVALID_OBJECT_NAME"); 
    case 0xC0370006L: return _T("ERROR_VID_PARTITION_NAME_TOO_LONG"); 
    case 0xC0370007L: return _T("ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG"); 
    case 0xC0370008L: return _T("ERROR_VID_PARTITION_ALREADY_EXISTS"); 
    case 0xC0370009L: return _T("ERROR_VID_PARTITION_DOES_NOT_EXIST"); 
    case 0xC037000AL: return _T("ERROR_VID_PARTITION_NAME_NOT_FOUND"); 
    case 0xC037000BL: return _T("ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS"); 
    case 0xC037000CL: return _T("ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT"); 
    case 0xC037000DL: return _T("ERROR_VID_MB_STILL_REFERENCED"); 
    case 0xC037000EL: return _T("ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED"); 
    case 0xC037000FL: return _T("ERROR_VID_INVALID_NUMA_SETTINGS"); 
    case 0xC0370010L: return _T("ERROR_VID_INVALID_NUMA_NODE_INDEX"); 
    case 0xC0370011L: return _T("ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED"); 
    case 0xC0370012L: return _T("ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE"); 
    case 0xC0370013L: return _T("ERROR_VID_PAGE_RANGE_OVERFLOW"); 
    case 0xC0370014L: return _T("ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE"); 
    case 0xC0370015L: return _T("ERROR_VID_INVALID_GPA_RANGE_HANDLE"); 
    case 0xC0370016L: return _T("ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE"); 
    case 0xC0370017L: return _T("ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED"); 
    case 0xC0370018L: return _T("ERROR_VID_INVALID_PPM_HANDLE"); 
    case 0xC0370019L: return _T("ERROR_VID_MBPS_ARE_LOCKED"); 
    case 0xC037001AL: return _T("ERROR_VID_MESSAGE_QUEUE_CLOSED"); 
    case 0xC037001BL: return _T("ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED"); 
    case 0xC037001CL: return _T("ERROR_VID_STOP_PENDING"); 
    case 0xC037001DL: return _T("ERROR_VID_INVALID_PROCESSOR_STATE"); 
    case 0xC037001EL: return _T("ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT"); 
    case 0xC037001FL: return _T("ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED"); 
    case 0xC0370020L: return _T("ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET"); 
    case 0xC0370021L: return _T("ERROR_VID_MMIO_RANGE_DESTROYED"); 
    case 0xC0370022L: return _T("ERROR_VID_INVALID_CHILD_GPA_PAGE_SET"); 
    case 0xC0370023L: return _T("ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED"); 
    case 0xC0370024L: return _T("ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL"); 
    case 0xC0370025L: return _T("ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE"); 
    case 0xC0370026L: return _T("ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT"); 
    case 0xC0370027L: return _T("ERROR_VID_SAVED_STATE_CORRUPT"); 
    case 0xC0370028L: return _T("ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM"); 
    case 0xC0370029L: return _T("ERROR_VID_SAVED_STATE_INCOMPATIBLE"); 
    case 0x80370001L: return _T("ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED"); 
    case 0x80380001L: return _T("ERROR_VOLMGR_INCOMPLETE_REGENERATION"); 
    case 0x80380002L: return _T("ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION"); 
    case 0xC0380001L: return _T("ERROR_VOLMGR_DATABASE_FULL"); 
    case 0xC0380002L: return _T("ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED"); 
    case 0xC0380003L: return _T("ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC"); 
    case 0xC0380004L: return _T("ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED"); 
    case 0xC0380005L: return _T("ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME"); 
    case 0xC0380006L: return _T("ERROR_VOLMGR_DISK_DUPLICATE"); 
    case 0xC0380007L: return _T("ERROR_VOLMGR_DISK_DYNAMIC"); 
    case 0xC0380008L: return _T("ERROR_VOLMGR_DISK_ID_INVALID"); 
    case 0xC0380009L: return _T("ERROR_VOLMGR_DISK_INVALID"); 
    case 0xC038000AL: return _T("ERROR_VOLMGR_DISK_LAST_VOTER"); 
    case 0xC038000BL: return _T("ERROR_VOLMGR_DISK_LAYOUT_INVALID"); 
    case 0xC038000CL: return _T("ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS"); 
    case 0xC038000DL: return _T("ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED"); 
    case 0xC038000EL: return _T("ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL"); 
    case 0xC038000FL: return _T("ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS"); 
    case 0xC0380010L: return _T("ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS"); 
    case 0xC0380011L: return _T("ERROR_VOLMGR_DISK_MISSING"); 
    case 0xC0380012L: return _T("ERROR_VOLMGR_DISK_NOT_EMPTY"); 
    case 0xC0380013L: return _T("ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE"); 
    case 0xC0380014L: return _T("ERROR_VOLMGR_DISK_REVECTORING_FAILED"); 
    case 0xC0380015L: return _T("ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID"); 
    case 0xC0380016L: return _T("ERROR_VOLMGR_DISK_SET_NOT_CONTAINED"); 
    case 0xC0380017L: return _T("ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS"); 
    case 0xC0380018L: return _T("ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES"); 
    case 0xC0380019L: return _T("ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED"); 
    case 0xC038001AL: return _T("ERROR_VOLMGR_EXTENT_ALREADY_USED"); 
    case 0xC038001BL: return _T("ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS"); 
    case 0xC038001CL: return _T("ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION"); 
    case 0xC038001DL: return _T("ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED"); 
    case 0xC038001EL: return _T("ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION"); 
    case 0xC038001FL: return _T("ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH"); 
    case 0xC0380020L: return _T("ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED"); 
    case 0xC0380021L: return _T("ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID"); 
    case 0xC0380022L: return _T("ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS"); 
    case 0xC0380023L: return _T("ERROR_VOLMGR_MEMBER_IN_SYNC"); 
    case 0xC0380024L: return _T("ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE"); 
    case 0xC0380025L: return _T("ERROR_VOLMGR_MEMBER_INDEX_INVALID"); 
    case 0xC0380026L: return _T("ERROR_VOLMGR_MEMBER_MISSING"); 
    case 0xC0380027L: return _T("ERROR_VOLMGR_MEMBER_NOT_DETACHED"); 
    case 0xC0380028L: return _T("ERROR_VOLMGR_MEMBER_REGENERATING"); 
    case 0xC0380029L: return _T("ERROR_VOLMGR_ALL_DISKS_FAILED"); 
    case 0xC038002AL: return _T("ERROR_VOLMGR_NO_REGISTERED_USERS"); 
    case 0xC038002BL: return _T("ERROR_VOLMGR_NO_SUCH_USER"); 
    case 0xC038002CL: return _T("ERROR_VOLMGR_NOTIFICATION_RESET"); 
    case 0xC038002DL: return _T("ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID"); 
    case 0xC038002EL: return _T("ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID"); 
    case 0xC038002FL: return _T("ERROR_VOLMGR_PACK_DUPLICATE"); 
    case 0xC0380030L: return _T("ERROR_VOLMGR_PACK_ID_INVALID"); 
    case 0xC0380031L: return _T("ERROR_VOLMGR_PACK_INVALID"); 
    case 0xC0380032L: return _T("ERROR_VOLMGR_PACK_NAME_INVALID"); 
    case 0xC0380033L: return _T("ERROR_VOLMGR_PACK_OFFLINE"); 
    case 0xC0380034L: return _T("ERROR_VOLMGR_PACK_HAS_QUORUM"); 
    case 0xC0380035L: return _T("ERROR_VOLMGR_PACK_WITHOUT_QUORUM"); 
    case 0xC0380036L: return _T("ERROR_VOLMGR_PARTITION_STYLE_INVALID"); 
    case 0xC0380037L: return _T("ERROR_VOLMGR_PARTITION_UPDATE_FAILED"); 
    case 0xC0380038L: return _T("ERROR_VOLMGR_PLEX_IN_SYNC"); 
    case 0xC0380039L: return _T("ERROR_VOLMGR_PLEX_INDEX_DUPLICATE"); 
    case 0xC038003AL: return _T("ERROR_VOLMGR_PLEX_INDEX_INVALID"); 
    case 0xC038003BL: return _T("ERROR_VOLMGR_PLEX_LAST_ACTIVE"); 
    case 0xC038003CL: return _T("ERROR_VOLMGR_PLEX_MISSING"); 
    case 0xC038003DL: return _T("ERROR_VOLMGR_PLEX_REGENERATING"); 
    case 0xC038003EL: return _T("ERROR_VOLMGR_PLEX_TYPE_INVALID"); 
    case 0xC038003FL: return _T("ERROR_VOLMGR_PLEX_NOT_RAID5"); 
    case 0xC0380040L: return _T("ERROR_VOLMGR_PLEX_NOT_SIMPLE"); 
    case 0xC0380041L: return _T("ERROR_VOLMGR_STRUCTURE_SIZE_INVALID"); 
    case 0xC0380042L: return _T("ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS"); 
    case 0xC0380043L: return _T("ERROR_VOLMGR_TRANSACTION_IN_PROGRESS"); 
    case 0xC0380044L: return _T("ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE"); 
    case 0xC0380045L: return _T("ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK"); 
    case 0xC0380046L: return _T("ERROR_VOLMGR_VOLUME_ID_INVALID"); 
    case 0xC0380047L: return _T("ERROR_VOLMGR_VOLUME_LENGTH_INVALID"); 
    case 0xC0380048L: return _T("ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE"); 
    case 0xC0380049L: return _T("ERROR_VOLMGR_VOLUME_NOT_MIRRORED"); 
    case 0xC038004AL: return _T("ERROR_VOLMGR_VOLUME_NOT_RETAINED"); 
    case 0xC038004BL: return _T("ERROR_VOLMGR_VOLUME_OFFLINE"); 
    case 0xC038004CL: return _T("ERROR_VOLMGR_VOLUME_RETAINED"); 
    case 0xC038004DL: return _T("ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID"); 
    case 0xC038004EL: return _T("ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE"); 
    case 0xC038004FL: return _T("ERROR_VOLMGR_BAD_BOOT_DISK"); 
    case 0xC0380050L: return _T("ERROR_VOLMGR_PACK_CONFIG_OFFLINE"); 
    case 0xC0380051L: return _T("ERROR_VOLMGR_PACK_CONFIG_ONLINE"); 
    case 0xC0380052L: return _T("ERROR_VOLMGR_NOT_PRIMARY_PACK"); 
    case 0xC0380053L: return _T("ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED"); 
    case 0xC0380054L: return _T("ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID"); 
    case 0xC0380055L: return _T("ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID"); 
    case 0xC0380056L: return _T("ERROR_VOLMGR_VOLUME_MIRRORED"); 
    case 0xC0380057L: return _T("ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED"); 
    case 0xC0380058L: return _T("ERROR_VOLMGR_NO_VALID_LOG_COPIES"); 
    case 0xC0380059L: return _T("ERROR_VOLMGR_PRIMARY_PACK_PRESENT"); 
    case 0xC038005AL: return _T("ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID"); 
    case 0xC038005BL: return _T("ERROR_VOLMGR_MIRROR_NOT_SUPPORTED"); 
    case 0xC038005CL: return _T("ERROR_VOLMGR_RAID5_NOT_SUPPORTED"); 
    case 0x80390001L: return _T("ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED"); 
    case 0xC0390002L: return _T("ERROR_BCD_TOO_MANY_ELEMENTS"); 
    case 0x80390003L: return _T("ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED"); 
    case 0xC03A0001L: return _T("ERROR_VHD_DRIVE_FOOTER_MISSING"); 
    case 0xC03A0002L: return _T("ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH"); 
    case 0xC03A0003L: return _T("ERROR_VHD_DRIVE_FOOTER_CORRUPT"); 
    case 0xC03A0004L: return _T("ERROR_VHD_FORMAT_UNKNOWN"); 
    case 0xC03A0005L: return _T("ERROR_VHD_FORMAT_UNSUPPORTED_VERSION"); 
    case 0xC03A0006L: return _T("ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH"); 
    case 0xC03A0007L: return _T("ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION"); 
    case 0xC03A0008L: return _T("ERROR_VHD_SPARSE_HEADER_CORRUPT"); 
    case 0xC03A0009L: return _T("ERROR_VHD_BLOCK_ALLOCATION_FAILURE"); 
    case 0xC03A000AL: return _T("ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT"); 
    case 0xC03A000BL: return _T("ERROR_VHD_INVALID_BLOCK_SIZE"); 
    case 0xC03A000CL: return _T("ERROR_VHD_BITMAP_MISMATCH"); 
    case 0xC03A000DL: return _T("ERROR_VHD_PARENT_VHD_NOT_FOUND"); 
    case 0xC03A000EL: return _T("ERROR_VHD_CHILD_PARENT_ID_MISMATCH"); 
    case 0xC03A000FL: return _T("ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH"); 
    case 0xC03A0010L: return _T("ERROR_VHD_METADATA_READ_FAILURE"); 
    case 0xC03A0011L: return _T("ERROR_VHD_METADATA_WRITE_FAILURE"); 
    case 0xC03A0012L: return _T("ERROR_VHD_INVALID_SIZE"); 
    case 0xC03A0013L: return _T("ERROR_VHD_INVALID_FILE_SIZE"); 
    case 0xC03A0014L: return _T("ERROR_VIRTDISK_PROVIDER_NOT_FOUND"); 
    case 0xC03A0015L: return _T("ERROR_VIRTDISK_NOT_VIRTUAL_DISK"); 
    case 0xC03A0016L: return _T("ERROR_VHD_PARENT_VHD_ACCESS_DENIED"); 
    case 0xC03A0017L: return _T("ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH"); 
    case 0xC03A0018L: return _T("ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED"); 
    case 0xC03A0019L: return _T("ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT"); 
    case 0xC03A001AL: return _T("ERROR_VIRTUAL_DISK_LIMITATION"); 
    case 0xC03A001BL: return _T("ERROR_VHD_INVALID_TYPE"); 
    case 0xC03A001CL: return _T("ERROR_VHD_INVALID_STATE"); 
    case 0xC03A001DL: return _T("ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE"); 
    case 0x803A0001L: return _T("ERROR_QUERY_STORAGE_ERROR"); 
    case 0x803C0100L: return _T("SDIAG_E_CANCELLED"); 
    case 0x803C0101L: return _T("SDIAG_E_SCRIPT"); 
    case 0x803C0102L: return _T("SDIAG_E_POWERSHELL"); 
    case 0x803C0103L: return _T("SDIAG_E_MANAGEDHOST"); 
    case 0x803C0104L: return _T("SDIAG_E_NOVERIFIER"); 
    case 0x003C0105L: return _T("SDIAG_S_CANNOTRUN"); 
    case 0x803C0106L: return _T("SDIAG_E_DISABLED"); 
    case 0x803C0107L: return _T("SDIAG_E_TRUST"); 
    case 0x803C0108L: return _T("SDIAG_E_CANNOTRUN"); 
    case 0x803C0109L: return _T("SDIAG_E_VERSION"); 
    case 0x803C010AL: return _T("SDIAG_E_RESOURCE"); 
    case 0x803C010BL: return _T("SDIAG_E_ROOTCAUSE"); 
    case 0x80548201L: return _T("E_MBN_CONTEXT_NOT_ACTIVATED"); 
    case 0x80548202L: return _T("E_MBN_BAD_SIM"); 
    case 0x80548203L: return _T("E_MBN_DATA_CLASS_NOT_AVAILABLE"); 
    case 0x80548204L: return _T("E_MBN_INVALID_ACCESS_STRING"); 
    case 0x80548205L: return _T("E_MBN_MAX_ACTIVATED_CONTEXTS"); 
    case 0x80548206L: return _T("E_MBN_PACKET_SVC_DETACHED"); 
    case 0x80548207L: return _T("E_MBN_PROVIDER_NOT_VISIBLE"); 
    case 0x80548208L: return _T("E_MBN_RADIO_POWER_OFF"); 
    case 0x80548209L: return _T("E_MBN_SERVICE_NOT_ACTIVATED"); 
    case 0x8054820AL: return _T("E_MBN_SIM_NOT_INSERTED"); 
    case 0x8054820BL: return _T("E_MBN_VOICE_CALL_IN_PROGRESS"); 
    case 0x8054820CL: return _T("E_MBN_INVALID_CACHE"); 
    case 0x8054820DL: return _T("E_MBN_NOT_REGISTERED"); 
    case 0x8054820EL: return _T("E_MBN_PROVIDERS_NOT_FOUND"); 
    case 0x8054820FL: return _T("E_MBN_PIN_NOT_SUPPORTED"); 
    case 0x80548210L: return _T("E_MBN_PIN_REQUIRED"); 
    case 0x80548211L: return _T("E_MBN_PIN_DISABLED"); 
    case 0x80548212L: return _T("E_MBN_FAILURE"); 
    case 0x80548218L: return _T("E_MBN_INVALID_PROFILE"); 
    case 0x80548219L: return _T("E_MBN_DEFAULT_PROFILE_EXIST"); 
    case 0x80548220L: return _T("E_MBN_SMS_ENCODING_NOT_SUPPORTED"); 
    case 0x80548221L: return _T("E_MBN_SMS_FILTER_NOT_SUPPORTED"); 
    case 0x80548222L: return _T("E_MBN_SMS_INVALID_MEMORY_INDEX"); 
    case 0x80548223L: return _T("E_MBN_SMS_LANG_NOT_SUPPORTED"); 
    case 0x80548224L: return _T("E_MBN_SMS_MEMORY_FAILURE"); 
    case 0x80548225L: return _T("E_MBN_SMS_NETWORK_TIMEOUT"); 
    case 0x80548226L: return _T("E_MBN_SMS_UNKNOWN_SMSC_ADDRESS"); 
    case 0x80548227L: return _T("E_MBN_SMS_FORMAT_NOT_SUPPORTED"); 
    case 0x80548228L: return _T("E_MBN_SMS_OPERATION_NOT_ALLOWED"); 
    case 0x80548229L: return _T("E_MBN_SMS_MEMORY_FULL"); 
    case 0x802A0001L: return _T("UI_E_CREATE_FAILED"); 
    case 0x802A0002L: return _T("UI_E_SHUTDOWN_CALLED"); 
    case 0x802A0003L: return _T("UI_E_ILLEGAL_REENTRANCY"); 
    case 0x802A0004L: return _T("UI_E_OBJECT_SEALED"); 
    case 0x802A0005L: return _T("UI_E_VALUE_NOT_SET"); 
    case 0x802A0006L: return _T("UI_E_VALUE_NOT_DETERMINED"); 
    case 0x802A0007L: return _T("UI_E_INVALID_OUTPUT"); 
    case 0x802A0008L: return _T("UI_E_BOOLEAN_EXPECTED"); 
    case 0x802A0009L: return _T("UI_E_DIFFERENT_OWNER"); 
    case 0x802A000AL: return _T("UI_E_AMBIGUOUS_MATCH"); 
    case 0x802A000BL: return _T("UI_E_FP_OVERFLOW"); 
    case 0x802A000CL: return _T("UI_E_WRONG_THREAD"); 
    case 0x802A0101L: return _T("UI_E_STORYBOARD_ACTIVE"); 
    case 0x802A0102L: return _T("UI_E_STORYBOARD_NOT_PLAYING"); 
    case 0x802A0103L: return _T("UI_E_START_KEYFRAME_AFTER_END"); 
    case 0x802A0104L: return _T("UI_E_END_KEYFRAME_NOT_DETERMINED"); 
    case 0x802A0105L: return _T("UI_E_LOOPS_OVERLAP"); 
    case 0x802A0106L: return _T("UI_E_TRANSITION_ALREADY_USED"); 
    case 0x802A0107L: return _T("UI_E_TRANSITION_NOT_IN_STORYBOARD"); 
    case 0x802A0108L: return _T("UI_E_TRANSITION_ECLIPSED"); 
    case 0x802A0109L: return _T("UI_E_TIME_BEFORE_LAST_UPDATE"); 
    case 0x802A010AL: return _T("UI_E_TIMER_CLIENT_ALREADY_CONNECTED"); 
  };
#endif
  return DErrHRESULTDefault(aError);
}

DErr_type DErrFACILITYDefault = &_DErr_Default;
DErr_type DErrWin32Default = &_DErr_Default;
DErr_type DErrSEVERITYDefault = &_DErr_Default;
DErr_type DErrHRESULTDefault = &_DErr_Default;
